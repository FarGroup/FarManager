#
# Designed for use Borland C++ compiller with version BCB >1.0
#
.autodepend
.silent

!if !$d(LIBROOT)
  LIBROOT = .
!endif
!if !$d(FARROOT)
  FARROOT = .
!endif
!if !$d(PROJECT)
  PROJECT = _dummy
!endif

# FStd lib
OUTDIR      = $(FARROOT)\OUTPUT
!if !$d(CROOT)
CROOT       = D:\CB5
!endif
CC          = $(CROOT)\bin\bcc32.exe
LIB         = $(CROOT)\bin\tlib.exe
LINKER      = $(CROOT)\bin\ilink32.exe
IMPLIB      = $(CROOT)\bin\implib.exe
RCC         = $(CROOT)\bin\brcc32.exe

#--  INCLUDE  -----------------------------
# Standart C\CPP headers directory
#
STDINCLUDE  = $(CROOT)\include
#
# Full headers directory list, inlude FAR specified
#
INCLUDE     = $(FARROOT)\;;$(STDINCLUDE);

#--  LIB ----------------------------------
# Standart C\CPP library directory
#
STDLIBS     = $(CROOT)\lib
#
# Full libraries directory list, inlude FAR specified
#
LIBS        = $(FARROOT)\;$(STDLIBS);

#-- COMPILLER FLAGS ----------------------
# Command line compiller flags
#   -5  - use 586 instruction
#   -C  - use nested comments
#   -RT - generate RTTI
#   -a2 - align to 2 byte boundaries
#   -v  - geterate line number info
#   -y  - produce debug info
#   -I  - set include directories
#   -c  - Compile single unit
#   -Ox - optiomizations
#   -Hc - cache precompilled
#   -k  - std stack frame
#
#              -C -5 -RT- -v- -y- -a2 -c \
#              -Od -Hc -w -k -r- -vi- -c -b- -w-par -w-inl -Vx -Ve -x \
CFLAGS      =  -Hc -Vx -Ve -C -fp -ff -X- -r- -a2 -6 -b- -k -y- \
               -tWC -tWM- -c -w-par -w-inl \
               -I$(INCLUDE) -H=$(OUTDIR)\plugin.csm \
               -D__USE_TRAPLOGER__=1

#-- LINKER FLAGS ------------------------
#   -Vx - set linker version
#   -x  - do not generate mapfile
#   -M  - demangle names in map
#   -s  - detailed map
#   -v  - generate debug info
#   -L  - set library directories
#   -Gi - generate import library
#   -GD - generate DRC
#
LFLAGS   = -V4.0 -Tpd -aa -L$(LIBS);;

!if $d(MAPFILE)
LFLAGS   = -M -s $(LFLAGS)
!else
LFLAGS   = -x $(LFLAGS)
!endif

!if $d(DEBUG)
CFLAGS   = -Od -y -v -D_DEBUG $(CFLAGS) /D__FILELOG__=1
LFLAGS   = -v $(LFLAGS)
!else
CFLAGS   = -O2 -N- -RT- -d -v- -vi- $(CFLAGS)
LFLAGS   = -Gn $(LFLAGS)
!endif

#-- RESOURCE FLAGS ------------------------
#   -i  - set include directories
RFLAGS   = -i$(INCLUDE)

#-- C startup OBJECTS, LIBS ---------------
COBJS    = c0d32.obj
CCONOBJS = c0x32.obj
CLIBS    = import32.lib cw32.lib

#############################################################################
# Implicit source rules.                                                    #
#############################################################################
.cpp.obj:
    @echo Making $*.cpp
    @echo ::$(CC) $(CFLAGS) $(CFLAG_ADD) -o$*.obj $**
    $(CC) $(CFLAGS) $(CFLAG_ADD) -o$*.obj $**

.c.obj:
    @echo Making $*.c
    $(CC) $(CFLAGS) $(CFLAG_ADD) -o$*.obj $**

.rc.res:
    @echo Making $*.rc
    $(RCC) $(RFLAGS) $<

#############################################################################
# PLUGIN PROJECT                                                            #
#############################################################################
!if $d(DEBUG)
$(PROJECT): $(POBJS) $(PDEF) $(PRES) $(DELTMP)
    -echo Debug linking...
    $(LINKER) @&&!
    $(LFLAGS) $(LFLAG_ADD) +
    $(COBJS) $(POBJS), +
    $(PROJECT), $(MAPFILE), +
    $(CLIBS), +
    $(PDEF), +
    $(PRES)
!
    -@if exist $(PROJECT:fll=tds) del $(PROJECT:fll=tds) >nul
!else
$(PROJECT): $(POBJS) $(PDEF) $(PRES) $(DELTMP)
    -echo Release linking...
    $(LINKER) @&&!
    $(LFLAGS) $(LFLAG_ADD) +
    $(COBJS) $(POBJS), +
    $(PROJECT), $(MAPFILE), +
    $(CLIBS), +
    $(PDEF), +
    $(PRES)
!
    -@if exist $(PROJECT:fll=tds) del $(PROJECT:fll=tds) >nul
!endif

#############################################################################
# CONSOLE ADDITIONAL                                                        #
#############################################################################
!if "$(CONEXE)" != ""
$(CONEXE): $(CONOBJS) $(CONDEF) $(CONRES)
    $(LINKER) @<<
    $(CLIBS) $(CONOBJS)
    /OUT:$(CONEXE)
    $(PROJCONDEF)
    $(LBASEFLAGS) $(LFLAG_ADD)
    $(CONRES)
<<
    -@if exist $(CONEXE:exe=ilc) del $(CONEXE:exe=ilc) >nul
    -@if exist $(CONEXE:exe=ild) del $(CONEXE:exe=ild) >nul
    -@if exist $(CONEXE:exe=ilf) del $(CONEXE:exe=ilf) >nul
    -@if exist $(CONEXE:exe=ils) del $(CONEXE:exe=ils) >nul
    -@if exist $(CONEXE:exe=lib) del $(CONEXE:exe=lib) >nul
    -@if exist $(CONEXE:exe=tds) del $(CONEXE:exe=tds) >nul
!endif
