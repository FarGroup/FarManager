.Language=Belarusian,Belarusian (Беларуская)
.PluginContents=FAR Commands
.Options CtrlStartPosChar=^<wrap>


@Contents
$ #FAR Commands#
   Дадатак FAR Commands (або FARCmds) прадстаўляе дадатковыя магчымасці,
якія можна выкарыстаць у меню карыстальніка, асацыяцыях файлаў або камандным радку.

   Акрамя таго, каманды можна ужывацца у ~Меню Карыстальніка~@:UserMenu@,
у ~асацыяцыі файлаў~@:FileAssoc@ і ў дыялогавым акне ~Ужыць каманду~@:ApplyCmd@ (#Ctrl-G#)

  #Сінтаксіс#

   #command:#[#options#] #object#

   #command# - адно з наступных значэнняў:
             ~view~@View@     - прагляд
             ~edit~@Edit@     - рэдагаванне
             ~goto~@Goto@     - пераход да патрэбнага файла або каталогу
             ~clip~@Clip@     - памяшканне дадзеных у буфер абмену
             ~whereis~@WhereIs@  - пошук і пераход на азначаны аб'ект
             ~link~@Link@     - стварэнне лінкаў
             ~run~@Run@      - выкананне каманды
             ~load~@Load@     - load plugin
             ~unload~@Unload@   - unload plugin

   #options# - ^<wrap>optional parameters, see corresponding commands descriptions.

   #object#  - ^<wrap>адно з наступных значэнняў:
             #імя файла# - ^<wrap>імя файла для прагляду, рэдагавання, пераходу.
             #шлях#      - ^<wrap>шлях для пераходу да патрэбнага каталога або файлу.
             #<каманда#  - ~перахапіць вывад~@Direction@ каманды аперацыйнай сістэмы. Сімвал #<# абавязковы.

   Гл. таксама: ~Наладка FAR Commands~@Config@ | ~Заўвагі~@Remark@


@Load
$ #Каманда Load#
   Каманда #load# дазваляе загружаць дадатак уручную.

   - Шлях да дадатка можа быць прадстаўлены ў якасці аргументаў каманды:

      #load:DLL_module_name#

   - альбо абраны з прадстаўленых "#filename#":

      #load: <filename#

   Гл. таксама: ~unload~@Unload@ | ~Заўвагі~@Remark@ | ~Змест~@Contents@


@Unload
$ #Каманда Unload#
   Каманда #unload# дазваляе выгружаць дадатак уручную.

   - Шлях да дадатка можа быць прадстаўлены ў якасці аргументаў каманды:

      #unload:DLL_module_name#

   - альбо абраны з прадстаўленых "#filename#":

      #unload: <filename#

   Plugin GUID can also be used instead of DLL path.

   Гл. таксама: ~load~@Load@ | ~Заўвагі~@Remark@ | ~Змест~@Contents@


@Clip
$ #Каманда Clip#
   Каманда #clip# дазваляе змясціць дадзеныя ў буфер абмену Windows.
Пад дадзенымі разумеецца змесціва азначанага файла або вывад ад
якога-небудзь праграмы. У буфер абмену змяшчаюцца ўсе дадзеныя да
сімвала з кодам #0x00#.
Размер помещаемых данных можно задавать в диалоге конфигурации плагина. По
умолчанию - 1 MB.

   #clip:імяфайла#

   Перадаваемыя камандзе дадзеныя нулявога памера ачишчыаюць буфер абмену.

   Гл. таксама: ~Перахоп вываду~@Direction@ | ~Заўвагі~@Remark@ | ~Змест~@Contents@


@Run
$ #Каманда Run#
   Каманда #run# дазваляе выканаць #каманду# аперацыйнай сістэмы з
перахопам яе вываду ў зададзены файл #"імяфайла"#. Вынік можа быць
мадыфікатары ~перахопа вываду~@Direction@.

   #run:імяфайла<каманда#

   Гл. таксама: ~Перахоп вываду~@Direction@ | ~Заўвагі~@Remark@ | ~Змест~@Contents@


@View
$ #Каманда View#
   Каманда #view# дазваляе адчыніць для прагляду ва ~убудаваным вьюверы~@:Viewer@
азначаны файл "#імяфайла#":

   #view:імяфайла#

   Гл. таксама: ~edit~@Edit@ | ~Перахопт вываду~@Direction@ | ~Заўвагі~@Remark@ | ~Змест~@Contents@


@Edit
$ #Каманда Edit#
   Каманда #edit# дазваляе адчыніць для рэдагавання ва ~ўбудаваным рэдактары~@:Editor@
азначаны файл "#імяфайла#".

      #edit:імяфайла#

   Калі файл "#імяфайла#" не існуе, то ён ствараецца. Калі пасля стварэннi
i выхаду з рэдактара файл не зменены, то ён выдаляецца (паводзіны прыбліжанае
да Shift-F4).

   Пры адкрыцці файла можна адразу перайсці ў зададзеную пазіцыю. Для гэтага ў квадратных дужках
трэба паказаць патрэбны радок і калонку (любую кампаненту можна не паказваць, першапачаткова адна будзе роўная 1).
Квадратныя дужкі абавязковыя!

      #edit:[радок] імяфайла#

      #edit:[радок,калонка] імяфайла#

      #edit:[,калонка] імяфайла#

   У якасці радка і калонкі дапускаецца ўказваць зменныя асяроддзя, якія змяшчаюць лічбы.
Напрыклад, пераменная асяроддзя Line роўная 10. У гэтым выпадку адбудзецца пазіцыянаванне курсора
на 10 радок (пазіцыя ў радку 1) у файле "File.txt":

   edit:[%Line%,] File.txt

   Калі iмя файла ўтрымоўвае квадратныя дужкі, напрыклад, "[1].txt", то для
карэктнага адчынення такога файла ў рэдактары неабходна перад імем выставіць
хаця б адзін падзельнік (напрыклад, прабел) або ўзяць імя файла ў падвойныя двукоссі:

   edit: [1].txt
   edit:"[1].txt"

   Гл. таксама: ~view~@View@ | ~Перахоп вываду~@Direction@ | ~Заўвагі~@Remark@ | ~Змест~@Contents@


@Goto
$ #Каманда Goto#
   Каманда #goto# дазваляе перайсці да зададзенага файла або каталогу адным
з 2-х спосабаў:

   1. Шлях да файла або каталогу паказваецца непасрэдна ў камандзе

      #goto:шлях#

   2. Шлях да файла або каталогу бярэцца з азначанага файла "#імяфайла#"

      #goto: <імяфайла#

   Калі параметр "#шлях#" паказвае імя каталога, які канчаецца
сімвалам '#\#', то дадатак пераходзіць у каталог "#шлях#". Калі iмя
каталога, азначанае ў параметру "#шлях#", не канчаецца '#\#',
то на каталогу #шлях# усталёўваецца курсор у панэлях.

   Калі файл "#імяфайла#" з'яўляецца цэьлікам Windows, то дадатак пераходзіць
да аб'екта, на які спасылаецца lnk-файл.

   Пры выключаных панэлях курсор на патрэбны аб'ект не ўсталёўваецца,
адбываецца толькі пераход у патрэбны каталог.

   Дадатак ажыцяўляе пераход як наказана, не спрабуючы знайсці файлавы аб'ект.

   Гл. таксама: ~whereis~@WhereIs@ | ~Заўвагі~@Remark@ | ~Змест~@Contents@


@Link
$ #Каманда Link#
   Каманда #ln# дазваляе ствараць і выдаляць ~сувязі~@:HardSymLink@ для
файлаў і каталогаў. З дапамогай каманды "ln" таксама можна мантыраваць лакальныя
дыскі на файлавую сістэму.

   #link:[/msg] [/n] крыніца прызначэнне#

   Калі "крыніца":

     #Файл#   : ствараецца жорсткая сувязь
     #Каталог#: ствараецца сімвалічная сувязь
     #Дыск#   : ^<wrap>мантыруецца дыск, калі "дыск" паслядоўнасць
"#літара_дыска:\#", напрыклад, "C:\"

   Ключ #/msg# служыць для вываду паведамленняў аб памылках.

   Ключ #/n# адключае аўтаматычнае абнаўленне панэляў пасля стварэнні сувязяў.

   Перамыкач #/s# дазваляе ствараць сімвалічныя спасылкі (#symlinks#).
   Можна стварыць сімвалічны спасылак на файл (замест жорсткай спасылкі)
або сімвалічная спасылка на каталог (замест злучэння з каталогам).
   Перамыкач ставіцца да Windows Vista або больш позняй версіі.
Ігнаруецца пры мантажы дыскаў.

   Мантыраваныя дыскі (volume mount points) - асаблівасць,
якая дазваляе адлюстроўваць асобныя дыскі на каталогі. Напрыклад:.

   #link: E:\ C:\cdrom#

    Пасля гэтай каманды каталог C:\cdrom адлюструе змесціва дыска E:

   Гл. таксама: ~Заўвагі~@Remark@ | ~Змест~@Contents@


@WhereIs
$ #Каманда WhereIs#
   Каманда #whereis# шукае азначаны аб'ект і ў выпадку паспяховага пошуку
пераходзіць да яго.

   #whereis:імяфайла#

   Другі спосаб - імя аб'екта пошуку бярэцца з зададзенага файла "#імяфайла#"

      #whereis: <імяфайла#

   Пошук ажыццяўляецца ў наступным парадку:

   1. Бягучы каталог
   2. Каталог, на які паказвае пераменная акружэння %FARHOME%
   3. Каталогі, якія пералічаныя ў пераменнай асяроддзі #PATH#
   4. Windows 9х: Сістэмны каталог Windows (SYSTEM).
      Windows NT: 32-разрадны сістэмны каталог Windows (SYSTEM32)
   5. Windows NT: 16-разрадны сістэмны каталог Windows (SYSTEM)
   6. Каталог Windows.
   7. Змесціва веткі рэестру:
      #HKCU\Software\Microsoft\Windows\CurrentVersion\App Paths#
   8. Змесціва веткі рэестру:
      #HKLM\Software\Microsoft\Windows\CurrentVersion\App Paths#

   Дадатак спрабуе знайсці файлавы аб'ект спачатку як паказана, а потым вырабляе
пошук аб'екта з пашырэннямі з спісу зменнай асяроддзя PATHEXT.

   Пры выключаных панэлях курсор на патрэбны аб'ект не ўсталёўваецца,
адбываецца толькі пераход у патрэбны каталог.

   Гл. таксама: ~goto~@Goto@ | ~Заўвагі~@Remark@ | ~Змест~@Contents@


@Direction
$ #Перахоп вываду#
   Дадатак умее перахапляць вывад азначанай каманды #"<каманда"# або #"<<каманда"#.

    #каманда# - #[#stream#][#mode#][#|шлях|#]#command#.

    #stream# - кіраванне перахопам вываду каманды.
             #1# - ^<wrap>перахапіць толькі стандартны струмень вываду #stdout#.
             #2# - ^<wrap>перахапіць толькі стандартны струмень вываду памылак #stderr#.
             #*# - ^<wrap>перахапіць і #stderr# і #stdout# як адзін струмень.
             #?# - ^<wrap>перахапіць #stderr# і #stdout# як розныя струмені.
                 ^<wrap>У камандах ~view~@View@ i ~edit~@Edit@ перахопленыя струмені будуць адчыненыя ў розных вокнах. У іншых камандах роўныя #*#.

             ^<wrap>Default value of this parameter can be defined in ~config~@Config@.

    #mode#   - ^<wrap>кіраванне вывадам #каманды# на экран у абыход стандартных струменяў уводу/вываду.
             #># - ^<wrap>ігнараваць кансольны вывад выконваемай праграмы і адлюстраваць толькі паведамленне аб яе выкананні.
             #<# - захоўваць кансольны вывад і зрабіць яго даступным для прагляду па #Ctrl-O#,
             #+# - аналагічнай #<#, але выводзіць на экран не толькі кансольны, але і парехоплены вывад выконваемай праграмы.

             ^<wrap>Default value of this parameter can be defined in ~config~@Config@.
             ^<wrap>Параметр #mode# можно указывать только после #stream#.

    #|шлях|# - ^<wrap>каманда можа быць выкананая ў каталогу, адрозненам ад бягучага, пры ўказанні дадзенага параметру (заключанага ў сімвалы '#|#').
             Прыклад: #edit:<|%TEMP%|dir#.

   Вывад праграмы можа быць адчынены ў праглядальніку: #~view~@View@:<каманда#
     або ў рэдактары:                      #~edit~@Edit@:<каманда#
     або змешчана ў буфер абмену:          #~clip~@Clip@:<каманда#
     або захаваны на дыску:                #~run~@Run@:імяфайла<каманда#

  #Заўвагі#

   1. ^<wrap>Усё, што размешчанае пасля сімвала '#<#' і неабавязковых
мадыфікатараў, перадаецца каманднаму працэсару (%COMSPEC%).

   2. ^<wrap>Вынік працы каманды змяшчаецца ва часовы файл, каторы будзе аўтаматычна выдалены,
калі больш не патрэбны FAR`у.

   3. ^<wrap>Некаторыя праграмы ажыццяўляюць вывад на экран не праз
стандартны струмень вываду, перахопліваемы дадаткам, а непасрэдна на кансоль.
Каб захаваць кансольны вывад і зрабіць яго даступным для прагляду па #Ctrl-O#,
або наадварот, ігнараваць яго, выкарыстайце мадыфікатары '#<#', '#>#' і '#+#'.
      ^<wrap>Дадзеныя паводзіны можа быць замацованае як паводзіны па змаўчанню ў ~наладках дадатка~@Config@.

   4. ^<wrap>Калі налада #stream# роўная #1# ці #2#, то пачатак тэксту
каманды павінна быць аддзелена ад яго якім-небудзь сімвалам.

   5. ^<wrap>Калі #command# паказана без шляху, то дадатак спрабуе знайсці выконваемы
модуль, як гэта робіць каманда ~whereis~@WhereIs@.

  #Examples:#

   Execute the command "#command#" and redirect its output to the editor:
     #edit:<command#

   Possible cases with the parameter #stream#=#1#:
     #edit:<1 command#
     #edit:<1"command"#
     #edit:<1+command#
     #edit:<1|%TEMP%|command#

   Гл. таксама: ~Заўвагі~@Remark@ | ~Змест~@Contents@


@Remark
$ #Заўвагі#
   1. ^<wrap>Для прэфікса #far# імёны камандаў можна скарачаць да першай літары.

   2. Дапушчаецца заключаць у двукоссі параметры #імяфайла#, #шлях# і #каманда#.

   3. Дапушчаецца выкарыстанне пераменных асяроддзя.

   4. Калі Вы памыліцеся ў наборы, то з'явіцца падказка.

   Гл. таксама: ~Змест~@Contents@


@Config
$ #Наладка FAR Commands#
 #Экранны вывад знешніх камандаў# Кіраванне ~вывадам~@Direction@ праграм на экран:

   #Хаваць экранны вывад#         Дазваляе схаваць вывад праграмы.
   #знешніх камандаў#             Будзе адлюстроўвацца толькі паведамленне аб
                                памеры перахопленага вываду.
                                Аналагічна выкарыстанню #<># замест #<#.

   #Захоўваць экранны вывад#      Дазваляе захаваць для прагляду па
   #вонкавых камандах#            #Ctrl-O# тэкст, які праграмы
                                выводзяць непасрэдна на кансоль.
                                Аналагічна выкарыстанню #<<# замест #<#.

   #Капіраваць перахоплены#       Дазваляе захаваць для прагляду па
   #вывад на экран#               #Ctrl-O# як тэкст, вывадзімы на
                                кансоль, так і перахоплены вывад.
                                Аналагічна выкарыстанню #<+# замест #<#.

 #Перахоп вываду#                 Кіраванне перахопам ~вываду~@Direction@ праграм:

   #Перахапіць#                   Перахапіць струмень стандартнага
   #stdout і stderr#              вываду #stdout# і струмень вываду памылак
                                #stderr# як адзіны струмень вываду.
                                Аналагічна выкарыстанню #<*# замест #<#.

   #Перахапіць толькі stdout#     ^<wrap>Перахапіць толькі #stdout# (стандартны вывад).
                                Аналагічна выкарыстанню #<1# замест #<#.

   #Перахапіць толькі stderr#     ^<wrap>Перахапіць толькі #stderr# (вывад памылак).
                                Аналагічна выкарыстанню #<2# замест #<#.

   #Перахапіць#                   Перахапіць #stdout# і #stderr#
   #stdout і stderr паасобна#     незалежна. Мае сэнс толькі ў
                                камандах #far:view <# і #far:edit <#.
                                У астатніх выпадках аналагічна #<*#.
                                Не сумяшчальны з #<+#.
                                Аналагічна выкарыстанню #<?# замест #<#.

   #View/edit empty files#       With this options off, zero sized
                               files will not be opened for viewing
                               or editing.

 #Other#

   #Edit new files#              Allows to open the editor with non
                               existing files.

   #The size of read data#       ^<wrap>Позволяет задавать максимальный размер
считываемых из файла данных в командах ~clip~@clip@, ~goto~@goto@ и ~whereis~@whereis@.
                               По умолчанию - 1048576 (1 MB).
                               Максимальное значение - 4294967295 (4 GB-1).
                               Пустое значение или 0 заменяется на 1048576 (1 MB).

  Гл. таксама: ~Змест~@Contents@
