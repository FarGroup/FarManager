.Language=Ukrainian,Ukrainian (Українська)
.PluginContents=FAR Commands
.Options CtrlStartPosChar=^<wrap>


@Contents
$ #FAR Commands#
   Плагін FAR Commands (або FARCmds) надає додаткові можливості, які можна використовувати в командному рядку.

   Ці оманди також можуть використовуватися в ~меню користувача~@:UserMenu@,
in ~асоціаціях файлів~@:FileAssoc@, та діалозі ~Застосувати команду~@:ApplyCmd@ (#Ctrl-G#)

 #Синтаксис#

   #command:#[#options#] #object#

   #command# - одне з наступних значень:
             ~view~@View@    - перегляд
             ~edit~@Edit@    - редагування
             ~goto~@Goto@    - перехід до потрібного файла або каталогу
             ~clip~@Clip@    - приміщення даних до буфера обміну
             ~whereis~@WhereIs@ - пошук і перехід на зазначений об'єкт
             ~link~@Link@      - створення зв'язків
             ~run~@Run@     - виконання команд
             ~load~@Load@     - load plugin
             ~unload~@Unload@   - unload plugin

   #options#   - опціональні параметри, дивись описи відповідних команд.

   #object#    - одне з наступних значень:
             #ім'я_файла# - ^<wrap>ім'я файла для перегляду, редагування, переходу.
             #шлях#       - ^<wrap>шлях для переходу до потрібного каталогу або файла.
             #<команда#   - ^<wrap>~перехопити вивід~@Direction@ команди операційної системи. Символ #<# обов'язковий.

   Див. також: ~Конфігурування FAR Commands~@Config@ | ~Зауваження~@Remark@


@Load
$ #The Load command#
   The #load# command allows to load plugins manually.

   - Plugin path can be provided as a command argument:

      #load:DLL_module_name#

   - or picked from provided "#filename#":

      #load: <filename#

   See also: ~unload~@Unload@ | ~Зауваження~@Remark@ | ~Зміст~@Contents@


@Unload
$ #The Unload command#
   The #unload# command allows to unload plugins manually.

   - Plugin path can be provided as a command argument:

      #unload:DLL_module_name#

   - or picked from provided "#filename#":

      #unload: <filename#

   Plugin GUID can also be used instead of DLL path.

   See also: ~load~@Load@ | ~Зауваження~@Remark@ | ~Зміст~@Contents@


@Clip
$ #Команда Clip#
   Команда #clip# дозволяє помістити дані до буфера обміну Windows.
Під даними мається на увазі вміст зазначеного файла або вивід від
якої-небудь програми. До буфера обміну вміщуються всі дані до символу
з кодом #0x00#.
Размер помещаемых данных можно задавать в диалоге конфигурации плагина. По
умолчанию - 1 MB.

   #clip ім'я_файла#

   Передаваемые команде данные нулевого размера очищают буфер обмена.

   Див. також: ~Перехоплення виводу~@Direction@ | ~Зауваження~@Remark@ | ~Зміст~@Contents@


@Run
$ #Команда Run#
   Команда #run# дозволяє виконати #команду# операційної системи з
перехопленням її виводу у заданий файл #"ім'я_файла"#. Використовуючи
модифікатори ~перехоплення виводу~@Direction@ вивід може бути також відображений
на екрані або прихований від користувача.

   #run:ім'я_файла<команда #

   Див. також: ~Перехоплення виводу~@Direction@ | ~Зауваження~@Remark@ | ~Зміст~@Contents@


@View
$ #Команда View#
   Команда #view# дозволяє відкрити для перегляду в
~убудованій програмі перегляду~@:Viewer@ заданий файл "#ім'я_файла#":

   #view:ім'я_файла#

   Див. також: ~edit~@Edit@ | ~Перехоплення виводу~@Direction@ | ~Зауваження~@Remark@ | ~Зміст~@Contents@


@Edit
$ #Команда Edit#
   Команда #edit# дозволяє відкрити для редагування в
~убудованому редакторі~@:Editor@ заданий файл "#ім'я_файла#".

      #edit:ім'я_файла#

   Якщо файл "#ім'я_файла#" не існує, то він створюється. Якщо після
створення й виходу з редактора файл не змінений, то він видаляється
(поведінка наближена до Shift-F4).

   Відкрити файл для редагування і перейти в задану позицію. Для этого в квадратных скобках
надо указать нужную строку и колонку (любую компоненту можно не указывать, по умолчнию одна будет равна 1).
Квадратные скобки обязательны!

      #edit:[рядок] ім'я_файла#

      #edit:[рядок,стовпчик] ім'я_файла#

      #edit:[,стовпчик] ім'я_файла#

   В качестве строки и колонки допускается указывать переменные среды, содержащие числа.
Например, переменная среды Line равна 10. В этом случае произойдёт позиционирование курсора
на 10 строку (позиция в строке 1) в файле "File.txt":

   edit:[%Line%,] File.txt

   Якщо ім'я файла містить квадратні дужки, наприклад, "[1].txt", то
для коректного відкриття такого файла в редакторі необхідно перед
ім'ям вставити хоча б один роздільник (наприклад, пробіл) або взяти
ім'я файла в подвійні лапки:

   edit: [1].txt
   edit:"[1].txt"

   Див. також: ~view~@View@ | ~Перехоплення виводу~@Direction@ | ~Зауваження~@Remark@ | ~Зміст~@Contents@


@Goto
$ #Команда Goto#
   Команда #goto# дозволяє перейти до заданого файла або каталогу одним
із 2-х способів:

   1. Шлях до файла або каталогу вказується безпосередньо у команді

      #goto:шлях#

   2. Шлях до файла або каталогу береться із заданого файла "#ім'я_файла#"

      #goto: <ім'я_файла#

   Якщо параметр "#шлях#" вказує ім'я каталогу і закінчується символом
'#\#' плагін переходить до каталогу "#шлях#". Якщо ж ім'я каталогу, що
зазначене у параметрі "#шлях#", не закінчується символом '#\#', курсор
у панелях установлюється на вказаному каталозі.

   Если файл "#имяфайла#" является ярлыком Windows, то плагин переходит
к объекту, на который ссылается lnk-файл.

   При вимкнених панелях курсор на потрібний об'єкт не встановлюється,
відбувається тільки перехід до потрібного каталогу.

   Плагин осуществляет переход как указано, не пытаясь найти файловый объект.

   Див. також: ~whereis~@WhereIs@ | ~Зміст~@Contents@ | ~Зауваження~@Remark@


@Link
$ #Команда Link#
    Команда #link# дозволяє створювати й видаляти ~зв'язки~@:HardSymLink@ для
файлів і каталогів. Для файлів створюються жорсткі зв'язки, для каталогів -
символічні. За допомогою команди "ln" також можна монтувати локальні
диски на файлову систему (т.зв. "volume mount points")

   #link:#[#/msg#] [#/n#] [#/s#] джерело призначення#

   Якщо "джерело":

     #Файл#    - створюється жорсткий зв'язок
     #Каталог# - створюється символічний зв'язок
     #Диск#    - монтується диск, якщо "диск" - послідовність
               'літера_диска' ':' '\', наприклад, "C:\"

   Ключ #/msg# служить для виводу повідомлень про помилки.

   Ключ #/n# відключає автоматичне оновлення панелей після створення зв'язків.

   Switch #/s# allows to make symbolic links (#symlinks#).
   It's possible to create a file symlink (instead of a hardlink)
or a folder symlink (instead of folder junction).
   The switch is relevant to Windows Vista or higher.
Ignored when mounting drives.

   Монтовані диски (volume mount points) - особливість,
що дозволяє відображати окремі диски на каталоги. Наприклад, після
викоання команди

   #link: E:\ C:\cdrom#

 у папці C:\cdrom буде відображатися уміст диска E:

   Див. також: ~Зміст~@Contents@ | ~Зауваження~@Remark@


@WhereIs
$ #Команда WhereIs#
   Команда #whereis# шукає зазначений об'єкт і у випадку вдалого пошуку
переходить до нього.

   #whereis:ім'я_файла#

   Второй способ - имя объекта поиска берётся из заданного файла "#имяфайла#"

      #whereis: <имяфайла#

   Пошук здійснюється у наступному порядку:

   1. Поточний каталог
   2. The directory pointed to by the environment variable %FARHOME%
   3. Каталоги, що перераховані у змінній оточення #PATH#
   4. Windows 95: Системний каталог Windows (SYSTEM),
      Windows NT: 32-бітний системний каталог Windows (SYSTEM32)
   5. Windows NT: 16-бітний системний каталог Windows (SYSTEM)
   6. Каталог Windows
   7. Уміст гілки реєстру:
      #HKCU\Software\Microsoft\Windows\CurrentVersion\App Paths#
   8. Уміст гілки реєстру:
      #HKLM\Software\Microsoft\Windows\CurrentVersion\App Paths#

   Плагин пытается найти файловый объект сначала как указано, а затем производит
поиск объекта с расширениями из списка переменной среды PATHEXT.

   При вимкнених панелях курсор на потрібний об'єкт не встановлюється,
відбувається тільки перехід до потрібного каталогу.

   Див. також: ~goto~@Goto@ | ~Зауваження~@Remark@ | ~Зміст~@Contents@


@Direction
$ #Перехоплення виводу#
   Плагін уміє перехоплювати вивід заданої команди #<команда#.

    #команда# - #[#stream#][#mode#][#|шлях|#]#команда#.

                 #stream# - керування перехопленням виводу.
                          #1# - перехоплювати тільки стандартний
                              потік виводу #stdout#.
                          #2# - перехоплювати тільки стандартний
                              потік виводу помилок #stderr#.
                          #*# - перехоплювати і #stderr# і #stdout#
                              як один потік.
                          #?# - перехоплювати #stderr# і #stdout# як
                              різні потоки. У командах ~view~@View@ і
                              ~edit~@Edit@ перехоплені потоки будуть
                              відкриті у різних вікнах. В інших
                              командах рівносильне #*#.

             ^<wrap>Default value of this parameter can be defined in ~config~@Config@.

                 #mode#   - керування виводом на екран в обхід
                          стандартних потоків уведення/виводу.
                          #># - ігнорувати консольний вивід програми,
                              що виконється, і відобразити тільки
                              повідомлення про її виконання.
                          #<# - зберігати консольний вивід і зробити
                              його доступним для перегляду по #Ctrl-O#,
                          #+# - аналогічна #<#, але виводить на екран не
                              тільки консольний, але й перехоплений
                              вивід програми, що виконється.

             ^<wrap>Default value of this parameter can be defined in ~config~@Config@.
             ^<wrap>Параметр #mode# можно указывать только после #stream#.

                 #|шлях|# - команда може бути виконана у каталозі,
                          відмінному від поточного, при наявності
                          цього параметра (узятого у символи #'|'#).
                          Наприклад: '#edit:<|%TEMP%|dir#'.

   Результат роботи команди може бути відкритий у програмі перегляду: #~view~@View@:<команда#
     або в редакторі:                                                 #~edit~@Edit@:<команда#
     або поміщений до буфера обміну:                                  #~clip~@Clip@:<команда#
     або збережений у файл:                                           #~run~@Run@:filename<команда#

   Зауваження:

   1. ^<wrap>Усе, що розташоване після символу '#<#' і необов'язкових
модифікаторів, передається командному процесорові (%COMSPEC%).

   2. ^<wrap>Результат роботи команди зберігається у тимчасовому файлі, який буде автоматично видалений, якщо більше
не потрібний FAR.

   3. ^<wrap>Деякі програми здійснюють вивід на екран не через стандартний
потік виводу, що перехоплюється плагіном, а безпосередньо на
консоль. Щоб зберегти консольний вивід і зробити його доступним
для перегляду по #Ctrl-O#, або навпаки, ігнорувати його,
використовуйте модифікатори '#<#', '#>#' і '#+#'.
Ви можете змінити поведінку за замовчуванням у ~конфігурації~@Config@.

   4. ^<wrap>If the #stream# parameter equals #1# or #2# then the start of the
command text must be separated from it by some symbol.

   5. ^<wrap>Если #command# указан без пути, то плагин пытается найти исполняемй
модуль, как это делает команда ~whereis~@WhereIs@.

  #Examples:#

   Execute the command "#command#" and redirect its output to the editor:
     #edit:<command#

   Possible cases with the parameter #stream#=#1#:
     #edit:<1 command#
     #edit:<1"command"#
     #edit:<1+command#
     #edit:<1|%TEMP%|command#

   Див. також: ~Зауваження~@Remark@ | ~Зміст~@Contents@


@Remark
$ #Зауваження#
   1. ^<wrap>Допускається брати в лапки параметри #ім'я файла#, #шлях# і #команда#.

   2. Допускається використання змінних оточення.

   3. Якщо Ви зробите синтаксичну помилку - з'явиться підказка.

   4. ^<wrap>You can use console aliases as #command# (Console aliases - macros defined by command DOSKEY)

   Див. також: ~Зміст~@Contents@


@Config
$ #Конфігурування FAR Commands#
 #Екранний вивід зовнішніх команд#  Керування ~виводом~@Direction@ програм на екран:

   #Приховувати екранний вивід#  Дозволяє приховати вивід програми.
   #зовнішніх команд#            Буде відображатися тільки повідомлення
                               про розмір перехопленого виводу.
                               Аналогічно використанню #<># замість #<#.

   #Зберігати екранний вивід#    Дозволяє зберегти для перегляду по
   #зовнішніх команд#            #Ctrl-O# текст, що програми виводять
                               безпосередньо на консоль.
                               Аналогічно використанню #<<# замість #<#.

   #Копіювати перехоплений#      Дозволяє зберегти для перегляду по
   #вивід на екран#              #Ctrl-O# як текст, виведений на консоль,
                               так і вивід, що перехоплюється.
                               Аналогічно використанню #<+# замість #<#.

 #Перехоплення виводу#              Керування перехопленням ~виводу~@Direction@ програм:

   #Перехоплювати#               Перехоплювати потік стандартного виводу
   #stdout і stderr#             #stdout# і потік виводу помилок #stderr#
                               як один потік виводу.
                               Аналогічно використанню #<*# замість #<#.

   #Перехоплювати тільки#        Перехоплювати тільки #stdout#.
   #stdout (стандартний вивід)#  Аналогічно використанню #<1# замість #<#.

   #Перехоплювати тільки#        Перехоплювати тільки #stderr#.
   #stderr (вивід помилок)#      Аналогічно використанню #<2# замість #<#.

   #Перехоплювати#               Перехоплювати #stderr# і #stderr# незалежно.
   #stdout і stderr роздільно#   Має сенс тільки у командах
                               #far:view <# і #far:edit <#.
                               В інших випадках аналогічно #<*#.
                               Не сумісний з #<+#.
                               Аналогічно використанню #<?# замість #<#.

   #View/edit empty files#       With this options off, zero sized
                               files will not be opened for viewing
                               or editing.

 #Other#

   #Edit new files#              Allows to open the editor with non
                               existing files.

   #The size of read data#       ^<wrap>Позволяет задавать максимальный размер
считываемых из файла данных в командах ~clip~@clip@, ~goto~@goto@ и ~whereis~@whereis@.
                               По умолчанию - 1048576 (1 MB).
                               Максимальное значение - 4294967295 (4 GB-1).
                               Пустое значение или 0 заменяется на 1048576 (1 MB).

  Див. також: ~Зміст~@Contents@
