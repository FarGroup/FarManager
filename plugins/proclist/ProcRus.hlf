.Language=Russian,Russian (Русский)
.PluginContents=Список процессов


@Contents
$ #Список процессов#
   Этот модуль показывает список активных процессов. Можно использовать F8
для удаления выбранных процессов, Enter для переключения на окно процесса и
F3 для просмотра дополнительной информации о процессе.

   Будьте осторожны с удалением процессов. Эта операция выполняется
немедленно, и любая не сохранённая информация данного процесса будет
потеряна. Поэтому удаление процессов должно использоваться только при
необходимости.

   В плагине используются следующие дополнительные клавиши:

 #F6#            Просматривать процессы на удалённом компьютере

 #Shift-F6#      Вернуться на локальный компьютер

 #Shift-F1#      Снизить приоритет текущего процесса
               (только локально)
 #Shift-F2#      Повысить приоритет текущего процесса
               (только локально)
 #Shift-F3#      Просмотреть информацию о процессе
               с заданием опций просмотра

 #Alt-Shift-F9#  ~Конфигурация~@Config@ плагина

См. также: ~Счётчики производительности~@PerfCounters@
           ~Специальные типы колонок~@Columns@


@PerfCounters
$ #Счётчики производительности#
   Следующие описания были взяты из системного реестра (параметр
#HKLM\Software\Microsoft\Windows NT\CurrentVersion\Perflib\019\Help#)
и слегка подправлены: threads переводится не как "потоки" (это streams),
а "нити".

   #Процесс#

   Объект "Процесс" создаётся в момент запуска программы. Все нити процесса
совместно используют общее адресное пространство и имеют доступ к одним и
тем же данным.

   #Счётчик нитей#

   Количество нитей (потоков, threads) данного процесса, активных в
настоящий момент. Инструкция - это элементарная единица выполняемых
компьютером действий, нить - это объект, который занят выполнением
инструкций. Каждый выполняемый процесс имеет хотя бы одну нить.

   #Базовый приоритет#

   Текущий базовый приоритет данного процесса. Нити внутри процесса могут
повышать или понижать их собственный базовый приоритет относительно
базового приоритета процесса.

   #Elapsed Time#

   The total elapsed time this process has been running.

   #Идентификатор процесса (PID)#

   Уникальный идентификатор данного процесса. Учтите однако, что
используемые в качестве идентификаторов числа повторно используются, и они
идентифицируют процесс только во время его существования.

   #Идентификатор (PID) создавшего процесса#

   Идентификатор процесса, который создал данный процесс. Следует учитывать, что
создавший процесс мог уже завершиться после того, как данный процесс был
создан, и поэтому данное значение может более не указывать на выполняющийся
процесс.

   #Загруженность процессора (Processor Time)#

   Процентное отношение времени, которое процессор был занят выполнением
операций для нитей, кроме Idle (простаивающей). Эту величину можно
рассматривать как долю времени, приходящегося на выполнение полезной
работы. Каждый процессор может быть назначен нити Idle, которая потребляет
непродуктивные циклы процессора, не используемые другими нитями. It can be viewed
as the percentage of the sample interval spent doing useful work. This
counter displays the average percentage of busy time observed during the
sample interval. It is calculated by monitoring the time the service was
inactive, and then subtracting that value from 100%.

   #Ошибок страницы/сек#

   Значение счётчика ошибок страницы (Page Faults) для данного процессора.
Ошибка страницы возникает, когда процесс ссылается на страницу виртуальной
памяти, которая не находится в рабочем множестве (Working Set) оперативной
памяти. Ошибка страницы не вызывает загрузку соответствующей страницы с
диска, если эта страница находится в списке простаивающих (Standby list), и
тем самым уже находится в оперативной памяти, или если эта страница
используется другим процессом, имеющим совместный доступ к этой странице.

   #Байт в выгружаемом страничном пуле#

   Объём в байтах специальной системной области памяти, где компоненты
операционной системы запрашивают место, необходимое им для
функционирования. Страницы выгружаемого страничного пула могут быть
выгружены в файл подкачки (страничный файл) на диск, если к ним нет
обращений системы в течение заданного промежутка времени. Этот счётчик
отражает текущее значение, и не является средним значением по некоторому
интервалу времени.

   #Байт в невыгружаемом страничном пуле#

   Объём в байтах специальной системной области памяти, где компоненты
операционной системы запрашивают место, необходимое им для
функционирования. Страницы невыгружаемого страничного пула не могут быть
выгружены в файл подкачки (страничный файл) на диск и остаются в
оперативной памяти в течение всего периода их использования. Этот счётчик
отражает текущее значение, и не является средним значением по некоторому
интервалу времени.

   #Процент времени работы в пользовательском режиме#

   Процент времени работы процессора в пользовательском режиме,
затраченного на обработку непростаивающих нитей (non-Idle threads). В
пользовательском режиме работают приложения и подсистемы обеспечения среды
(Win32, OS/2 и POSIX). Кроме того, графическая система, драйверы
графических устройств, драйверы принтеров и диспетчер управления окнами
также выполняются в пользовательском режиме. Выполняемый в пользовательском
режиме код не может нарушить целостности исполняющей системы Windows,
ядра и драйверов устройств. Windows использует разграничение процессов для
защиты подсистем в дополнение к традиционным методам защиты с помощью
пользовательского и привилегированного режима. Такое использование
процессов подсистем обеспечивает дополнительную защиту. Таким образом,
часть времени работы Windows по обслуживанию вашего приложения может
быть отнесена на счёт других процессов подсистем, в добавок ко времени
работы системы в привилегированном режиме, затраченном на обработку вашего
процесса.

   #Процент времени работы в привилегированном режиме#

   Процент времени работы процессора в привилегированном режиме,
затраченного на обработку непростаивающих нитей (non-Idle threads).
Обслуживающий уровень Windows (Service layer), исполняющие подпрограммы
и ядро Windows работают в привилегированном режиме. Драйверы большинства
устройств, за исключением графических адаптеров и принтеров, также работают
в привилегированном режиме. Windows использует разграничение процессов для
защиты подсистем в дополнение к традиционным методам защиты с помощью
пользовательского и привилегированного режима. Такое использование
процессов подсистем обеспечивает дополнительную защиту. Таким образом,
часть времени работы Windows по обслуживанию вашего приложения может
быть отнесена на счёт других процессов подсистем, в добавок ко времени
работы системы в привилегированном режиме, затраченном на обработку вашего
процесса.

   #Байт виртуальной памяти#

   Объём в байтах виртуального адресного пространства, который используется
процессом в настоящий момент. Использование виртуального адресного
пространства не означает обязательного использования соответствующего
пространства на диске или в оперативной памяти. Виртуальное пространство,
однако, имеет конечные размеры, и использование слишком большого объёма
виртуального пространства может повлиять на способность процесса загружать
и использовать динамические библиотеки.

   #Байт виртуальной памяти (пик)#

   Максимальный объём в байтах виртуального адресного пространства, который
использовался процессом за всё время его существования. Использование
виртуального адресного пространства не означает обязательного использования
соответствующего пространства на диске или в оперативной памяти.
Виртуальное пространство, однако, имеет конечные размеры, и использование
слишком большого объёма виртуального пространства может повлиять на
способность процесса загружать и использовать динамические библиотеки.

   #Рабочее множество#

   Текущий объём в байтах рабочего множества страниц для данного процесса.
Рабочее множество - это множество страниц памяти, затронутых в последнее
время нитями, выполняющимися в данном процессе. Если объём свободной памяти
компьютера превышает пороговое значение, страницы остаются в рабочем
множестве даже если они не используются. Когда объём свободной памяти
оказывается ниже порогового значения, страницы изымаются из рабочих
множеств. Если они продолжают использоваться, то они вновь будут включены в
рабочее множество при разрешении возникшей ошибки страницы до того, как
окажутся фактически выгружены из оперативной памяти.

   #Рабочее множество (пик)#

   Максимальный объём в байтах рабочего множества оперативной памяти,
который использовался процессом за всё время его существования. Рабочее
множество - это множество страниц памяти, затронутых в последнее время
нитями, выполняющимися в данном процессе. Если объём свободной памяти
компьютера превышает пороговое значение, страницы остаются в рабочем
множестве даже если они не используются. Когда объём свободной памяти
оказывается ниже порогового значения, страницы изымаются из рабочих
множеств. Если они продолжают использоваться, то они вновь будут включены в
рабочее множество при разрешении возникшей ошибки страницы до того, как
окажутся фактически выгружены из оперативной памяти.

   #Байт файла подкачки#

   Объём в байтах файла подкачки (страничного файла), который использует
данный процесс в настоящий момент. Файлы подкачки хранят страницы памяти,
используемые данным процессом, но не хранящиеся в каких либо других файлах.
Файлы подкачки совместно используются всеми процессами, и захват памяти в
файлах подкачки может привести к неспособности других процессов выделить
нужную память.

   #Байт файла подкачки (пик)#

   Максимальный объём в байтах файла подкачки (страничного файла), который
использовался данным процессом. Файлы подкачки хранят страницы памяти,
используемые данным процессом, но не хранящиеся в каких либо других файлах.
Файлы подкачки совместно используются всеми процессами, и захват памяти в
файлах подкачки может привести к неспособности других процессов выделить
нужную память.

   #Байт исключительного пользования (Private Bytes)#

   Объём в байтах выделенной данному процессу памяти, которая не может
использоваться совместно с другими процессами.

   #Счётчик дескрипторов#

   Общее количество дескрипторов (хэндлов, handles), открытых в настоящий
момент данным процессом. Эта величина представляет собой суммарное
количество дескрипторов, открытых всеми нитями данного процесса.

   #I/O - операций чтения в сек#

   Скорость, с которой процесс выполняет операции чтения при вводе/выводе.
Этот счётчик учитывает весь ввод/вывод, порождаемый процессом, включая
операции с файлами, устройствами, сетью.

   #I/O - операций записи в сек#

   Скорость, с которой процесс выполняет операции записи при вводе/выводе.
Этот счётчик учитывает весь ввод/вывод, порождаемый процессом, включая
операции с файлами, устройствами, сетью.

   #I/O - операций с данными в сек#

   Скорость, с которой процесс выполняет операции чтения и записи при
вводе/выводе. Этот счётчик учитывает весь ввод/вывод, порождаемый
процессом, включая операции с файлами, устройствами, сетью.

   #I/O - прочих операций в сек#

   Скорость, с которой процесс выполняет операции ввода/вывода, не
являющиеся ни чтением, ни записью. Примером таких операций являются функции
управления. Этот счётчик учитывает весь ввод/вывод, порождаемый процессом,
включая операции с файлами, устройствами, сетью.

   #I/O - чтение байт в сек#

   Скорость, с которой процесс выполняет чтение байт при вводе/выводе. Этот
счётчик учитывает весь ввод/вывод, порождаемый процессом, включая операции
с файлами, устройствами, сетью.

   #I/O - запись байт в сек#

   Скорость, с которой процесс выполняет запись байт при вводе/выводе. Этот
счётчик учитывает весь ввод/вывод, порождаемый процессом, включая операции
с файлами, устройствами, сетью.

   #I/O - обмен данными, байт в сек#

   Скорость, с которой процесс выполняет чтение и запись байт при
вводе/выводе. Этот счётчик учитывает весь ввод/вывод, порождаемый
процессом, включая операции с файлами, устройствами, сетью.

   #I/O - прочих байт в сек#

   Скорость, с которой процесс выполняет передачу байт при операциях
ввода/вывода, не являющихся ни чтением, ни записью, например, при операциях
управления. Этот счётчик учитывает весь ввод/вывод, порождаемый процессом,
включая операции с файлами, устройствами, сетью.


@Columns
$ #Специальные типы столбцов#
   В этом плагине несколько #стандартных# типов столбцов имеют специальное
значение:

   #S (Размер)#

   Показывает сумму счётчиков "Рабочее множество" и "Байт файла подкачки"

   #D/T (Дата/Время)#

   Показывает дату и время старта процесса.
   Дата/время изменения, создания и последнего доступа одинаковы.

   В дополнение к стандартным типам столбцов FAR'а, в плагине "Список
процессов" используются следующие #специальные# типы:

   #Числовые столбцы:#

   #XP# - Приоритет
   #XI# - Идентификатор процесса (PID)
   #XC# - Идентификатор (PID) родительского процесса
   #XT# - Количество нитей
   #XG# - Количество объектов GDI (только локально)
   #XU# - Количество объектов USER (только локально)
   #XB# - Битность (32/64)
   #X0...X21[S][T]# - счётчики производительности (см. ниже).

   #Столбцы с описаниями:#

   #ZP# - Полный путь
   #ZW# - Заголовок окна
   #ZD# - Описание файла
   #ZC# - Командная строка (только локально)

   #ВНИМАНИЕ:# В каждом режиме панелей может быть только один столбец
описаний ('Zx'). Чтобы просматривать разные виды описаний, надо
переключаться между режимами.

   Номера столбцов ~счётчиков производительности~@PerfCounters@ указаны
ниже.

   Для X0..X2 добавление в конце буквы #S# означает "показывать процентное
значение". Без этой буквы показывается суммарное время в часах, минутах и
секундах.

   Для X11 и X14..X21 добавление буквы #S# означает "показывать значение в
секунду". Без этой буквы показывается суммарное накопившееся количество.

   Для любого счётчика: если число не помещается в столбец или если указан
модификатор #F#, оно показывается как кратное К (1024), М (1024*1024) и т.д.
Если добавить к типу столбца букву #T#, то в качестве делителя будет использоваться не 1024, а 1000.

   #X0 # Процессорное время
   #X1 # Время в привилегированном режиме
   #X2 # Время в пользовательском режиме
   #X3 # Счётчик дескрипторов (хэндлов)
   #X4 # Байт файла подкачки
   #X5 # Байт файла подкачки, пик
   #X6 # Рабочее множество
   #X7 # Рабочее множество, пик
   #X8 # Байт в невыгружаемом страничном пуле
   #X9 # Байт в выгружаемом страничном пуле
   #X10# Байт исключительного пользования (Private Bytes)
   #X11# Ошибок страницы (Page Faults)
   #X12# Байт виртуальной памяти
   #X13# Байт виртуальной памяти, пик
   #X14# IO - всего байт
   #X15# IO - чтение байт
   #X16# IO - запись байт
   #X17# IO - другое, байт
   #X18# IO - всего операций
   #X19# IO - операций чтения
   #X20# IO - операций записи
   #X21# IO - других операций


@Config
$ #Конфигурация#
 #Добавить в меню дисков#   Разрешает добавление в меню дисков
                          пункта "Список процессов"

 #Добавить в#               Разрешает добавление в меню внешних
 #меню плагинов#            модулей пункта "Список процессов".

 #Включать в#               Эти переключатели управляют объёмом
 #дополнительную#           дополнительной информации о процессе,
 #информацию#               выводимой в файл, когда вы нажимаете
                          F3, F5, ищете по Alt-F7 и т.п.
                          Некоторые детали захламляют выходной
                          файл, некоторые извлекаются слишком
                          медленно, поэтому вы можете захотеть
                          их отключить.

 #Переменные окружения#     Включать блок переменных окружения
                          процесса. Используется только локально.

 #Информацию о модулях#     Включать список модулей, загруженных
                          данным процессом.

 #Версии и описания#        Выводя список модулей, извлекать
 #модулей#                  описание и версию файла каждого модуля.
                          Это медленная операция, поскольку для
                          каждого модуля открывается его файл для
                          последующего извлечения информации.

 #Данные о#                 Выводить все счётчики производительности
 #производительности#       для данного процесса.

 #Хэндлы#                   Выводить список всех хэндлов,
                          открытых процессом.
                          Используется только локально.
   Внимание: для получения списка хэндлов плагин использует
             недокументированные возможности и может работать
             с ошибками.

   В этой версии режимы панелей не настраиваются в этом диалоге. Когда вы в
нём нажмёте "OK", конфигурация сохранится вместе с текущими режимами
(которые вначале выставлены по умолчанию). После этого, чтобы изменить
колонки в панелях, можно редактировать в реестре созданные там ключи
#HKCU\Software\Far\Plugins\Plist\ModeX\#. При повторном заходе в плагин
изменения войдут в силу.

   См. также: ~Типы столбцов~@Columns@.
