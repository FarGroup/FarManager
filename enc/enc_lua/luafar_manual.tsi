<header>
tag=SMZ1
ver=2.7
</header>
<node>
id=91
lv=0
dt=Text
nm=Manual of LuaFAR 3
mtime=3652173155
<article>
#_<markdown>
#_### Brief description of LuaFAR package
#_
#_This package's purpose is to facilitate writing plugins for FAR in Lua programming language. The package provides source code for **`luafar3.dll`** (main product) and a **`luaplug.dll`** ("generic" plugin).
#_
#_`luafar3.dll` allows:
#_
#_* To program functions exported by the plugin in Lua: e.g., the function `OpenW` should be named [`export.Open`](109.html) in the Lua program, the same goes for all functions exported by the plugin.
#_ 
#_* To call FAR service functions from a Lua program. The service functions are placed in the `far`, `editor`, `viewer`, `panel` and `regex` tables, and their names aren't identical to the names of the respective FAR API functions. For instance, function `EditorControl` with parameter `ECTL_GETINFO` will be named [`editor.GetInfo`](29.html) in Lua programs.
#_
#_* **Note:** the functions of the Unicode LuaFAR library assume string arguments and string return values to be in the **UTF-8** encoding. (There are a few exceptions from this rule, mostly when strings are used to exchange binary data).
#_
#_Currently, the documentation on LuaFAR API is incomplete and may be somewhat inaccurate. When in doubt, consult the source code. The API may change in the future.
#_ 
#_As `luafar3.dll` itself is not a plugin, it should not be placed in the `%FARHOME%\Plugins` subtree (instead, place it in any directory listed in `PATH`). The usual way of using `luafar3.dll` is to create a wrapper plugin that redirects FAR's calls of the exported functions to `luafar3.dll`, that in turn calls the functions written in Lua. This way, one instance of `luafar3.dll` can "serve" arbitrary number of plugins at the same time. An example of "wrapper plugin" is `luaplug.dll` (its source code is part of this package).
#_ 
#_There are two Lua files that must be present in plugin's DLL directory:
#_
#_1. **`_globalinfo.lua`** (it should only contain the function
#_   [`export.GetGlobalInfo`](402.html)).<br>
#_   This script must not call functions from [`far`](131.html) library (e.g., `far.Message`),
#_   as they are not yet available to LuaFAR when Far calls `GetGlobalInfoW`.
#_
#_1. The starting (or "default") Lua script, that is searched in the following order (see [`LF_RunDefaultScript`](130.html) for details):
#_    1. The plugin name with the extension `.lua` is looked for, e.g.:
#_       `luaplug.dll -> luaplug.lua`
#_    1. If the plugin name contains a hyphen, then its part preceding the last
#_       hyphen is looked for, e.g.: `luaplug-x64.dll -> luaplug.lua`.
#_
#_When the starting script is run it receives one boolean argument:
#_
#_  - `true` - on its first run and after Lua state was [recreated](495.html)
#_  - `false` - on subsequent runs caused by setting
#_    [`far.ReloadDefaultScript`](173.html) `=` `true`.
#_
#_@@@
#_{ectl_getinfo}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETINFO
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_{getglobalinfow}: http://api.farmanager.com/ru/exported_functions/getglobalinfow.html
#_{openw}: http://api.farmanager.com/ru/exported_functions/openw.html
#_
</article>
</node>
<node>
id=329
lv=1
dt=Text
nm=Flags
ctime=3480257526
mtime=3602510587
<article>
#_<markdown>
#_
#_As Far API makes wide use of named integer constants, there is a necessity to represent those constants in Lua. LuaFAR keeps the names and values of the constants in tables. Most constants are embedded into LuaFAR, in the tables [`far.Flags`](57.html) and [`far.Colors`](437.html).
#_
#_This manual uses the term **flags** for both a single constant contained in the table `far.Flags`, and for the [bitwise OR](405.html) of two or more such constants.
#_
#_When some function parameter in this manual is denoted as *flags*, it can be supplied from Lua as either an integer, a string (when a combination consists of one flag), or a table, with keys corresponding to constants' names and having non-false values.
#_
#_#### Example 1 (single flag)
#_The following 2 calls are equivalent:
#_        (1)  editor.UndoRedo(nil, F.EUR_UNDO) -- where F=far.Flags
#_        (2)  editor.UndoRedo(nil, "EUR_UNDO")
#_
#_#### Example 2 (flags combination)
#_The 7-th parameter to function [`editor.Editor`](21.html) can be
#_supplied from Lua in the following equivalent forms:
#_        (1)  bit64.bor(F.EF_NONMODAL, F.EF_IMMEDIATERETURN, ....)
#_        (2)  { EF_NONMODAL=1, EF_IMMEDIATERETURN=1, .... }
#_
#_@@@
#_{ef_immediatereturn}: http://api.farmanager.com/ru/service_functions/editor.html#EF_IMMEDIATERETURN
#_{ef_nonmodal}: http://api.farmanager.com/ru/service_functions/editor.html#EF_NONMODAL
#_
</article>
</node>
<node>
id=336
lv=1
dt=Text
nm=Unicode support
ctime=3480525243
mtime=3776336770
<article>
#_<markdown>
#_
#_### Passing string arguments and returning string values
#_
#_The functions of the Unicode LuaFAR library assume string
#_arguments and string return values to be in the **UTF-8**
#_encoding. (There are a few exceptions from this rule, mostly
#_when strings are used to exchange binary data).
#_
#_### Calling functions on strings with colon syntax
#_
#_LuaFAR modifies the `__index` field of the strings metatable
#_to point to `utf8` table of [utf8](537.html)
#_library, rather than to `string` table.<br>
#_That means `("abc"):match("b")` is equivalent to `utf8.match("abc", "b")`
#_rather than to `string.match("abc", "b")`.<br>
#_Operator # is not affected by this change.
#_
#_### Unicode-capable Lua libraries and functions
#_
#_The following standard Lua libraries and functions were modified by LuaFAR
#_in order to work with file names and paths in UTF-8 encoding:
#_
#_* `io`
#_* `dofile`
#_* `loadfile`
#_* `require`
#_* `package.loadlib`
#_
#_### Unicode-capable functions using Windows API
#_
#_* [`win.CopyFile`](360.html)
#_* [`win.CreateDir`](372.html)
#_* [`win.DeleteFile`](361.html)
#_* [`win.GetEnv`](152.html)
#_* [`win.GetFileAttr`](433.html)
#_* [`win.GetFileInfo`](213.html)
#_* [`win.MoveFile`](362.html)
#_* [`win.RemoveDir`](373.html)
#_* [`win.RenameFile`](363.html)
#_* [`win.SearchPath`](429.html)
#_* [`win.SetEnv`](192.html)
#_* [`win.SetFileAttr`](434.html)
#_* [`win.ShellExecute`](428.html)
#_* [`win.SHGetFolderPath`](440.html)
#_* [`win.system`](508.html)
#_* [`win.WriteConsole`](534.html)
#_
</article>
</node>
<node>
id=214
lv=1
dt=Text
nm=Generic LuaFAR plugin
mtime=3624032846
<article>
#_<markdown>
#_
#_There are two files in the LuaFAR distribution (**`luaplug.c`** and **`luaplug.mak`**) that do not participate in the build of LuaFAR DLL, they comprise the "generic LuaFAR plugin". It is called generic, since most of a LuaFAR plugin functionality is contained in its Lua part, and its C-part is more or less the same for most LuaFAR plugins.
#_
#_- [Customizing the generic plugin](494.html)
#_- [Recreation of the Lua virtual machine](495.html)
#_- [Extra exported functions](500.html)
#_- [Other functions](502.html)
#_
</article>
</node>
<node>
id=494
lv=2
dt=Text
nm=Customizing the generic plugin
ctime=3612528153
mtime=3675075603
<article>
#_<markdown>
#_
#_The easiest way to build a LuaFAR plugin DLL is via `luaplug.mak`
#_makefile (MinGW is required). This makefile can be used either directly or included in another makefile. It accepts the following parameters:
#_
#_- **`TARGET`** - name of the resulting DLL, e.g.: "`TARGET = helloworld.dll`".
#_
#_- **`FAR_EXPORTS`** - list of functions that should be exported by the plugin (in uppercase, whitespace-separated, final letter `W` removed), e.g.:<br>
#_  "`FAR_EXPORTS = OPEN PROCESSEDITORINPUT`".<br>
#_The following functions are always exported, so there's no need to include them in the list:
#_`GetGlobalInfoW`, `SetStartupInfoW`, `GetPluginInfoW`, `ExitFARW` and `ProcessSynchroEventW`.
#_
#_- **`FARDIR`** - the root directory of Far Manager source tree, e.g. "`FARDIR = C:\farmanager`".
#_
#_- **`MYCFLAGS`** - list of additional compilation flags
#_
#_- **`MYLDFLAGS`** - list of additional linking-stage flags
#_
#_@@@
#_{exitfarw}: http://api.farmanager.com/ru/exported_functions/exitfarw.html
#_{getglobalinfow}: http://api.farmanager.com/ru/exported_functions/getglobalinfow.html
#_{getplugininfow}: http://api.farmanager.com/ru/exported_functions/getplugininfow.html
#_{processsynchroeventw}: http://api.farmanager.com/ru/exported_functions/processsynchroeventw.html
#_{setstartupinfow}: http://api.farmanager.com/ru/exported_functions/setstartupinfow.html
#_
#_
</article>
</node>
<node>
id=511
lv=2
dt=Text
nm=luafar_init.lua
ctime=3639761849
mtime=3639831155
<article>
#_<markdown>
#_
#_If the file `%FARPROFILE%\luafar_init.lua` exists it is executed before the first run of
#_the plugin's default script.<br>
#_It is also executed when the Lua state is [recreated][1].<br>
#_It is **not** executed when the default script is reloaded due to `far.ReloadDefaultScript == true`.
#_
#_### Note
#_This feature is disabled by default. To enable it, add `-DRUN_LUAFAR_INIT` to compilation flags.
#_
#_See also:<br>
#_[`LF_LuafarInit`](510.html)<br>
#_[`LF_RunDefaultScript`](130.html)<br>
#_[`LF_Open`](173.html)<br>
#_
#_[1]: 495.html
#_
#_@@@
#_{setstartupinfow}: http://api.farmanager.com/ru/exported_functions/setstartupinfow.html
#_
</article>
</node>
<node>
id=495
lv=2
dt=Text
nm=Recreation of the Lua virtual machine
ctime=3612528168
mtime=3653914601
<article>
#_<markdown>
#_
#_It is possible to "recreate" the Lua virtual machine (`lua_State`), used by the plugin, i.e: to close the current one and create a new one.
#_
#_* In order to do that the global variable `RecreateLuaState` should be
#_  assigned a true value.
#_* The analysis of `RecreateLuaState` and the virtual machine recreation
#_  are conducted in the `OpenW` plugin's exported function, just before
#_  returning control to Far Manager.
#_* Prior to the virtual machine recreation the [`LF_ExitFAR`](162.html)
#_  function is called.
#_* After the virtual machine is recreated all actions that normally occur
#_  when Far Manager loads a LuaFAR plugin are conducted, including running
#_  the plugin's "starting" Lua script (which in this case receives `true`
#_  as an argument).
#_* After the virtual machine is recreated the global variable `IsLuaStateRecreated`
#_  is set to true.
#_
</article>
</node>
<node>
id=500
lv=2
dt=Text
nm=Extra exported functions
ctime=3624032175
mtime=3624032175
<article>
</article>
</node>
<node>
id=501
lv=3
dt=Text
nm=GetLuaState
ctime=3624032286
mtime=3624038104
<article>
#_<markdown>
#_
#_`lua_State* GetLuaState()`
#_
#_Returns the current main `lua_State` of the plugin.
#_
#_Do not store the returned value for further use, as it may be invalidated by [recreation][1]. Instead, call this function again whenever needed.
#_
#_[1]: 495.html
#_
</article>
</node>
<node>
id=496
lv=3
dt=Text
nm=luaopen_luaplug
ctime=3612528187
mtime=3612535539
<article>
#_<markdown>
#_
#_Some libraries (e.g. `rings`) can create additional `lua_State` instances from Lua scripts. To initialize those instances with libraries included in LuaFAR (`far`, `bit64`, `win`, `unicode`), call `luaopen_luaplug()` passing it the `lua_State*` to be initialized.
#_
#_This function is also accessible from Lua as the global variable `_luaplug`.
#_It is NOT intended to be called from the running `lua_State` but rather to be passed
#_to another `lua_State` for its initialization.
#_
#_Alternatively, this function can be loaded via `package.loadlib` as in the following example.
#_
#_**Example:**
#_      local rings = require "rings"
#_      local r1 = rings.new()
#_      r1:dostring([[
#_        local modname = ...
#_        assert(package.loadlib(modname, "luaopen_luaplug"))()
#_        far.Message ("Hello world", "Called from a ring")
#_      ]], far.PluginStartupInfo().ModuleName)
#_
#_**Note:**<br>
#_After replacing the standard Lua 5.1 DLL with one from LuaJIT 2.0, this example has stopped working. The issue is investigated.
#_
</article>
</node>
<node>
id=502
lv=2
dt=Text
nm=Other functions
ctime=3624032810
mtime=3624032810
<article>
</article>
</node>
<node>
id=503
lv=3
dt=Text
nm=GetPluginStartupInfo
ctime=3624032892
mtime=3624033776
<article>
#_<markdown>
#_
#_`struct PluginStartupInfo* GetPluginStartupInfo()`
#_
#_This helper function is needed when the plugin consists of more than one C-file. It gives access to Far API functions to files other than `luaplug.c`.
#_
#_(The same could be achieved by making the struct accessible, but it is not.)
#_
</article>
</node>
<node>
id=149
lv=0
dt=Text
nm=What's new in this version
mtime=3541947364
<article>
#_<markdown>
#_
</article>
</node>
<node>
id=400
lv=1
dt=Text
nm=Version 2.8.0
ctime=3505938627
mtime=3505938647
<article>
#_<markdown>
#_
#_###Added functions
#_1. [`far.GetDriveType`](398.html)
#_1. [`far.GetLogicalDriveStrings`](397.html)
#_
#_###Extended functions
#_1. [`far.AdvControl`](153.html): `ACTL_KEYMACRO`: field `AKey` added
#_1. [`far.GetPluginInfo`](105.html): field `SysId` added.
#_1. [`far.OpenPlugin`](109.html): handles `OPEN_FROMMACRO`
#_1. [`far.PluginsControl`](334.html): `PCTL_FORCEDLOADPLUGIN` added.
#_1. [`far.SendDlgMessage`](71.html): (a) `DM_LISTGETDATA` fixed,
#_   (b) `DM_LISTSETDATA` implemented.
#_
#_###Bug fixes
#_1. [`far.DialogRun`](379.html): errors in the dialog procedure
#_   were ignored (did not prevent the script from normal run flow).
#_1. [`far.SetRegKey`](73.html): data corruption with
#_   `(DataType=="string")`.
#_
#_@@@
#_{dm_listgetdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetdata.html
#_{dm_listsetdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsetdata.html
#_{open_frommacro}: http://api.farmanager.com/ru/structures/openinfo.html#OPEN_FROMMACRO
#_{pctl_forcedloadplugin}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html#PCTL_FORCEDLOADPLUGIN
#_
</article>
</node>
<node>
id=396
lv=1
dt=Text
nm=Version 2.7.0
ctime=3504008153
mtime=3612528603
<article>
#_<markdown>
#_
#_* The first LuaFAR version that compiles for both 32
#_  and 64-bit DLLs.
#_* Generic plugin [customization](494.html):
#_  added a new parameter `ENV_PREFIX`.
#_* Source code: all C++ files were rewritten in C.
#_
#_###Added functions
#_1. [`far.CtrlSetCaseSensitiveSort`](395.html)
#_1. [`far.EnumSystemCodePages`](394.html)
#_1. [`far.GetACP`](391.html)
#_1. [`far.GetCPInfo`](393.html)
#_1. [`far.GetOEMCP`](392.html)
#_
#_###Extended functions
#_1. [`far.SendDlgMessage`](71.html): `DM_GETCONSTTEXTPTR` added.
#_1. [`far.MultiByteToWideChar`](370.html): *flags* parameter added.
#_1. [`LF_RunDefaultScript`](130.html): plugin DLL's name can have a suffix that is ignored in searching the default script.
#_
#_###Modified functions
#_1. Implementation of [`far.OemToUtf8`](256.html) and [`far.Utf8ToOem`](257.html) changed.
#_
#_###Bug fixes
#_1. Fixes related to 64-bit compilation.
#_
#_@@@
#_{dm_getconsttextptr}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getconsttextptr.html
#_
</article>
</node>
<node>
id=387
lv=1
dt=Text
nm=Version 2.6.0
ctime=3499339019
mtime=3612528784
<article>
#_<markdown>
#_
#_###Added functions
#_1. [`regex:gsub`](386.html)
#_1. [`LF_InitLuaState`](385.html)
#_1. [`luaopen_luaplug`](496.html)
#_
#_###Modified functions
#_1. [`far.Editor`](21.html) -- default values for `StartLine`, `StartChar` made `-1` (was: `0`).
#_1. [`far.GetPluginInfo`](105.html) -- field `DiskMenuNumbers` removed from the returned table, as it does not exist in Far builds `>= 2.0.1692`.
#_
#_
</article>
</node>
<node>
id=383
lv=1
dt=Text
nm=Version 2.5.0
ctime=3492942340
mtime=3498897310
<article>
#_<markdown>
#_
#_###Added functions
#_1. [`far.CtrlGetPanelFormat`](381.html)
#_1. [`far.CtrlGetPanelHostFile`](382.html)
#_1. [`far.DialogInit`](378.html)
#_1. [`far.DialogRun`](379.html)
#_1. [`far.DialogFree`](380.html)
#_1. [`regex:bracketscount`](377.html)
#_
#_###Extended functions
#_1. [`far.AdvControl`](153.html) -- added `ACTL_PROGRESSNOTIFY`.
#_
#_###Modified functions
#_1. All [reqular expression functions](273.html) renamed to lower case.
#_1. [`far.gsub`](270.html) - "invalid capture number" error in the
#_   replace pattern is detected before entering the search/replace loop.
#_1. [`LF_RunDefaultScript`](130.html) - better error handling.
#_
#_###Bug fixes
#_1. [`far.gsub`](270.html) - fix crash (poorly handled `%` at the end
#_   of the replace string).
#_1. [`far.GetDlgItem`](54.html), [`far.SendDlgMessage`](71.html)
#_   (`DM_GETDLGITEM`) - fix crash with invalid item number.
#_
#_###Misc
#_1. `LF_GetMinFarVersionW` function is removed.
#_2. New setting `MINFARVERSION` in the [generic plugin's](214.html)
#_   makefile.
#_
#_@@@
#_{actl_progressnotify}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_PROGRESSNOTIFY
#_{dm_getdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgitem.html
#_
</article>
</node>
<node>
id=375
lv=1
dt=Text
nm=Version 2.4.0
ctime=3489519174
mtime=3489519189
<article>
#_<markdown>
#_
#_###Added functions
#_1. [`far.MultiByteToWideChar`](370.html)
#_1. [`far.CreateDir`](372.html) (works with UTF-8 names)
#_1. [`far.RemoveDir`](373.html) (works with UTF-8 names)
#_
#_###Extended functions
#_1. [`far.EditorSetParam`](140.html) - 2-nd parameter can be boolean.
#_
#_###Modified functions
#_1. [`far.ViewerSetPosition`](142.html) - actual value of `StartPos`
#_   is returned (number; was: boolean).
#_
#_###Bug fixes
#_1. [`far.EditorSetParam`](140.html) - `ESPT_GETWORDDIV` did not work.
#_1. [`far.AdvControl`](153.html) - `ACTL_GETSYSWORDDIV` did not work.
#_
#_###Misc
#_1. Version information is embedded into the DLL (`.rc` file added).
#_
#_@@@
#_{espt_getworddiv}: http://api.farmanager.com/ru/structures/editorsetparameter.html#ESPT_GETWORDDIV
#_
</article>
</node>
<node>
id=369
lv=1
dt=Text
nm=Version 2.3.0
ctime=3487755221
mtime=3487755239
<article>
#_<markdown>
#_
#_###Added functions
#_1. [`far.GetConsoleScreenBufferInfo`](359.html)
#_1. [`far.Timer`](346.html)
#_1. [`far.GetCustomData`](364.html) (experimental)
#_1. [`far.CopyFile`](360.html) (works with UTF-8 names)
#_1. [`far.DeleteFile`](361.html) (works with UTF-8 names)
#_1. [`far.MoveFile`](362.html) (works with UTF-8 names)
#_1. [`far.RenameFile`](363.html) (works with UTF-8 names)
#_
#_###Extended functions
#_1. [`far.Message`](65.html) - standard button combinations supported.
#_1. [`far.AdvControl`](153.html) - added `ACTL_GETFARRECT`,
#_   `ACTL_GETCURSORPOS`, `ACTL_SETCURSORPOS`.
#_
#_###Modified functions
#_1. [`far.Editor`](21.html) - autodetect code page if not specified.
#_1. [`far.Viewer`](77.html) - autodetect code page if not specified.
#_1. [`far.EditorGetSelection`](30.html) - API (table fields) changed.
#_
#_###Bug fixes
#_1. [`far.EditorGetString`](31.html) - work with strings containing
#_   nuls.
#_1. [`far.Gsub`](270.html) - fix crash (a missing `lua_pop` call).
#_1. [`far.Gsub`](270.html) - fix ignoring errors in replace function.
#_1. [`far.Message`](65.html) - fix to work with Far 2.0 builds 1564+.
#_1. [`far.SendDlgMessage`](71.html) (`DM_LISTGETCURPOS`) - returned
#_   `nil` when `SendDlgMessage` returned `0`.
#_1. [`far.ViewerSetPosition`](142.html) - fix case with extra
#_   arguments.
#_
#_@@@
#_{actl_getcursorpos}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETCURSORPOS
#_{actl_getfarrect}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETFARRECT
#_{actl_setcursorpos}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SETCURSORPOS
#_{dm_listgetcurpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetcurpos.html
#_{senddlgmessage}: http://api.farmanager.com/ru/service_functions/senddlgmessage.html
#_
</article>
</node>
<node>
id=345
lv=1
dt=Text
nm=Version 2.2.0
ctime=3482049351
mtime=3482049368
<article>
#_<markdown>
#_
#_###Added functions
#_1. [`far.CtrlClearSelection`](330.html)
#_1. [`far.CtrlGetCmdLineSelection`](331.html)
#_1. [`far.CtrlIsActivePanel`](320.html)
#_1. [`far.CtrlSetCmdLineSelection`](332.html)
#_1. [`far.LoadFile`](338.html)
#_1. [`far.LoadLib`](342.html)
#_1. [`far.PluginsControl`](334.html)
#_1. [`far.ProcessSynchroEvent`](319.html)
#_1. [`far.Require`](343.html)
#_1. [`far.XLat`](335.html)
#_1. [File Filter Control](322.html) - a function and 4 methods
#_1. [`uio`](344.html) library
#_
#_###Extended functions
#_1. [`far.AdvControl`](153.html) - `ACTL_KEYMACRO` -
#_   added support for `MCMD_CHECKMACRO`
#_1. [`far.AdvControl`](153.html) - `ACTL_SYNCHRO` added
#_1. [`far.OpenFilePlugin`](108.html) - return value `-2`
#_   is passed on to Far unchanged (see Far API)
#_1. [`far.OpenPlugin`](109.html) - return value `0` is passed
#_   on to Far unchanged (see Far API)
#_1. [`far.ProcessDialogEvent`](221.html) - second return added
#_1. [`far.SendDlgMessage`](71.html) - `DM_GETDIALOGINFO` added
#_
#_###Modified functions
#_1. [`far.CtrlGetCmdLinePos`](6.html) - position made 1-based
#_1. [`far.CtrlSetCmdLinePos`](12.html) - position made 1-based
#_1. [`far.EditorSetTitle](45.html) - `nil` argument is allowed
#_1. [`far.ProcessKey`](114.html) - API changed: made closer to Far API
#_1. [`far.SendDlgMessage`](71.html): changed return values for
#_   `DM_RESIZEDIALOG` and `DM_MOVEDIALOG`.
#_1. [`LF_LuaOpen`](129.html) - API changed: type of the 3-rd parameter
#_1. [Regular expression](273.html) functions: the optimisation stage
#_   is skipped now, as it is too slow.
#_
#_@@@
#_{actl_synchro}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SYNCHRO
#_{dm_getdialoginfo}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdialoginfo.html
#_{dm_movedialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_movedialog.html
#_{dm_resizedialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_resizedialog.html
#_
</article>
</node>
<node>
id=317
lv=1
dt=Text
nm=Version 2.1.0
ctime=3478898780
mtime=3478898797
<article>
#_<markdown>
#_
#_###Added functions
#_1. [`far.ConvertPath`](284.html)
#_1. [`far.EditorUndoRedo`](283.html)
#_1. [`far.GetVirtualKeys`](315.html)
#_1. [`far.MakeMenuItems`](280.html)
#_1. [`far.Show`](282.html)
#_
#_###Extended functions
#_1. [`far.AdvControl`](153.html) -- commands `ACTL_QUIT`,
#_   `ACTL_SETPROGRESSSTATE` and `ACTL_SETPROGRESSVALUE` added.
#_1. [`far.Dialog`](20.html) -- more conforming processing of the
#_   following events:
#_   [`DN_CTLCOLORDLGLIST`](286.html), [`DN_DRAWDLGITEM`](287.html),
#_   [`DN_EDITCHANGE`](288.html), [`DN_GETDIALOGINFO`](305.html),
#_   [`DN_HELP`](289.html), [`DN_MOUSECLICK`](290.html),
#_   [`DN_MOUSEEVENT`](291.html), [`DN_RESIZECONSOLE`](292.html).
#_1. [`far.Menu`](64.html) -- *checked* property of a menu item can
#_   be a string (only its first character is used).
#_
#_###Modified functions
#_1. [`LF_LuaOpen`](129.html)
#_
#_@@@
#_{actl_quit}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_QUIT
#_{actl_setprogressstate}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SETPROGRESSSTATE
#_{actl_setprogressvalue}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SETPROGRESSVALUE
#_
</article>
</node>
<node>
id=281
lv=1
dt=Text
nm=Version 2.0.1
ctime=3476605589
mtime=3476605606
<article>
#_<markdown>
#_
#_1. **Selene Unicode** library: fixed a serious bug in the
#_   function `gmatch`.
#_
</article>
</node>
<node>
id=278
lv=1
dt=Text
nm=Version 2.0.0
ctime=3476017157
mtime=3476017221
<article>
#_<markdown>
#_
#_This is the first release of the **Unicode LuaFAR** -
#_intended for use by plugins working with Unicode Far (Far 2.0).
#_
</article>
</node>
<node>
id=255
lv=2
dt=Text
nm=What's new in Unicode version
<article>
#_<markdown>
#_
#_### Passing string arguments and returning string values
#_
#_The functions of the Unicode LuaFAR library assume string
#_arguments and string return values to be in the **UTF-8**
#_encoding. (There are a few exceptions from this rule, mostly
#_when strings are used to exchange binary data).
#_
#_### Removed functions
#_
#_1. `far.ConvertNameToReal`
#_1. `far.CtrlGetPanelShortInfo`
#_1. `far.DetectCharTable`
#_1. `far.EditorEditorToOEM`
#_1. `far.EditorLower`
#_1. `far.EditorOEMToEditor`
#_1. `far.EditorStrCmp`
#_1. `far.EditorStriCmp`
#_1. `far.EditorUpper`
#_1. `far.ExpandEnvironmentStr`
#_1. `far.GetCharTable`
#_
#_### Changed structures and functions
#_
#_1. [`FindData`](90.html)
#_1. [`PluginPanelItem`](85.html)
#_1. [`ViewerInfo.CurMode`](133.html)
#_1. [`far.AdvControl`](153.html)
#_1. [`far.CtrlGetPanelInfo`](7.html)
#_1. [`far.CtrlSetSelection`](14.html)
#_1. [`far.CtrlSetSortOrder`](148.html)
#_1. [`far.Editor`](21.html)
#_1. [`far.EditorGetInfo`](29.html)
#_1. [`far.OpenFilePlugin`](108.html)
#_1. [`far.Viewer`](77.html)
#_1. [`far.ViewerGetInfo`](132.html)
#_1. [`LF_LuaOpen`](129.html)
#_
#_### Added functions
#_
#_1. [`far.CompareString`](274.html)
#_1. [`far.CtrlGetColumnTypes`](258.html)
#_1. [`far.CtrlGetColumnWidths`](259.html)
#_1. [`far.CtrlGetCurrentPanelItem`](252.html)
#_1. [`far.CtrlGetPanelDir`](260.html)
#_1. [`far.CtrlGetPanelItem`](253.html)
#_1. [`far.CtrlGetSelectedPanelItem`](254.html)
#_1. [`far.EditorGetFileName`](261.html)
#_1. [`far.Find`](271.html)
#_1. [`far.GetCurrentDirectory`](262.html)
#_1. [`far.Gmatch`](269.html)
#_1. [`far.Gsub`](270.html)
#_1. [`far.Match`](272.html)
#_1. [`far.OemToUtf8`](256.html)
#_1. [`far.Regex`](266.html)
#_1. [`far.Utf8ToOem`](257.html)
#_1. [`far.Utf16ToUtf8`](264.html)
#_1. [`far.Utf8ToUtf16`](265.html)
#_1. [`far.wcscmp`](275.html)
#_
</article>
</node>
<node>
id=263
lv=1
dt=Text
nm=Version 1.0.1
<article>
#_<markdown>
#_
#_* [`far.CtrlGetPanelInfo`](7.html) and
#_  [`far.CtrlGetPanelShortInfo`](8.html): fields `ItemsNumber`
#_  and `SelectedItemsNumber` added to the return table.
#_* [`far.Menu`](64.html): fields `grayed` and `hidden` added to
#_  menu item.
#_* Several bug fixes.
#_
</article>
</node>
<node>
id=248
lv=1
dt=Text
nm=Version 1.0.0
mtime=3601969207
<article>
#_<markdown>
#_
#_###Important:
#_* This version of LuaFAR adds functions and constants from
#_  FAR 1.75 API, that are not present in FAR 1.70 API.
#_*  LuaFAR plugins that make no use of this API will work
#_   fine under FAR 1.70. However, the library itself does no
#_   verification of whether some feature is supported by the
#_   running FAR version - it is the plugin's responsibility.
#_
#_###Changes:
#_
#_1. [Auxiliary files](154.html): *farkeys.lua* and
#_   *farcolor.lua* updated to FAR 1.75 build 2614.
#_1. [`far.AdvControl`](153.html): `ACTL_REDRAWALL` command
#_   supported.
#_1. [`far.CtrlGetUserScreen`](228.html): service function
#_   added.
#_1. [`far.EditorAddStackBookmark`](223.html): service
#_   function added.
#_1. [`far.EditorClearStackBookmarks`](224.html): service
#_   function added.
#_1. [`far.EditorDeleteStackBookmark`](225.html): service
#_   function added.
#_1. [`far.EditorGetStackBookmarks`](230.html): service
#_   function added.
#_1. [`far.EditorNextStackBookmark`](227.html): service
#_   function added.
#_1. [`far.EditorPrevStackBookmark`](226.html): service
#_   function added.
#_1. [`far.GetFlags`](57.html): added new flags, covering FAR
#_   API up to FAR 1.75 build 2614.
#_1. [`far.Message`](65.html)
#_   * new flag '`o`' added.
#_   * removed hard limit of message box sizes.
#_1. [`far.OpenPlugin`](109.html): added support for opening
#_   plugin from dialogs.
#_1. [`far.ProcessDialogEvent`](221.html): exported function
#_   added.
#_1. [`far.ProcessEditorEvent`](110.html): `EE_GOTFOCUS` and
#_   `EE_KILLFOCUS` commands supported.
#_1. [`far.ProcessViewerEvent`](127.html): `VE_GOTFOCUS` and
#_   `VE_KILLFOCUS` commands supported.
#_1. [`far.SendDlgMessage`](71.html): `DM_GETCOMBOBOXEVENT`,
#_   `DM_GETEDITPOSITION`, `DM_SETCOMBOBOXEVENT` and
#_   `DM_SETEDITPOSITION` commands supported.
#_1. [`far.ViewerSetMode`](229.html): service function added.
#_1. [`far.AdvControl`](153.html) (`ACTL_GETFARVERSION`):
#_   result can be obtained either as a string, or as 3 numbers.
#_1. [`far.LuafarVersion`](191.html):
#_   result can be obtained either as a string, or as 3 numbers.
#_
#_@@@
#_{actl_redrawall}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_REDRAWALL
#_{dm_getcomboboxevent}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getcomboboxevent.html
#_{dm_geteditposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_geteditposition.html
#_{dm_setcomboboxevent}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcomboboxevent.html
#_{dm_seteditposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_seteditposition.html
#_{ee_gotfocus}: http://api.farmanager.com/ru/structures/processeditoreventinfo.html#EE_GOTFOCUS
#_{ee_killfocus}: http://api.farmanager.com/ru/structures/processeditoreventinfo.html#EE_KILLFOCUS
#_{ve_gotfocus}: http://api.farmanager.com/ru/structures/processviewereventinfo.html#VE_GOTFOCUS
#_{ve_killfocus}: http://api.farmanager.com/ru/structures/processviewereventinfo.html#VE_KILLFOCUS
#_
</article>
</node>
<node>
id=231
lv=1
dt=Text
nm=Version 0.9.0
mtime=3601969228
<article>
#_<markdown>
#_###Service Functions added:
#_1. [`far.DefDlgProc`](219.html)
#_
#_###FAR Standard Functions added:
#_
#_1. [`far.ConvertNameToReal`](198.html)
#_1. [`far.FarRecursiveSearch`](211.html)
#_1. [`far.GetPathRoot`](199.html)
#_1. [`far.GetReparsePointInfo`](200.html)
#_1. [`far.LIsAlpha`](201.html)
#_1. [`far.LIsAlphanum`](202.html)
#_1. [`far.LIsLower`](203.html)
#_1. [`far.LIsUpper`](204.html)
#_1. [`far.LLowerBuf`](205.html)
#_1. [`far.LUpperBuf`](206.html)
#_1. [`far.MkLink`](208.html)
#_1. [`far.MkTemp`](207.html)
#_1. [`far.TruncPathStr`](209.html)
#_1. [`far.TruncStr`](210.html)
#_
#_###Other functions added:
#_
#_1. [`far.FileTimeToSystemTime`](215.html)
#_1. [`far.GetFileInfo`](213.html)
#_1. [`far.GetSystemTime`](217.html)
#_1. [`far.GetTimeZoneInformation`](212.html)
#_1. [`far.SystemTimeToFileTime`](216.html)
#_
#_###Changes:
#_
#_1. [`FindData`](90.html) structure: some fields changed.
#_1. [`PluginPanelItem`](85.html) structure: one field changed.
#_1. [`far.Dialog`](20.html) function: changed meaning of `DlgProc`
#_   return values.
#_1. The [generic LuaFAR plugin](214.html) will export only functions
#_   listed explicitly in the makefile.
#_
#_@@@
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_
</article>
</node>
<node>
id=232
lv=1
dt=Text
nm=Version 0.8.0
mtime=3601969238
<article>
#_<markdown>
#_The following new functions were added:
#_
#_1. [`far.FarInputRecordToKey`](186.html)
#_1. [`far.LStricmp`](188.html)
#_1. [`far.LStrnicmp`](189.html)
#_1. [`far.LuafarVersion`](191.html)
#_1. [`far.ProcessName`](190.html)
#_1. [`far.SetEnv`](192.html)
#_
#_The following functions were enhanced:
#_
#_1. [`far.GetRegKey`](61.html), [`far.SetRegKey`](73.html):
#_   added support of `REG_EXPAND_SZ` and `REG_MULTI_SZ` data types.
#_
#_
</article>
</node>
<node>
id=234
lv=1
dt=Text
nm=Version 0.7.2
mtime=3601969246
<article>
#_<markdown>
#_1. [`far.CPluginStartupInfo`](185.html) - new function added
#_
#_
</article>
</node>
<node>
id=236
lv=1
dt=Text
nm=Version 0.7
mtime=3601969255
<article>
#_<markdown>
#_1. [`far.SendDlgMessage`](71.html) - fixed and extended
#_   (practically all message types are supported).
#_
#_2. [`far.Dialog`](20.html) - added support for the following
#_   controls: `DI_LISTBOX` and `DI_COMBOBOX`
#_
#_@@@
#_{di_combobox}: http://api.farmanager.com/ru/dialogapi/controls/di_combobox.html
#_{di_listbox}: http://api.farmanager.com/ru/dialogapi/controls/di_listbox.html
#_
</article>
</node>
<node>
id=237
lv=1
dt=Text
nm=Version 0.6
mtime=3601969261
<article>
#_<markdown>
#_1. [`far.AdvControl](153.html) - added
#_1. [`far.GetEnv`](152.html) - added
#_1. [`far.ProcessEditorInput`](111.html) - extended
#_1. [farcolor.lua](154.html) - module added
#_1. [Lua BitOp](143.html) - library updated to version 1.0.1
#_
#_
</article>
</node>
<node>
id=238
lv=1
dt=Text
nm=Version 0.5.1
<article>
#_<markdown>
#_
#_1. Added virtual keys that formerly were not available (keys with
#_   punctuation marks).
#_
#_
</article>
</node>
<node>
id=239
lv=1
dt=Text
nm=Version 0.5
<article>
#_<markdown>
#_### What's added in LuaFAR 0.5:
#_
#_ 1.   [Lua BitOp library](143.html)
#_ 1.   [`far.CtrlCheckPanelsExist`](145.html)
#_ 1.   [`far.CtrlSetNumericSort`](146.html)
#_ 1.   [`far.CtrlSetSortMode`](147.html)
#_ 1.   [`far.CtrlSetSortOrder`](148.html)
#_ 1.   [`far.EditorGetBookmarks`](136.html)
#_ 1.   [`far.EditorProcessKey`](138.html)
#_ 1.   [`far.EditorSetKeyBar`](139.html)
#_ 1.   [`far.EditorSetParam`](140.html)
#_ 1.   [`far.EditorTurnOffMarkingBlock`](137.html)
#_ 1.   [`far.OnError`](150.html)
#_ 1.   [`far.ViewerGetInfo`](132.html)
#_ 1.   [`far.ViewerQuit`](134.html)
#_ 1.   [`far.ViewerRedraw`](135.html)
#_ 1.   [`far.ViewerSelect`](144.html)
#_ 1.   [`far.ViewerSetKeyBar`](141.html)
#_ 1.   [`far.ViewerSetPosition`](142.html)
#_
#_
</article>
</node>
<node>
id=119
lv=0
dt=Text
nm=Incompatibilities with the Previous Version
mtime=3509098722
<article>
#_<markdown>
#_LuaFAR 3.0 is incompatible with versions 2.x in numerous aspects, due to the move from Far 2 API to Far 3 API.
</article>
</node>
<node>
id=388
lv=1
dt=Text
nm=Version 2.6.0
ctime=3499339086
mtime=3499339103
<article>
#_<markdown>
#_1. [`far.GetPluginInfo`](105.html) -- field `DiskMenuNumbers` removed from the returned table, as it does not exist in Far builds `>= 2.0.1692`.
#_
#_
</article>
</node>
<node>
id=384
lv=1
dt=Text
nm=Version 2.5.0
ctime=3492945419
mtime=3498897344
<article>
#_<markdown>
#_1. `far.Find` -- renamed to [`far.find`](271.html)
#_1. `far.Gmatch` -- renamed to [`far.gmatch`](269.html)
#_1. `far.Gsub` -- renamed to [`far.gsub`](270.html)
#_1. `far.Match` -- renamed to [`far.match`](272.html)
#_1. `far.Regex` -- renamed to [`far.regex`](266.html)
#_1. `LF_GetMinFarVersionW` -- removed.
#_
</article>
</node>
<node>
id=376
lv=1
dt=Text
nm=Version 2.4.0
ctime=3489519274
mtime=3489519286
<article>
#_<markdown>
#_
#_1. [`far.ViewerSetPosition`](142.html) - real start position number
#_   is returned (was: boolean).
#_
</article>
</node>
<node>
id=371
lv=1
dt=Text
nm=Version 2.3.0
ctime=3487877655
mtime=3487877668
<article>
#_<markdown>
#_
#_1. [`far.EditorGetSelection`](30.html) - API (table fields) changed.
#_1. [`far.Message`](65.html) - flags `'d'` and `'o'` are deprecated
#_   and no more supported.
#_
</article>
</node>
<node>
id=358
lv=1
dt=Text
nm=Version 2.2.0
ctime=3482350713
mtime=3482350727
<article>
#_<markdown>
#_
#_1. [`LF_LuaOpen`](129.html) - API changed (type of the 3-rd parameter).
#_   **All LuaFAR plugins (except ANSI ones) must be rebuilt to work
#_   with this version.**
#_1. [`far.CtrlGetCmdLinePos`](6.html) - position is 1-based
#_1. [`far.CtrlSetCmdLinePos`](12.html) - position is 1-based
#_1. [`far.ProcessKey`](114.html) - API changed: made closer to Far API
#_1. [`far.SendDlgMessage`](71.html) - `DM_RESIZEDIALOG` - return
#_   value is a table
#_1. [`far.SendDlgMessage`](71.html) - `DM_MOVEDIALOG` - return
#_   value is a table
#_
#_@@@
#_{dm_movedialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_movedialog.html
#_{dm_resizedialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_resizedialog.html
#_
</article>
</node>
<node>
id=316
lv=1
dt=Text
nm=Version 2.1.0
ctime=3478898588
mtime=3478898609
<article>
#_<markdown>
#_
#_#### Dialog Messages:
#_
#_1. **`DM_LISTADDSTR`** - return value is 1-based
#_1. **`DM_LISTDELETE`** - `StartIndex` is 1-based
#_1. **`DM_LISTFINDSTRING`** - `StartIndex` and return value are 1-based;
#_   a *nil* is returned if no match found
#_1. **`DM_LISTGETCURPOS`** - `SelectPos` and `TopPos` are 1-based
#_1. **`DM_LISTGETITEM`** - `ItemIndex` is 1-based
#_1. **`DM_LISTINFO`** - `SelectPos` and `TopPos` are 1-based
#_1. **`DM_LISTINSERT`** - `Index` is 1-based; a *nil* is returned on
#_   failure
#_1. **`DM_LISTUPDATE`** - `Index` is 1-based; a *boolean* is returned
#_1. **`DM_LISTSETCURPOS`** - `SelectPos` and `TopPos` are 1-based
#_
#_#### Dialog Events:
#_
#_1. **`DN_LISTCHANGE`** - `Param2` is 1-based
#_1. **`DN_LISTHOTKEY`** - `Param2` is 1-based
#_
#_@@@
#_{dm_listaddstr}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listaddstr.html
#_{dm_listdelete}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listdelete.html
#_{dm_listfindstring}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listfindstring.html
#_{dm_listgetcurpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetcurpos.html
#_{dm_listgetitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetitem.html
#_{dm_listinfo}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listinfo.html
#_{dm_listinsert}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listinsert.html
#_{dm_listsetcurpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsetcurpos.html
#_{dm_listupdate}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listupdate.html
#_{dn_listchange}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_listchange.html
#_{dn_listhotkey}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_listhotkey.html
#_
</article>
</node>
<node>
id=279
lv=1
dt=Text
nm=Version 2.0.0
ctime=3476017361
mtime=3476017375
<article>
#_<markdown>
#_
#_1. When some *flags* value passed to LuaFAR API is of table type,
#_   it should be a dictionary (was: an array).<br>
#_   **NOTE:** This change breaks many existing scripts, which must
#_   be fixed in order to work with the new flags format.<br>
#_   **Example:**<br>
#_   Was: `{"DIF_BOXCOLOR", "DIF_SEPARATOR"}`<br>
#_   Now: `{DIF_BOXCOLOR=1, DIF_SEPARATOR=1}`
#_
#_2. There are many incompatibilities with the non-Unicode LuaFAR
#_   versions. See [What's new in Unicode version](255.html).
#_
#_@@@
#_{dif_boxcolor}: http://api.farmanager.com/ru/dialogapi/flags/dif_boxcolor.html
#_{dif_separator}: http://api.farmanager.com/ru/dialogapi/flags/dif_separator.html
#_
</article>
</node>
<node>
id=249
lv=1
dt=Text
nm=Version 1.0.0
<article>
#_<markdown>
#_
#_1. [`ViewerInfo.CurMode`](133.html): member `TypeWrap`
#_   renamed to `WordWrap`.
#_
</article>
</node>
<node>
id=240
lv=1
dt=Text
nm=Version 0.9.0
<article>
#_<markdown>
#_
#_1. [`FindData`](90.html) structure:<br>
#_   - Field **`dwFileAttributes`** (integer) replaced by field
#_     **`FileAttributes`** (string).
#_   - Fields **`nFileSizeLow`** and **`nFileSizeHigh`**
#_     replaced by field **`FileSize`**.
#_   - Field **`cFileName`** renamed to **`FileName`**
#_   - Field **`cAlternateFileName`** renamed to **`AlternateFileName`**
#_   - Fields **`LastWriteTimeL`** and **`LastWriteTimeH`** replaced
#_     by field **`LastWriteTime`**
#_   - Fields **`LastAccessTimeL`** and **`LastAccessTimeH`** replaced
#_     by field **`LastAccessTime`**
#_   - Fields **`CreationTimeL`** and **`CreationTimeH`** replaced
#_     by field **`CreationTime`**
#_1. [`PluginPanelItem`](85.html) structure:<br>
#_   - Fields **`PackSize`** and **`PackSizeHigh`**
#_     replaced by field **`PackSize`**.
#_1. [`far.Dialog`](20.html) function:<br>
#_   - Changed meaning of `DlgProc` return values.
#_
#_@@@
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_
</article>
</node>
<node>
id=241
lv=1
dt=Text
nm=Version 0.8.0
<article>
#_<markdown>
#_No new incompatibilities introduced.
#_
#_
</article>
</node>
<node>
id=242
lv=1
dt=Text
nm=Version 0.7.2
<article>
#_<markdown>
#_This is a bug-fix release; no new incompatibilities introduced.
#_
#_
</article>
</node>
<node>
id=243
lv=1
dt=Text
nm=Version 0.7
<article>
#_<markdown>
#_1. [`far.DeleteRegKey`](18.html),
#_   [`far.GetRegKey`](61.html),
#_   [`far.SetRegKey`](73.html):
#_   the `Key` argument is treated as relative to the FAR registry
#_   key (which is usually `HKEY_CURRENT_USER\Software\Far`).
#_
#_1. Function `far.GetDlgItems` is removed.
#_   Use [`far.GetDlgItem`](54.html) in cycle instead.
#_
</article>
</node>
<node>
id=244
lv=1
dt=Text
nm=Version 0.6
<article>
#_<markdown>
#_1. [`far.Menu`](64.html): 1-st argument must be a table.
#_1. [`far.Menu`](64.html): field *text* in break key tables renamed to
#_   *BreakKey*.
#_
</article>
</node>
<node>
id=245
lv=1
dt=Text
nm=Version 0.5.1
<article>
#_<markdown>
#_1. Changed string representations of "virtual key codes" (Win32):
#_   removed `"VK_"` prefix, e.g., `"VK_TAB" -> "TAB"`. This change
#_   affects the following functions:
#_   *   [far.ExtractKey](51.html)
#_   *   [far.Menu](64.html)
#_   *   [far.ProcessEditorInput](111.html)
#_   *   [far.ProcessKey](114.html)
#_
#_
</article>
</node>
<node>
id=246
lv=1
dt=Text
nm=Version 0.5
<article>
#_<markdown>
#_
#_1. Function [`LF_LuaOpen`](129.html):
#_    * Name of an environment variable to process made a parameter
#_      (was: `LUA_INIT`)
#_    * Function prepends \<plugin directory\>\?.lua; to `package.path`
#_    * File `%FARHOME%\luafar_init.lua` is not run (and is not
#_      treated as a special file anymore)
#_
#_2. Functions `far.band`, `far.bnot`, `far.bor` and `far.bxor`
#_   were removed. Instead, [Lua BitOp library](143.html) is included.
#_
</article>
</node>
<node>
id=247
lv=1
dt=Text
nm=Version 0.4
<article>
#_1. far.EditorGetSelection:
#_     **Info.BlockType**: was string, now integer
#_
#_2. far.GetPluginInfo:
#_     **PluginInfo.Flags**: was table, now integer
#_
#_3. far.GetFindData, far.GetFiles, far.DeleteFiles, far.MakeDirectory,
#_   far.ProcessHostFile, far.PutFiles, far.SetDirectory:
#_     **OpMode**: was table, now integer
#_
#_4. far.Menu: every menu item must be table type
#_   (was: if it's not a table then it's assumed to be a menu separator).
#_
#_5. far.Menu: the ["text"] field of an item is always treated as a string
#_   (was: if it's a number, then GetMsg(n) was called).
#_
#_@@@
#_{getmsg}: http://api.farmanager.com/ru/service_functions/getmsg.html
#_
</article>
</node>
<node>
id=92
lv=0
dt=Text
nm=LuaFAR plugin-exported functions
<article>
</article>
</node>
<node>
id=122
lv=1
dt=Text
nm=Common functions
<article>
</article>
</node>
<node>
id=96
lv=2
dt=Text
nm=export.Configure
mtime=3602280848
<article>
#_result = export.Configure (Guid)
#_
#_**Parameters:**
#_  Guid:   string
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ConfigureW, ConfigureInfo
#_
#_@@@
#_{configureinfo}: http://api.farmanager.com/ru/structures/configureinfo.html
#_{configurew}: http://api.farmanager.com/ru/exported_functions/configurew.html
#_
</article>
</node>
<node>
id=98
lv=2
dt=Text
nm=export.ExitFAR
mtime=3602280344
<article>
#_export.ExitFAR()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  ExitFARW, ExitInfo
#_
#_@@@
#_{exitfarw}: http://api.farmanager.com/ru/exported_functions/exitfarw.html
#_{exitinfo}: http://api.farmanager.com/ru/structures/exitinfo.html
#_
</article>
</node>
<node>
id=402
lv=2
dt=Text
nm=export.GetGlobalInfo
ctime=3506281912
mtime=3602446008
<article>
#_GInfo = export.GetGlobalInfo ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  GInfo: table
#_    fields of GInfo:
#_      MinFarVersion:       table (array of 5 integers)
#_      Version:             table (array of 5 integers)
#_      Guid:                string (binary GUID)
#_      Title:               string
#_      Description:         string
#_      Author:              string
#_
#_**Far API used:**
#_  GetGlobalInfoW, GlobalInfo
#_
#_@@@
#_{getglobalinfow}: http://api.farmanager.com/ru/exported_functions/getglobalinfow.html
#_{globalinfo}: http://api.farmanager.com/ru/structures/globalinfo.html
#_
</article>
</node>
<node>
id=105
lv=2
dt=Text
nm=export.GetPluginInfo
mtime=3602279498
<article>
#_PInfo = export.GetPluginInfo ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  PInfo: table
#_    fields of PInfo:
#_      Flags:               flags
#_
#_      DiskMenuStrings:     array of strings
#_      DiskMenuGuids:       string (concatenated GUIDs)
#_
#_      PluginMenuStrings:   array of strings
#_      PluginMenuGuids:     string (concatenated GUIDs)
#_
#_      PluginConfigStrings: array of strings
#_      PluginConfigGuids:   string (concatenated GUIDs)
#_
#_      CommandPrefix:       string
#_
#_**Far API used:**
#_  GetPluginInfoW, PluginInfo
#_
#_@@@
#_{getplugininfow}: http://api.farmanager.com/ru/exported_functions/getplugininfow.html
#_{plugininfo}: http://api.farmanager.com/ru/structures/plugininfo.html
#_
</article>
</node>
<node>
id=109
lv=2
dt=Text
nm=export.Open
mtime=3610442975
<article>
#_ret = export.Open (OpenFrom, Guid, Item)
#_
#_**Definitions:**
#_  **"int64"**
#_    Type of userdata, produced by `bit64` library.
#_  **"binary"**
#_    By convention, it is a string enclosed in a table as its first element.
#_    The string is intended to be passed to and from without conversions UTF-8 <-> UTF-16LE.
#_  **"panel"**
#_    By convention, it is a panel handle (any non-false Lua value) enclosed in a table
#_    as its first element. The table must contain the field ["type"]="panel".
#_
#_**Parameters:**
#_  OpenFrom: integer
#_  Guid:     string
#_  Item:
#_    if OpenFrom == OPEN_FROMMACRO:
#_      table (array of arguments):
#_      - each argument can be either of:
#_        string, nil, boolean, number, "int64", or "binary"
#_      - field *n* of the table holds the length of the array
#_    if OpenFrom == OPEN_COMMANDLINE:
#_      string
#_    if OpenFrom == OPEN_SHORTCUT:
#_      table:
#_        *HostFile*:     string
#_        *ShortcutData*: string
#_        *Flags*:        flags
#_    if OpenFrom == OPEN_DIALOG:
#_      table:
#_        *hDlg*: userdata
#_    if OpenFrom == OPEN_ANALYSE:
#_      table `tAnalyseInfo`
#_    if OpenFrom == something else:
#_      integer
#_
#_**Returns:**
#_  if OpenFrom == OPEN_FROMMACRO:
#_    0 or more Lua values.
#_    Currently, values of the following types are supported:
#_        string, nil, boolean, number, "int64", "binary", or "panel".
#_    To open a panel, return a "panel" value as the first return value.
#_  if OpenFrom == something else:
#_    ret: any Lua value; it is processed by LuaFAR as follows:
#_    - Nil and false: NULL is returned to Far.
#_    - Number -1: PANEL_STOP is returned to Far.
#_    - Otherwise: *ret* is considered a panel object, stored in the Lua
#_      registry, its registry reference is returned to Far.
#_      The object is passed to other exported functions when they are
#_      called by Far.
#_
#_**Note:**
#_  Return value of -1 can be used with *OpenFrom* == OPEN_ANALYSE,
#_  when the plugin does actions other than opening a panel, to tell
#_  Far that the file has already been processed.
#_
#_**Far API used:**
#_  OpenW, OpenInfo
#_
#_@@@
#_[bit64]: 405.html
#_[tAnalyseInfo]: 461.html
#_
#_{open_analyse}: http://api.farmanager.com/ru/structures/openinfo.html#OPEN_ANALYSE
#_{open_commandline}: http://api.farmanager.com/ru/structures/openinfo.html#OPEN_COMMANDLINE
#_{open_dialog}: http://api.farmanager.com/ru/structures/openinfo.html#OPEN_DIALOG
#_{open_frommacro}: http://api.farmanager.com/ru/structures/openinfo.html#OPEN_FROMMACRO
#_{open_shortcut}: http://api.farmanager.com/ru/structures/openinfo.html#OPEN_SHORTCUT
#_{openinfo}: http://api.farmanager.com/ru/structures/openinfo.html
#_{openw}: http://api.farmanager.com/ru/exported_functions/openw.html
#_
</article>
</node>
<node>
id=481
lv=2
dt=Text
nm=export.ProcessConsoleInput
ctime=3557661223
mtime=3652906894
<article>
#_result = export.ProcessConsoleInput (rec, flags)
#_
#_**Parameters:**
#_  rec:    table `tInputRecord`
#_  flags:  flags
#_
#_**Returns:**
#_  result: 0, 1, or table `tInputRecord`
#_    **Details:**
#_    - 0/false/nil/nothing result in returning 0 to Far Manager
#_    - table results in returning 2 to Far Manager
#_    - any other value results in returning 1 to Far Manager
#_
#_**Far API used:**
#_  ProcessConsoleInputW, ProcessConsoleInputInfo
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{processconsoleinputinfo}: http://api.farmanager.com/ru/structures/processconsoleinputinfo.html
#_{processconsoleinputw}: http://api.farmanager.com/ru/exported_functions/processconsoleinputw.html
#_
</article>
</node>
<node>
id=319
lv=2
dt=Text
nm=export.ProcessSynchroEvent
ctime=3480185395
mtime=3602280249
<article>
#_ret = export.ProcessSynchroEvent (event, param)
#_
#_**Parameters:**
#_  event: integer
#_  param: integer
#_
#_**Returns:**
#_  ret:   integer
#_
#_**Far API used:**
#_  ProcessSynchroEventW, ProcessSynchroEventInfo
#_
#_@@@
#_{processsynchroeventinfo}: http://api.farmanager.com/ru/structures/processsynchroeventinfo.html
#_{processsynchroeventw}: http://api.farmanager.com/ru/exported_functions/processsynchroeventw.html
#_
</article>
</node>
<node>
id=118
lv=2
dt=Text
nm=export.SetStartupInfo
mtime=3602446223
<article>
#_<markdown>
#_**`This function is not called by LuaFAR`**
#_
#_The C-language part of a plugin should implement and export function `SetStartupInfoW`.
#_Within this function, it should call:
#_
#_1. [`LF_InitLuaState2`](423.html)
#_1. [`LF_RunDefaultScript`](130.html)
#_
#_@@@
#_{setstartupinfow}: http://api.farmanager.com/ru/exported_functions/setstartupinfow.html
#_
</article>
</node>
<node>
id=123
lv=1
dt=Text
nm=Panel functions
<article>
</article>
</node>
<node>
id=425
lv=2
dt=Text
nm=export.Analyse
ctime=3507872410
mtime=3602340395
<article>
#_Handle = export.Analyse (Data)
#_
#_**Parameters:**
#_  Data:   table `tAnalyseInfo`
#_
#_**Returns:**
#_  Handle: any Lua value, or nothing
#_
#_**Description:**
#_  The returned value of false/nil/nothing means the plugin will not process
#_  the file. Otherwise, the value is stored in the registry, may be passed
#_  to the plugin in `export.Open` and will be removed from the registry in
#_  either `export.Open` or `LF_CloseAnalyse`.
#_
#_**Far API used:**
#_  AnalyseW, AnalyseInfo
#_
#_@@@
#_[export.Open]: 109.html
#_[tAnalyseInfo]: 461.html
#_[LF_CloseAnalyse]: 474.html
#_
#_{analyseinfo}: http://api.farmanager.com/ru/structures/analyseinfo.html
#_{analysew}: http://api.farmanager.com/ru/exported_functions/analysew.html
#_
</article>
</node>
<node>
id=473
lv=2
dt=Text
nm=export.CloseAnalyse
ctime=3538549704
mtime=3602340467
<article>
#_**This function is not called by LuaFAR**
#_
#_See Far API: CloseAnalyseW
#_
#_@@@
#_{closeanalysew}: http://api.farmanager.com/ru/exported_functions/closeanalysew.html
#_
</article>
</node>
<node>
id=94
lv=2
dt=Text
nm=export.ClosePanel
mtime=3602280385
<article>
#_export.ClosePanel (object, handle)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: panel handle
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  ClosePanelW, ClosePanelInfo
#_
#_@@@
#_{closepanelinfo}: http://api.farmanager.com/ru/structures/closepanelinfo.html
#_{closepanelw}: http://api.farmanager.com/ru/exported_functions/closepanelw.html
#_
</article>
</node>
<node>
id=95
lv=2
dt=Text
nm=export.Compare
mtime=3602340534
<article>
#_result = export.Compare (object, handle, PanelItem1, PanelItem2, Mode)
#_
#_**Parameters:**
#_  object:     plugin object
#_  handle:     panel handle
#_  PanelItem1: table `tPluginPanelItem`
#_  PanelItem2: table `tPluginPanelItem`
#_  Mode:       integer
#_
#_**Returns:**
#_  result:     integer
#_
#_**Far API used:**
#_  CompareW, CompareInfo
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{compareinfo}: http://api.farmanager.com/ru/structures/compareinfo.html
#_{comparew}: http://api.farmanager.com/ru/exported_functions/comparew.html
#_
</article>
</node>
<node>
id=97
lv=2
dt=Text
nm=export.DeleteFiles
mtime=3602340590
<article>
#_result = export.DeleteFiles (object, handle, PanelItems, OpMode)
#_
#_**Parameters:**
#_  object:     plugin object
#_  handle:     panel handle
#_  PanelItems: table (array of `tPluginPanelItem`)
#_  OpMode:     flags
#_
#_**Returns:**
#_  result:     boolean
#_
#_**Far API used:**
#_  DeleteFilesW, DeleteFilesInfo
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{deletefilesinfo}: http://api.farmanager.com/ru/structures/deletefilesinfo.html
#_{deletefilesw}: http://api.farmanager.com/ru/exported_functions/deletefilesw.html
#_
</article>
</node>
<node>
id=99
lv=2
dt=Text
nm=export.FreeFindData
mtime=3602340713
<article>
#_**This function is not called by LuaFAR**
#_
#_See Far API: FreeFindDataW
#_
#_@@@
#_{freefinddataw}: http://api.farmanager.com/ru/exported_functions/freefinddataw.html
#_
</article>
</node>
<node>
id=101
lv=2
dt=Text
nm=export.GetFiles
mtime=3602340891
<article>
#_result [, newDestPath] = export.GetFiles (object, handle, PanelItems,
#_                                          Move, DestPath, OpMode)
#_
#_**Parameters:**
#_  object:     plugin object
#_  handle:     panel handle
#_  PanelItems: table (array of `tPluginPanelItem`)
#_  Move:       boolean
#_  DestPath:   string
#_  OpMode:     flags
#_
#_**Returns:**
#_  result:      integer
#_  newDestPath: string (optional)
#_
#_**Far API used:**
#_  GetFilesW, GetFilesInfo
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{getfilesinfo}: http://api.farmanager.com/ru/structures/getfilesinfo.html
#_{getfilesw}: http://api.farmanager.com/ru/exported_functions/getfilesw.html
#_
</article>
</node>
<node>
id=102
lv=2
dt=Text
nm=export.GetFindData
mtime=3602340944
<article>
#_Items = export.GetFindData (object, handle, OpMode)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  panel handle
#_  OpMode:  flags
#_
#_**Returns:**
#_  Items:   table (array of `tPluginPanelItem`)
#_
#_**Far API used:**
#_  GetFindDataW, GetFindDataInfo
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{getfinddatainfo}: http://api.farmanager.com/ru/structures/getfinddatainfo.html
#_{getfinddataw}: http://api.farmanager.com/ru/exported_functions/getfinddataw.html
#_
</article>
</node>
<node>
id=104
lv=2
dt=Text
nm=export.GetOpenPanelInfo
mtime=3754053574
<article>
#_OPInfo = export.GetOpenPanelInfo (object, handle)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: panel handle
#_
#_**Returns:**
#_  OPInfo: table
#_    fields of OPInfo:
#_      Flags:            flags
#_      HostFile:         string
#_      CurDir:           string
#_      Format:           string
#_      PanelTitle:       string
#_      InfoLines:        table (array of `tInfoLine` tables)
#_      InfoLinesNumber:  integer
#_      DescrFiles:       table (array of strings)
#_      PanelModesArray:  table (array of `tPanelMode` tables)
#_      PanelModesNumber: integer
#_      StartPanelMode:   integer
#_      StartSortMode:    flag
#_      StartSortOrder:   integer
#_      KeyBar:           table (array of `tKeyBarLabel` tables)
#_      ShortcutData:     string
#_      FreeSize:         number
#_
#_**Far API used:**
#_  GetOpenPanelInfoW, OpenPanelInfo
#_
#_@@@
#_[tKeyBarLabel]: 406.html
#_[tInfoLine]: 120.html
#_[tPanelMode]: 121.html
#_
#_{getopenpanelinfow}: http://api.farmanager.com/ru/exported_functions/getopenpanelinfow.html
#_{openpanelinfo}: http://api.farmanager.com/ru/structures/openpanelinfo.html
#_
</article>
</node>
<node>
id=107
lv=2
dt=Text
nm=export.MakeDirectory
mtime=3786803761
<article>
#_Status [, NewName] = export.MakeDirectory (object, handle, Name, OpMode)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  panel handle
#_  Name:    string
#_  OpMode:  flags
#_
#_**Returns:**
#_  Status:  integer (in accordance with FAR API)
#_  NewName: string
#_
#_**Note:**
#_  The 3-rd parameter (*"Name"*) should be ignored.
#_  It is not removed in order to preserve backward compatibility.
#_
#_**Far API used:**
#_  MakeDirectoryW, MakeDirectoryInfo
#_
#_@@@
#_{makedirectoryinfo}: http://api.farmanager.com/ru/structures/makedirectoryinfo.html
#_{makedirectoryw}: http://api.farmanager.com/ru/exported_functions/makedirectoryw.html
#_
</article>
</node>
<node>
id=113
lv=2
dt=Text
nm=export.ProcessHostFile
mtime=3602341071
<article>
#_result = export.ProcessHostFile (object, handle, Items, OpMode)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: panel handle
#_  Items:  table (array of `tPluginPanelItem`)
#_  OpMode: flags
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ProcessHostFileW, ProcessHostFileInfo
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{processhostfileinfo}: http://api.farmanager.com/ru/structures/processhostfileinfo.html
#_{processhostfilew}: http://api.farmanager.com/ru/exported_functions/processhostfilew.html
#_
</article>
</node>
<node>
id=112
lv=2
dt=Text
nm=export.ProcessPanelEvent
mtime=3602341119
<article>
#_result = export.ProcessPanelEvent (object, handle, Event, Param)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  panel handle
#_  Event:   integer
#_  Param:   string (for FE_CHANGEVIEWMODE and FE_COMMAND), or nil
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  ProcessPanelEventW, ProcessPanelEventInfo
#_
#_@@@
#_{fe_changeviewmode}: http://api.farmanager.com/ru/structures/processpaneleventinfo.html#FE_CHANGEVIEWMODE
#_{fe_command}: http://api.farmanager.com/ru/structures/processpaneleventinfo.html#FE_COMMAND
#_{processpaneleventinfo}: http://api.farmanager.com/ru/structures/processpaneleventinfo.html
#_{processpaneleventw}: http://api.farmanager.com/ru/exported_functions/processpaneleventw.html
#_
</article>
</node>
<node>
id=457
lv=2
dt=Text
nm=export.ProcessPanelInput
ctime=3528882615
mtime=3602341156
<article>
#_result = export.ProcessPanelInput (object, handle, rec)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: panel handle
#_  rec:    table `tInputRecord`
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ProcessPanelInputW, ProcessPanelInputInfo
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{processpanelinputinfo}: http://api.farmanager.com/ru/structures/processpanelinputinfo.html
#_{processpanelinputw}: http://api.farmanager.com/ru/exported_functions/processpanelinputw.html
#_
</article>
</node>
<node>
id=115
lv=2
dt=Text
nm=export.PutFiles
mtime=3602341245
<article>
#_result = export.PutFiles (object, handle, Items, Move, SrcPath, OpMode)
#_
#_**Parameters:**
#_  object:  plugin object
#_  handle:  panel handle
#_  Items:   table (array of `tPluginPanelItem`)
#_  Move:    boolean
#_  SrcPath: string
#_  OpMode:  flags
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  PutFilesW, PutFilesInfo
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{putfilesinfo}: http://api.farmanager.com/ru/structures/putfilesinfo.html
#_{putfilesw}: http://api.farmanager.com/ru/exported_functions/putfilesw.html
#_
</article>
</node>
<node>
id=116
lv=2
dt=Text
nm=export.SetDirectory
mtime=3743410389
<article>
#_result = export.SetDirectory (object, handle, Dir, OpMode, UserData)
#_
#_**Parameters:**
#_  object:    plugin object
#_  handle:    panel handle
#_  Dir:       string
#_  OpMode:    flags
#_  UserData:  any Lua value
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  SetDirectoryW, SetDirectoryInfo
#_
#_@@@
#_{setdirectoryinfo}: http://api.farmanager.com/ru/structures/setdirectoryinfo.html
#_{setdirectoryw}: http://api.farmanager.com/ru/exported_functions/setdirectoryw.html
#_
</article>
</node>
<node>
id=117
lv=2
dt=Text
nm=export.SetFindList
mtime=3602341303
<article>
#_result = export.SetFindList (object, handle, Items)
#_
#_**Parameters:**
#_  object: plugin object
#_  handle: panel handle
#_  Items:  table (array of `tPluginPanelItem`)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  SetFindListW, SetFindListInfo
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{setfindlistinfo}: http://api.farmanager.com/ru/structures/setfindlistinfo.html
#_{setfindlistw}: http://api.farmanager.com/ru/exported_functions/setfindlistw.html
#_
</article>
</node>
<node>
id=124
lv=1
dt=Text
nm=Editor functions
<article>
</article>
</node>
<node>
id=110
lv=2
dt=Text
nm=export.ProcessEditorEvent
mtime=3615182470
<article>
#_result = export.ProcessEditorEvent (EditorID, Event, Param)
#_
#_**Parameters:**
#_  EditorID: integer
#_  Event:    integer
#_  Param:    - table (for Event == EE_CHANGE):
#_                Type:         integer
#_                StringNumber: integer (1-based)
#_            - table (for Event == EE_SAVE)
#_                FileName:     string
#_                FileEOL:      string
#_                CodePage:     integer
#_            - integer (for other events)
#_
#_**Returns:**
#_  result:   integer
#_
#_**Far API used:**
#_  ProcessEditorEventW, ProcessEditorEventInfo
#_
#_@@@
#_{ee_change}: http://api.farmanager.com/ru/structures/processeditoreventinfo.html#EE_CHANGE
#_{ee_save}: http://api.farmanager.com/ru/structures/processeditoreventinfo.html#EE_SAVE
#_{processeditoreventinfo}: http://api.farmanager.com/ru/structures/processeditoreventinfo.html
#_{processeditoreventw}: http://api.farmanager.com/ru/exported_functions/processeditoreventw.html
#_
</article>
</node>
<node>
id=111
lv=2
dt=Text
nm=export.ProcessEditorInput
mtime=3602341405
<article>
#_result = export.ProcessEditorInput (Rec)
#_
#_**Parameters:**
#_  Rec:    table `tInputRecord`
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ProcessEditorInputW, ProcessEditorInputInfo
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{processeditorinputinfo}: http://api.farmanager.com/ru/structures/processeditorinputinfo.html
#_{processeditorinputw}: http://api.farmanager.com/ru/exported_functions/processeditorinputw.html
#_
</article>
</node>
<node>
id=125
lv=1
dt=Text
nm=Viewer functions
<article>
</article>
</node>
<node>
id=127
lv=2
dt=Text
nm=export.ProcessViewerEvent
mtime=3602341445
<article>
#_result = export.ProcessViewerEvent (ViewerID, Event, Param)
#_
#_**Parameters:**
#_  ViewerID: integer
#_  Event:    integer
#_  Param:    nil
#_
#_**Returns:**
#_  result:   integer
#_
#_**Far API used:**
#_  ProcessViewerEventW, ProcessViewerEventInfo
#_
#_@@@
#_{processviewereventinfo}: http://api.farmanager.com/ru/structures/processviewereventinfo.html
#_{processviewereventw}: http://api.farmanager.com/ru/exported_functions/processviewereventw.html
#_
</article>
</node>
<node>
id=220
lv=1
dt=Text
nm=Dialog functions
<article>
</article>
</node>
<node>
id=221
lv=2
dt=Text
nm=export.ProcessDialogEvent
mtime=3615807656
<article>
#_ret = export.ProcessDialogEvent (Event, Param)
#_
#_**Parameters:**
#_  Event:  integer
#_  Param:  table *tFarDialogEvent*
#_            hDlg   : userdata
#_            Msg    : integer
#_            Param1 : integer
#_            Param2 : depends on *Msg*
#_
#_**Returns:**
#_  ret:    integer, or nil
#_
#_**Description:**
#_  If *ret* is *nil* or *false*, then the event processing will continue.
#_  Otherwise, it is assumed that the plugin has processed the event, and *ret*
#_  will then be used as the return value of the dialog event handler.
#_
#_**Note:**
#_  There is a group of drawing and coloring events that by default do not come
#_  to this function. See `far.SubscribeDialogDrawEvents` for the details.
#_
#_**Far API used:**
#_  ProcessDialogEventW, ProcessDialogEventInfo, FarDialogEvent
#_
#_@@@
#_[far.SubscribeDialogDrawEvents]: 498.html
#_
#_{fardialogevent}: http://api.farmanager.com/ru/structures/fardialogevent.html
#_{processdialogeventinfo}: http://api.farmanager.com/ru/structures/processdialogeventinfo.html
#_{processdialogeventw}: http://api.farmanager.com/ru/exported_functions/processdialogeventw.html
#_
</article>
</node>
<node>
id=504
lv=1
dt=Text
nm=Content functions
ctime=3627747437
mtime=3627747437
<article>
</article>
</node>
<node>
id=505
lv=2
dt=Text
nm=export.GetContentFields
ctime=3627747455
mtime=3627829849
<article>
#_Ret = export.GetContentFields (Names)
#_
#_**Parameters:**
#_  Names:  table (an array containing names of column content types)
#_
#_**Returns:**
#_  Ret:    boolean
#_
#_**Description:**
#_  Return true if the plugin supports at least one of the content types.
#_
#_**Far API used:**
#_  GetContentFieldsW, GetContentFieldsInfo
#_
#_@@@
#_{getcontentfieldsw}: http://api.farmanager.com/ru/exported_functions/getcontentfieldsw.html
#_{getcontentfieldsinfo}: http://api.farmanager.com/ru/structures/getcontentfieldsinfo.html
#_
</article>
</node>
<node>
id=506
lv=2
dt=Text
nm=export.GetContentData
ctime=3627747467
mtime=3666088780
<article>
#_Ret = export.GetContentData (FilePath, Names)
#_
#_**Parameters:**
#_  FilePath: full name of the file
#_  Names:    table (an array containing names of column content types)
#_
#_**Returns:**
#_  Ret:      table, or nil
#_
#_**Description:**
#_  The returned table should contain string values at the indexes corresponding
#_  to indexes of supported content types in the *Names* array.
#_
#_**Far API used:**
#_  GetContentDataW, GetContentDataInfo
#_
#_@@@
#_{getcontentdataw}: http://api.farmanager.com/ru/exported_functions/getcontentdataw.html
#_{getcontentdatainfo}: http://api.farmanager.com/ru/structures/getcontentdatainfo.html
#_
</article>
</node>
<node>
id=151
lv=1
dt=Text
nm=Other export functions
<article>
</article>
</node>
<node>
id=150
lv=2
dt=Text
nm=export.OnError
mtime=3602341732
<article>
#_export.OnError (ErrorMsg)
#_
#_**Parameters:**
#_  ErrorMsg: any type, usually a string
#_
#_**Returns:**
#_  nothing
#_
#_**Description:**
#_  This is a user-defined hook into LuaFAR.
#_  If this function is defined by a user application, then, instead of displaying
#_  an error message box, LuaFAR calls this function, passing it the error message value.
#_  The return values of export.OnError (if any) are ignored.
#_
#_
</article>
</node>
<node>
id=131
lv=0
dt=Text
nm=LuaFAR Far libraries
mtime=3507631286
<article>
</article>
</node>
<node>
id=78
lv=1
dt=Text
nm=Common functions
<article>
</article>
</node>
<node>
id=153
lv=2
dt=Text
nm=far.AdvControl
mtime=3618304216
<article>
#_Result = far.AdvControl (Command, Param1, Param2)
#_
#_**Parameters:**
#_  Command:  flags
#_  Param1:   (depends on Command); default=0
#_  Param2:   (depends on Command); default=0
#_
#_**Returns:**
#_  Result:   *(depends on Command)*
#_
#_**Details:**
#_
#_ACTL_COMMIT,
#_ACTL_GETWINDOWCOUNT,
#_ACTL_PROGRESSNOTIFY,
#_ACTL_QUIT,
#_ACTL_REDRAWALL:
#_    Result:  integer
#_
#_ACTL_GETFARHWND:
#_    Result:  light userdata
#_
#_ACTL_SETCURRENTWINDOW,
#_ACTL_SYNCHRO:
#_    Param1:  integer
#_    Result:  integer
#_
#_ACTL_WAITKEY:
#_    Param2:  table `tInputRecord`, or string (e.g. "CtrlF12"), or nil (for any key)
#_    Result:  integer
#_
#_ACTL_GETCOLOR:
#_    Param1:  integer
#_    Result:  table `tFarColor`, or nil
#_
#_ACTL_GETARRAYCOLOR:
#_    Result:  table (array of `tFarColor` tables)
#_
#_ACTL_GETFARMANAGERVERSION:
#_    Param1:  boolean (optional)
#_    Result:  string (e.g. "3.0.0.2040.0"), if Param==false;
#_             5 numbers (e.g. 3,0,0,2040,0), if Param==true;
#_
#_ACTL_GETWINDOWINFO:
#_    Param1:  window number; 1-based integer (optional; default=0)
#_    Result:  table (see its fields below), or nil.
#_        Type:      integer
#_        Id:        userdata (if Type is WTYPE_DIALOG or WTYPE_VMENU), or integer
#_        Pos:       integer (1-based)
#_        Flags:     flags
#_        TypeName:  string
#_        Name:      string
#_
#_ACTL_SETARRAYCOLOR:
#_    Param2:  table (see its fields below;
#_             its array part contains colors
#_             (each color can be supplied as either a `tFarColor` table or a number)
#_        Flags:       flags
#_        StartIndex:  integer
#_    Result:  integer    
#_
#_ACTL_SETPROGRESSSTATE:
#_    Param1:  flags
#_    Result:  integer    
#_
#_ACTL_SETPROGRESSVALUE:
#_    Param2:  table (see its fields below)
#_        Completed, Total:  numbers
#_    Result:  integer    
#_
#_ACTL_GETFARRECT:
#_    Result:  table (see its fields below), or nil
#_        Left, Top, Right, Bottom: integers
#_
#_ACTL_GETCURSORPOS:
#_    Result:  table (see its fields below), or nil
#_        X, Y: integers
#_
#_ACTL_SETCURSORPOS:
#_    Param2:  table (see its fields below)
#_        X, Y: integers
#_    Result:  integer    
#_
#_ACTL_GETWINDOWTYPE:
#_    Result:  table (see its fields below), or nil
#_        Type: integer
#_
#_**Far API used:**
#_  AdvControl
#_
#_@@@
#_[tFarColor]: 427.html
#_[tInputRecord]: 187.html
#_
#_{actl_commit}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_COMMIT
#_{actl_getarraycolor}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETARRAYCOLOR
#_{actl_getcolor}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETCOLOR
#_{actl_getcursorpos}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETCURSORPOS
#_{actl_getfarhwnd}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETFARHWND
#_{actl_getfarmanagerversion}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETFARMANAGERVERSION
#_{actl_getfarrect}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETFARRECT
#_{actl_getwindowcount}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETWINDOWCOUNT
#_{actl_getwindowinfo}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETWINDOWINFO
#_{actl_getwindowtype}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_GETWINDOWTYPE
#_{actl_progressnotify}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_PROGRESSNOTIFY
#_{actl_quit}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_QUIT
#_{actl_redrawall}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_REDRAWALL
#_{actl_setarraycolor}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SETARRAYCOLOR
#_{actl_setcurrentwindow}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SETCURRENTWINDOW
#_{actl_setcursorpos}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SETCURSORPOS
#_{actl_setprogressstate}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SETPROGRESSSTATE
#_{actl_setprogressvalue}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SETPROGRESSVALUE
#_{actl_synchro}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SYNCHRO
#_{actl_waitkey}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_WAITKEY
#_{advcontrol}: http://api.farmanager.com/ru/service_functions/advcontrol.html
#_{wtype_dialog}: http://api.farmanager.com/ru/structures/windowtype.html#WTYPE_DIALOG
#_{wtype_vmenu}: http://api.farmanager.com/ru/structures/windowtype.html#WTYPE_VMENU
#_
</article>
</node>
<node>
id=546
lv=2
dt=Text
nm=far.FreeScreen
ctime=3790273990
mtime=3790274065
<article>
#_far.FreeScreen (handle)
#_
#_**Parameters:**
#_  handle: userdata
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  FreeScreen
#_
#_@@@
#_{freescreen}: http://api.farmanager.com/ru/service_functions/freescreen.html
#_
</article>
</node>
<node>
id=53
lv=2
dt=Text
nm=far.GetDirList
mtime=3602278880
<article>
#_list = far.GetDirList (dir)
#_
#_**Parameters:**
#_  dir:  string
#_
#_**Returns:**
#_  list: array of `tPluginPanelItem` tables, or nil
#_
#_**Far API used:**
#_  GetDirList, FreeDirList
#_
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{freedirlist}: http://api.farmanager.com/ru/service_functions/freedirlist.html
#_{getdirlist}: http://api.farmanager.com/ru/service_functions/getdirlist.html
#_
</article>
</node>
<node>
id=58
lv=2
dt=Text
nm=far.GetMsg
mtime=3784644026
<article>
#_msg = far.GetMsg (MsgId [, PluginId])
#_
#_**Parameters:**
#_  MsgId:    integer
#_  PluginId: string (binary GUID; default: calling plugin's GUID)
#_
#_**Returns:**
#_  msg:   string
#_
#_**Far API used:**
#_  GetMsg
#_
#_@@@
#_{getmsg}: http://api.farmanager.com/ru/service_functions/getmsg.html
#_
</article>
</node>
<node>
id=60
lv=2
dt=Text
nm=far.GetPluginDirList
mtime=3608362125
<article>
#_list = far.GetPluginDirList (handle, Dir)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  Dir:          string
#_
#_**Returns:**
#_  list:         array of `tPluginPanelItem` tables, or nil
#_
#_**Far API used:**
#_  GetPluginDirList, FreePluginDirList
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{freeplugindirlist}: http://api.farmanager.com/ru/service_functions/freeplugindirlist.html
#_{getplugindirlist}: http://api.farmanager.com/ru/service_functions/getplugindirlist.html
#_
</article>
</node>
<node>
id=64
lv=2
dt=Text
nm=far.Menu
mtime=3744734289
<article>
#_Item, Position = far.Menu (Properties, Items [, BreakKeys])
#_
#_**Parameters:**
#_  Properties: table
#_    fields of Properties (every field is optional):
#_      X:            integer
#_      Y:            integer
#_      MaxHeight:    integer
#_      Flags:        flags   (default = FMENU_WRAPMODE)
#_      Title:        string
#_      Bottom:       string
#_      HelpTopic:    string
#_      SelectIndex:  integer (1-based)
#_      Id:           string  (GUID)
#_
#_  Items: table (array of menu items)
#_      a menu item is a table;
#_      fields of a menu item (every field is optional):
#_        text:         string
#_        checked:      boolean, or string
#_        separator:    boolean
#_        disable:      boolean
#_        grayed:       boolean
#_        hidden:       boolean
#_        selected:     boolean
#_        AccelKey:     table `tFarKey` (or string - key name used in Far macros)
#_
#_  BreakKeys:
#_      Either **table** (array of break key items)
#_        a break key item is a table;
#_        fields of a break key item:
#_          BreakKey:     string (see **NOTE 2**)
#_      Or **string** (space delimited sequence of keys)
#_
#_**Returns:**
#_  Item:     table   Either the selected element of *Items* array (if *Enter* was pressed)
#_                    or an element of *BreakKeys* array (if a corresponding break key was
#_                    pressed). If a break key was pressed and *BreakKeys* argument was a string
#_                    then the returned table is created by *far.Menu* function.
#_            nil     The menu was cancelled by the user.
#_
#_  Position: integer Position of the **selected** item at the moment of closing the menu.
#_            nil     The menu was cancelled by the user.
#_
#_**NOTE 1**
#_  Properties.SelectIndex=N is equivalent to Items[N].selected=true
#_  but it has a higher priority.
#_
#_**NOTE 2**
#_  Example of constructing a BreakKey string:
#_  **BreakKey="AS+DELETE"**, where:
#_    *AS*     - stands for AltShift
#_    *+*      - separates key modifiers from key
#_    *DELETE* - `virtual key` *VK_DELETE* (prefix *VK_* is removed).
#_
#_  Key names used in Far macros are also acceptable, e.g. **BreakKey="AltShiftDel"**
#_
#_**NOTE 3**
#_  The first return value (*Item*) can be used by the program for performing
#_  the item-specific action. To do so, the program can put some specific field(s)
#_  into each element of *Items* and *BreakKeys* tables. For example, such fields
#_  can be "action", "filename", etc.
#_
#_**Far API used:**
#_  `Menu`
#_
#_@@@
#_[virtual key]: http://api.farmanager.com/ru/winapi/virtualkeycodes.html
#_[Menu]: http://api.farmanager.com/ru/service_functions/menu.html
#_[tFarKey]: 445.html
#_
#_{fmenu_wrapmode}: http://api.farmanager.com/ru/service_functions/menu.html#FMENU_WRAPMODE
#_
</article>
</node>
<node>
id=69
lv=2
dt=Text
nm=far.RestoreScreen
mtime=3625564744
<article>
#_far.RestoreScreen (handle)
#_
#_**Parameters:**
#_  handle: userdata, or nil. (When it is nil, NULL is passed to Far Manager)
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  RestoreScreen
#_
#_@@@
#_{restorescreen}: http://api.farmanager.com/ru/service_functions/restorescreen.html
#_
</article>
</node>
<node>
id=70
lv=2
dt=Text
nm=far.SaveScreen
mtime=3625554428
<article>
#_handle = far.SaveScreen (X1, Y1, X2, Y2)
#_
#_**Parameters:**
#_  X1: integer, or nil
#_  Y1: integer, or nil
#_  X2: integer, or nil
#_  Y2: integer, or nil
#_
#_**Returns:**
#_  handle: userdata
#_
#_**Far API used:**
#_  SaveScreen
#_
#_@@@
#_{savescreen}: http://api.farmanager.com/ru/service_functions/savescreen.html
#_
</article>
</node>
<node>
id=74
lv=2
dt=Text
nm=far.ShowHelp
mtime=3507818182
<article>
#_result = far.ShowHelp (ModuleName, HelpTopic, Flags)
#_
#_**Parameters:**
#_  ModuleName: string
#_  HelpTopic:  string, or nil
#_  Flags:      flags
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ShowHelp
#_
#_@@@
#_{showhelp}: http://api.farmanager.com/ru/service_functions/showhelp.html
#_
</article>
</node>
<node>
id=76
lv=2
dt=Text
nm=far.Text
mtime=3602743588
<article>
#_far.Text (X, Y, Color, Str)
#_
#_**Parameters:**
#_  X:     integer
#_  Y:     integer
#_  Color: table `tFarColor`, or integer
#_  Str:   string, or nil (if nil, NULL is passed to Far)
#_
#_**Returns:**
#_  nothing
#_
#_**Note:**
#_  All parameters are optional.
#_  far.Text() is equivalent to far.Text(0,0,0x0F,nil).
#_
#_**Far API used:**
#_  `Text`
#_
#_@@@
#_[tFarColor]: 427.html
#_[Text]: http://api.farmanager.com/ru/service_functions/text.html
#_
</article>
</node>
<node>
id=81
lv=1
dt=Text
nm=Dialog functions
<article>
</article>
</node>
<node>
id=435
lv=2
dt=Text
nm=far.ColorDialog
ctime=3511465011
mtime=3602277807
<article>
#_OutColor = far.ColorDialog (InColor, Flags)
#_
#_**Parameters:**
#_  InColor:  table `tFarColor`, or integer (optional; default=0x0F)
#_  Flags:    flags (optional)
#_
#_**Returns:**
#_  OutColor: table `tFarColor`, integer, or nil
#_
#_**Note:**
#_  Type of *OutColor* is the same as that of *InColor*.
#_
#_**Far API used:**
#_  ColorDialog
#_
#_@@@
#_[tFarColor]: 427.html
#_
#_{colordialog}: http://api.farmanager.com/ru/service_functions/colordialog.html
#_
</article>
</node>
<node>
id=490
lv=2
dt=Text
nm=far.CreateUserControl
ctime=3585338276
mtime=3605129666
<article>
#_<markdown>
#_Buffer support for `DI_USERCONTROL`. Use it like this:
#_
#_```
#_local buffer=far.CreateUserControl(10,10)
#_local textel={Char="a",Attributes={Flags=bit64.bor(F.FCF_FG_4BIT,F.FCF_BG_4BIT),ForegroundColor=9,BackgroundColor=8}}
#_for ii=1,#buffer do
#_  buffer[ii]=textel
#_end
#_local items={
#_  {"DI_DOUBLEBOX",0,0,11,11,0,0,0,0,""},
#_  {"DI_USERCONTROL",1,1,10,10,buffer,0,0,0,""}
#_}
#_```
#_
#_@@@
#_{di_usercontrol}: http://api.farmanager.com/ru/dialogapi/controls/di_usercontrol.html
#_
</article>
</node>
<node>
id=20
lv=2
dt=Text
nm=far.Dialog
mtime=3646474948
<article>
#_result = far.Dialog (Guid,X1,Y1,X2,Y2,HelpTopic,Items,Flags,fDlgProc)
#_
#_**Parameters:**
#_  Same parameters as in `far.DialogInit`
#_
#_**Returns:**
#_  result: 1-based integer (or nil in case of failure)
#_
#_**Note:**
#_  The function updates the *Items* array to the values
#_  the dialog items have at the moment of dialog closing.
#_
#_**Far API used:**
#_  DialogInit, DialogRun, DialogFree, DlgProc
#_
#_@@@
#_[far.DialogInit]: 378.html
#_
#_{dialogfree}: http://api.farmanager.com/ru/service_functions/dialogfree.html
#_{dialoginit}: http://api.farmanager.com/ru/service_functions/dialoginit.html
#_{dialogrun}: http://api.farmanager.com/ru/service_functions/dialogrun.html
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_
</article>
</node>
<node>
id=380
lv=2
dt=Text
nm=far.DialogFree
ctime=3490426732
mtime=3490521200
<article>
#_far.DialogFree (handle)
#_
#_**Parameters:**
#_  handle: userdata (obtained from a `far.DialogInit` call)
#_
#_**Returns:**
#_  nothing
#_
#_**Note:**
#_  If *far.DialogFree* is never called by the program, the dialog
#_  handle will be eventually freed by the garbage collector.
#_
#_**Far API used:**
#_  DialogFree
#_
#_@@@
#_[far.DialogInit]: 378.html
#_
#_{dialogfree}: http://api.farmanager.com/ru/service_functions/dialogfree.html
#_
</article>
</node>
<node>
id=378
lv=2
dt=Text
nm=far.DialogInit
ctime=3490426716
mtime=3646474866
<article>
#_hDlg = far.DialogInit (Guid,X1,Y1,X2,Y2,HelpTopic,Items,Flags,fDlgProc)
#_
#_**Parameters:**
#_  Guid:      string
#_  X1:        integer
#_  Y1:        integer
#_  X2:        integer
#_  Y2:        integer
#_  HelpTopic: string, or nil
#_  Items:     table (array of `tFarDialogItem`)
#_  Flags:     flags
#_  fDlgProc:  function (`dialog event handler`), or nil
#_
#_**Returns:**
#_  hDlg:      userdata (or nil in case of failure)
#_
#_**Return value**
#_  The dialog handle returned by this function has the following methods:
#_  *__tostring*, *__gc*, *rawhandle* and *send*.
#_
#_  **hDlg:rawhandle()**
#_    returns the original value of handle received from Far Manager
#_    that is suitable for using with LuaJIT FFI and as a table key.
#_
#_  **hDlg:send(...)**
#_    is equivalent to `far.SendDlgMessage`(hDlg, ...)
#_
#_**Far API used:**
#_  DialogInit, DlgProc
#_
#_@@@
#_[tFarDialogItem]: 295.html
#_[dialog event handler]: 285.html
#_[far.SendDlgMessage]: 71.html
#_{dialoginit}: http://api.farmanager.com/ru/service_functions/dialoginit.html
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_
</article>
</node>
<node>
id=379
lv=2
dt=Text
nm=far.DialogRun
ctime=3490426724
mtime=3573932440
<article>
#_result = far.DialogRun (handle)
#_
#_**Parameters:**
#_  handle: userdata (obtained from a `far.DialogInit` call)
#_
#_**Returns:**
#_  result: integer (1-based)
#_
#_**Far API used:**
#_  DialogRun
#_
#_@@@
#_[far.DialogInit]: 378.html
#_
#_{dialogrun}: http://api.farmanager.com/ru/service_functions/dialogrun.html
#_
</article>
</node>
<node>
id=54
lv=2
dt=Text
nm=far.GetDlgItem
mtime=3602350154
<article>
#_result = far.GetDlgItem (hDlg, numitem [,item])
#_
#_**Parameters:**
#_  hDlg:    userdata
#_  numitem: integer (1-based)
#_  item:    table, or nil
#_
#_**Returns:**
#_  result: table, or nil
#_
#_**Note:**
#_  This function is equivalent to
#_    `far.SendDlgMessage`(hDlg, "DM_GETDLGITEM", numitem, item)
#_
#_**Far API used:**
#_  SendDlgMessage, DM_GETDLGITEM
#_
#_@@@
#_[far.SendDlgMessage]: 71.html
#_
#_{dm_getdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgitem.html
#_{senddlgmessage}: http://api.farmanager.com/ru/service_functions/senddlgmessage.html
#_
</article>
</node>
<node>
id=62
lv=2
dt=Text
nm=far.InputBox
mtime=3534766496
<article>
#_result = far.InputBox (Id, Title, Prompt, HistoryName, SrcText,
#_                       DestLength, HelpTopic, Flags)
#_
#_**Parameters:**
#_  Id:          string (dialog GUID), or nil (default=Plugin Id)
#_  Title:       string, or nil
#_  Prompt:      string, or nil
#_  HistoryName: string, or nil
#_  SrcText:     string, or nil
#_  DestLength:  integer, or nil
#_  HelpTopic:   string, or nil
#_  Flags:       flags, or nil
#_    (default = FIB_ENABLEEMPTY|FIB_BUTTONS|FIB_NOAMPERSAND)
#_
#_**Returns:**
#_  result:      string, or nil
#_
#_**Far API used:**
#_  InputBox
#_
#_@@@
#_{fib_buttons}: http://api.farmanager.com/ru/service_functions/inputbox.html#FIB_BUTTONS
#_{fib_enableempty}: http://api.farmanager.com/ru/service_functions/inputbox.html#FIB_ENABLEEMPTY
#_{fib_noampersand}: http://api.farmanager.com/ru/service_functions/inputbox.html#FIB_NOAMPERSAND
#_{inputbox}: http://api.farmanager.com/ru/service_functions/inputbox.html
#_
</article>
</node>
<node>
id=65
lv=2
dt=Text
nm=far.Message
mtime=3734089847
<article>
#_result = far.Message (Msg, [Title], [Buttons], [Flags], [HelpTopic], [Id])
#_
#_**Parameters:**
#_  *Msg:*       any type (usually: string)
#_
#_  *Title:*     string
#_
#_  *Buttons:*   string
#_    - button captions are separated by semicolons
#_    - default value is one button "OK"
#_    - empty string means no buttons
#_    - if *Buttons* starts with a semicolon (;), then it must be
#_      one of the following predefined strings (case insensitive):
#_        ";Ok", ";OkCancel", ";AbortRetryIgnore", ";YesNo",
#_        ";YesNoCancel", ";RetryCancel".
#_
#_  *Flags:*     string
#_    it is checked if some predefined letters are present:
#_      'w' stands for FMSG_WARNING
#_      'e' stands for FMSG_ERRORTYPE
#_      'k' stands for FMSG_KEEPBACKGROUND
#_      'l' stands for FMSG_LEFTALIGN
#_      'n' stands for "no wrapping of long lines"
#_
#_  *HelpTopic:* string
#_
#_  *Id:*        string (GUID); default=plugin Id
#_
#_**Returns:**
#_  *result:* integer (1-based)
#_
#_**Note 1:**
#_  Before calling FAR function *Message*, the function:
#_    a) wraps long lines (unless the flag 'n' is present), and
#_    b) limits the maximal number of lines and buttons.
#_
#_**Note 2:**
#_  As in the original `Message` function, every line in **Msg** parameter
#_  that starts with \1 is treated as a single delimiter line;
#_  a line starting with \2 as a double delimiter line.
#_
#_**Far API used:**
#_  `Message`
#_
#_@@@
#_[Message]: http://api.farmanager.com/ru/service_functions/message.html
#_
#_{fmsg_errortype}: http://api.farmanager.com/ru/service_functions/message.html#FMSG_ERRORTYPE
#_{fmsg_keepbackground}: http://api.farmanager.com/ru/service_functions/message.html#FMSG_KEEPBACKGROUND
#_{fmsg_leftalign}: http://api.farmanager.com/ru/service_functions/message.html#FMSG_LEFTALIGN
#_{fmsg_warning}: http://api.farmanager.com/ru/service_functions/message.html#FMSG_WARNING
#_
</article>
</node>
<node>
id=71
lv=2
dt=Text
nm=far.SendDlgMessage
mtime=3835879532
<article>
#_Result = far.SendDlgMessage (hDlg, Msg, Param1, Param2)
#_    or
#_Result = hDlg:send (Msg, Param1, Param2)
#_
#_**Parameters:**
#_  hDlg:   userdata
#_  Msg:    flags
#_  Param1: integer (1-based where it is element index, 0-based otherwise)
#_  Param2: *(depends on Msg)*
#_
#_**Returns:**
#_  Result: *(depends on Msg)*
#_
#_**Details:**
#_
#_DM_CLOSE,
#_DM_EDITUNCHANGEDFLAG,
#_DM_ENABLE,
#_DM_ENABLEREDRAW,
#_DM_GETCHECK,
#_DM_GETCURSORSIZE,
#_DM_GETDROPDOWNOPENED,
#_DM_GETFOCUS,
#_DM_GETITEMDATA,
#_DM_LISTGETDATASIZE,
#_DM_LISTSORT,
#_DM_REDRAW,
#_DM_SET3STATE,
#_DM_SETCURSORSIZE,
#_DM_SETDROPDOWNOPENED,
#_DM_SETFOCUS,
#_DM_SETINPUTNOTIFY,
#_DM_SETITEMDATA,
#_DM_SETMAXTEXTLENGTH,
#_DM_SETMOUSEEVENTNOTIFY,
#_DM_SHOWDIALOG,
#_DM_SHOWITEM,
#_DM_USER:
#_    Param2:  integer
#_    Result:  integer
#_
#_DM_ADDHISTORY,
#_DM_LISTADDSTR,
#_DM_SETHISTORY,
#_DM_SETTEXT,
#_DM_SETTEXTPTR:
#_    Param2:  string
#_    Result:  integer
#_
#_DM_GETCURSORPOS,
#_DM_GETDIALOGINFO,
#_DM_GETDLGRECT,
#_DM_GETEDITPOSITION,
#_DM_GETITEMPOSITION,
#_DM_GETSELECTION,
#_DM_LISTGETCURPOS,
#_DM_LISTGETTITLES,
#_DM_LISTINFO:
#_    Param2:  none
#_    Result:  table, or nil
#_
#_DM_GETDIALOGTITLE,
#_DM_GETTEXT,
#_DM_GETCONSTTEXTPTR:
#_    Param2:  none
#_    Result:  string
#_
#_DM_KEY:
#_    Param1:  ignored, specify *nil* for clarity.
#_    Param2:  table (array), or string
#_             - If it is an array then each array element should be a `tInputRecord`.
#_             - If it is a string, then it is treated as a sequence of keys separated
#_               by whitespaces, e.g., "a b CtrlC ShiftHome D". The syntax of keys is
#_               the same as in Far Manager macros.
#_    Result:  integer
#_
#_DM_LISTADD,
#_DM_LISTSET:
#_    Param2:  table (array of tables)
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTADD", id,
#_        { { Text="added line 1" },
#_          { Text="added line 2", Flags="LIF_CHECKED" } })
#_
#_DM_LISTDELETE:
#_    Param2:  table, or nil
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTDELETE", id,
#_        { StartIndex=1, Count=2 })
#_
#_DM_LISTFINDSTRING:
#_    Param2:  table
#_    Result:  integer, or nil
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_FINDSTRING", id,
#_        { StartIndex=1, Pattern="File??.txt" })
#_
#_DM_LISTGETITEM:
#_    Param2:  integer (ItemIndex)
#_    Result:  table, or nil
#_
#_DM_LISTINSERT,
#_    Param2:  table
#_    Result:  integer, or nil
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTINSERT", id,
#_        { Index=2, Text="Hello World", Flags="LIF_CHECKED" })
#_
#_DM_LISTUPDATE:
#_    Param2:  table
#_    Result:  boolean
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTUPDATE", id,
#_        { Index=2, Text="Hello World", Flags="LIF_CHECKED" })
#_
#_DM_LISTSETCURPOS:
#_    Param2:  table
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTSETCURPOS", id,
#_        { SelectPos=5, TopPos=2 })
#_    *Note:*
#_      Elements numbering is 1-based.
#_
#_DM_LISTSETTITLES:
#_    Param2:  table
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_LISTSETTITLES", id,
#_        { Title="hello", Bottom="goodbye" })
#_
#_DM_LISTGETDATA:
#_    Param2:  integer (1-based list index)
#_    Result:  either of
#_               - nil - if Far returned 0
#_               - light userdata (raw data pointer) - if alien data detected
#_               - value passed by the last DM_LISTSETDATA call
#_
#_DM_LISTSETDATA:
#_    Param2:  table
#_               ["Index"] - integer (1-based list index)
#_               ["Data"]  - any Lua value except nil
#_    Result:  integer (returned from Far)
#_
#_DM_GETDLGITEM:
#_    Param2:  table, or nil
#_    Result:  table, or nil
#_    *Note:*
#_      res = far.SendDlgMessage(hDlg, "DM_GETDLGITEM", numitem, item)
#_          *is equivalent to*
#_      res = `far.GetDlgItem`(hDlg, numitem, item)
#_
#_DM_SETDLGITEM:
#_    Param2:  table
#_    Result:  boolean
#_    *Note:*
#_      res = far.SendDlgMessage(hDlg, "DM_SETDLGITEM", numitem, item)
#_          *is equivalent to*
#_      res = `far.SetDlgItem`(hDlg, numitem, item)
#_
#_DM_MOVEDIALOG:
#_    Param1:  integer (0=relative, otherwise absolute coordinates)
#_    Param2:  table
#_    Result:  table
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_MOVEDIALOG", 0, { X=5, Y=-2 })
#_
#_DM_RESIZEDIALOG:
#_    Param2:  table
#_    Result:  table
#_
#_DM_SETCHECK:
#_    Param2:  flag
#_    Result:  integer
#_
#_DM_SETCURSORPOS:
#_    Param2:  table
#_    Result:  integer
#_
#_DM_SETITEMPOSITION:
#_    Param2:  table
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_SETITEMPOSITION", id,
#_        { Left=3, Top=3, Right=20, Bottom=5 })
#_
#_DM_SETSELECTION:
#_    Param2:  table
#_    Result:  integer
#_    *Note:* this function has much in common with `editor.Select`
#_
#_DM_SETCOMBOBOXEVENT:
#_    Param2:  flags
#_    Result:  integer
#_
#_DM_SETEDITPOSITION:
#_    Param2:  table
#_    Result:  integer
#_    *Example:*
#_      res = far.SendDlgMessage(hDlg, "DM_SETEDITPOSITION", id,
#_        { CurPos=3, Overtype=0 })
#_
#_DN_BTNCLICK,
#_DN_DRAGGED,
#_DN_DRAWDIALOG,
#_DN_DRAWDIALOGDONE,
#_DN_DROPDOWNOPENED:
#_    Param2:  integer
#_    Result:  integer
#_
#_DN_CONTROLINPUT:
#_    Param2:  `tInputRecord` or string
#_    Result:  integer
#_
#_DM_GETDLGDATA,
#_DM_SETDLGDATA:
#_  These operations are not implemented as they are used internally by LuaFAR.
#_  Param1 and Param2 are ignored; nil is returned.
#_
#_**Far API used:**
#_  SendDlgMessage
#_
#_@@@
#_[far.GetDlgItem]: 54.html
#_[far.SetDlgItem]: 72.html
#_[editor.Select]: 42.html
#_[tInputRecord]: 187.html
#_
#_{dm_addhistory}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_addhistory.html
#_{dm_close}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_close.html
#_{dm_editunchangedflag}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_editunchangedflag.html
#_{dm_enableredraw}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_enableredraw.html
#_{dm_enable}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_enable.html
#_{dm_getcheck}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getcheck.html
#_{dm_getconsttextptr}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getconsttextptr.html
#_{dm_getcursorpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getcursorpos.html
#_{dm_getcursorsize}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getcursorsize.html
#_{dm_getdialoginfo}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdialoginfo.html
#_{dm_getdialogtitle}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdialogtitle.html
#_{dm_getdlgdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgdata.html
#_{dm_getdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgitem.html
#_{dm_getdlgrect}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdlgrect.html
#_{dm_getdropdownopened}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getdropdownopened.html
#_{dm_geteditposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_geteditposition.html
#_{dm_getfocus}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getfocus.html
#_{dm_getitemdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getitemdata.html
#_{dm_getitemposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getitemposition.html
#_{dm_getselection}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_getselection.html
#_{dm_gettext}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_gettext.html
#_{dm_key}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_key.html
#_{dm_listaddstr}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listaddstr.html
#_{dm_listadd}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listadd.html
#_{dm_listdelete}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listdelete.html
#_{dm_listfindstring}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listfindstring.html
#_{dm_listgetcurpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetcurpos.html
#_{dm_listgetdatasize}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetdatasize.html
#_{dm_listgetdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetdata.html
#_{dm_listgetitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgetitem.html
#_{dm_listgettitles}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listgettitles.html
#_{dm_listinfo}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listinfo.html
#_{dm_listinsert}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listinsert.html
#_{dm_listsetcurpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsetcurpos.html
#_{dm_listsetdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsetdata.html
#_{dm_listsettitles}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsettitles.html
#_{dm_listset}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listset.html
#_{dm_listsort}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listsort.html
#_{dm_listupdate}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_listupdate.html
#_{dm_movedialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_movedialog.html
#_{dm_redraw}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_redraw.html
#_{dm_resizedialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_resizedialog.html
#_{dm_set3state}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_set3state.html
#_{dm_setcheck}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcheck.html
#_{dm_setcomboboxevent}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcomboboxevent.html
#_{dm_setcursorpos}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcursorpos.html
#_{dm_setcursorsize}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setcursorsize.html
#_{dm_setdlgdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setdlgdata.html
#_{dm_setdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setdlgitem.html
#_{dm_setdropdownopened}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setdropdownopened.html
#_{dm_seteditposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_seteditposition.html
#_{dm_setfocus}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setfocus.html
#_{dm_sethistory}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_sethistory.html
#_{dm_setitemdata}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setitemdata.html
#_{dm_setitemposition}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setitemposition.html
#_{dm_setmaxtextlength}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setmaxtextlength.html
#_{dm_setinputnotify}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setmouseeventnotify.html
#_{dm_setmouseeventnotify}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setmouseeventnotify.html
#_{dm_setselection}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setselection.html
#_{dm_settextptr}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_settextptr.html
#_{dm_settext}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_settext.html
#_{dm_showdialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_showdialog.html
#_{dm_showitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_showitem.html
#_{dm_user}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_user.html
#_{senddlgmessage}: http://api.farmanager.com/ru/service_functions/senddlgmessage.html
#_{dn_btnclick}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_btnclick.html
#_{dn_dragged}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_dragged.html
#_{dn_drawdialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdialog.html
#_{dn_drawdialogdone}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdialogdone.html
#_{dn_dropdownopened}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_dropdownopened.html
#_{dn_controlinput}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_controlinput.html
#_
</article>
</node>
<node>
id=72
lv=2
dt=Text
nm=far.SetDlgItem
mtime=3573888533
<article>
#_result = far.SetDlgItem (hDlg, numitem, item)
#_
#_**Parameters:**
#_  hDlg:    userdata
#_  numitem: integer (1-based)
#_  item:    table
#_
#_**Returns:**
#_  result: boolean
#_
#_**Note:**
#_  This function is equivalent to
#_    `far.SendDlgMessage`(hDlg, "DM_SETDLGITEM", numitem, item)
#_
#_**Far API used:**
#_  SendDlgMessage, DM_SETDLGITEM
#_
#_@@@
#_[far.SendDlgMessage]: 71.html
#_
#_{dm_setdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dm_setdlgitem.html
#_{senddlgmessage}: http://api.farmanager.com/ru/service_functions/senddlgmessage.html
#_
</article>
</node>
<node>
id=498
lv=2
dt=Text
nm=far.SubscribeDialogDrawEvents
ctime=3615718962
mtime=3637851409
<article>
#_far.SubscribeDialogDrawEvents ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  nothing
#_
#_**Description:**
#_  This function affects the action of `export.ProcessDialogEvent`.
#_
#_  There is a group of frequently called events that slow down the processing,
#_  especially in menus containing 10000+ items. This occurs due to conversion
#_  of arguments between C and Lua.
#_
#_  For each new dialog, `export.ProcessDialogEvent` will **not** be called for the following
#_  values of *Param.Msg*:
#_      `DN_CTLCOLORDIALOG`
#_      `DN_CTLCOLORDLGITEM`
#_      `DN_CTLCOLORDLGLIST`
#_      `DN_DRAWDIALOG`
#_      `DN_DRAWDIALOGDONE`
#_      `DN_DRAWDLGITEM`
#_      `DN_DRAWDLGITEMDONE`
#_
#_  In order to start receiving this group of messages, call far.SubscribeDialogDrawEvents()
#_  after the dialog creation, e.g. when `DN_INITDIALOG` comes.
#_
#_**Far API used:**
#_  none
#_
#_@@@
#_[export.ProcessDialogEvent]: 221.html
#_[editor.SubscribeChangeEvent]: 486.html
#_[DN_CTLCOLORDIALOG]: http://api.farmanager.com/ru/dialogapi/dmsg/dn_ctlcolordialog.html
#_[DN_CTLCOLORDLGITEM]: http://api.farmanager.com/ru/dialogapi/dmsg/dn_ctlcolordlgitem.html
#_[DN_CTLCOLORDLGLIST]: http://api.farmanager.com/ru/dialogapi/dmsg/dn_ctlcolordlglist.html
#_[DN_DRAWDIALOG]: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdialog.html
#_[DN_DRAWDIALOGDONE]: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdialogdone.html
#_[DN_DRAWDLGITEM]: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdlgitem.html
#_[DN_DRAWDLGITEMDONE]: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdlgitemdone.html
#_[DN_INITDIALOG]: http://api.farmanager.com/ru/dialogapi/dmsg/dn_initdialog.html
#_
</article>
</node>
<node>
id=285
lv=1
dt=Text
nm=Dialog Events
ctime=3477040474
mtime=3608642242
<article>
#_<markdown>
#_
#_### Common information about dialog event handler
#_
#_When the 9-th argument in the [`far.DialogInit`][1] or [`far.Dialog`][2]
#_call is function (*event handler*), that function will be called by Far
#_whenever any of the numerous dialog events occur.
#_
#_        ret = fDlgProc (hDlg, Msg, Param1, Param2)
#_
#_**Parameters:**
#_        hDlg   : userdata
#_        Msg    : integer
#_        Param1 : integer
#_        Param2 : depends on Msg
#_
#_**Returns:**
#_        ret    : depends on Msg
#_
#_### Parameters passed to event handler
#_
#_1. `hDlg`: dialog handle. It is the same userdata kind that [`far.DialogInit`][1] returns.<br>
#_   See description of its methods on [`far.DialogInit`][1] page.
#_1. `Msg`: integer, any `DN_*` value, e.g. `DN_BTNCLICK`, `DN_CLOSE`, etc.
#_1. `Param1`: integer (1-based if it is ID of a dialog element, 0-based otherwise).
#_1. `Param2`: integer for most event types, in accordance to Far API.<br>
#_   For some events, `Param2` is non-integer, see the articles describing those events.
#_
#_
#_### Treating the return value of dialog event handler (in the order of preference)
#_
#_1. Return value of **nil** (or no value) causes **`DefDlgProc`** to be called.
#_   Its return value is returned to Far.
#_1. For some events ([`DN_CTLCOLORDLGLIST`](286.html), [`DN_HELP`](289.html), etc.),
#_   see the return values and their meaning in the article describing that event.
#_1. If the return value is **number**, then that number is returned to Far.
#_1. Otherwise, the boolean equivalent of the return value (that is, either
#_   0 or 1) is returned to Far.
#_
#_[1]: 378.html
#_[2]: 20.html
#_
#_@@@
#_{defdlgproc}: http://api.farmanager.com/ru/service_functions/defdlgproc.html
#_{dn_btnclick}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_btnclick.html
#_{dn_close}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_close.html
#_
</article>
</node>
<node>
id=297
lv=2
dt=Text
nm=DN_BTNCLICK
ctime=3477111575
mtime=3602352332
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_BTNCLICK
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_btnclick}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_btnclick.html
#_
</article>
</node>
<node>
id=298
lv=2
dt=Text
nm=DN_CLOSE
ctime=3477111575
mtime=3602352355
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_CLOSE
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_close}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_close.html
#_
</article>
</node>
<node>
id=409
lv=2
dt=Text
nm=DN_CONTROLINPUT
ctime=3507553254
mtime=3704631390
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    `tInputRecord`
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_CONTROLINPUT
#_
#_@@@
#_[description]: 285.html
#_[tInputRecord]: 187.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_controlinput}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_controlinput.html
#_
</article>
</node>
<node>
id=299
lv=2
dt=Text
nm=DN_CTLCOLORDIALOG
ctime=3477111575
mtime=3602352390
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table `tFarColor`
#_
#_**Return**
#_    table `tFarColor`, or integer, or nothing
#_
#_For default processing of the return value, see the `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_CTLCOLORDIALOG
#_
#_@@@
#_[description]: 285.html
#_[tFarColor]: 427.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_ctlcolordialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_ctlcolordialog.html
#_
</article>
</node>
<node>
id=300
lv=2
dt=Text
nm=DN_CTLCOLORDLGITEM
ctime=3477111575
mtime=3602352410
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tFarDialogItemColors`)
#_
#_**Return**
#_    If the function returned a table (an array of new color
#_    attributes to be set), 1 is returned to Far, otherwise 0.
#_
#_**Far API used:**
#_  DlgProc, DN_CTLCOLORDLGITEM
#_
#_@@@
#_[tFarDialogItemColors]: 293.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_ctlcolordlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_ctlcolordlgitem.html
#_
</article>
</node>
<node>
id=286
lv=2
dt=Text
nm=DN_CTLCOLORDLGLIST
ctime=3477040544
mtime=3602352428
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tFarDialogItemColors`)
#_
#_**Return**
#_    If the function returned a table (an array of new color
#_    attributes to be set), 1 is returned to Far, otherwise 0.
#_
#_**Far API used:**
#_  DlgProc, DN_CTLCOLORDLGLIST
#_
#_@@@
#_[tFarDialogItemColors]: 293.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_ctlcolordlglist}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_ctlcolordlglist.html
#_
</article>
</node>
<node>
id=301
lv=2
dt=Text
nm=DN_DRAGGED
ctime=3477111575
mtime=3602352444
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_DRAGGED
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_dragged}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_dragged.html
#_
</article>
</node>
<node>
id=302
lv=2
dt=Text
nm=DN_DRAWDIALOG
ctime=3477111575
mtime=3602352459
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_DRAWDIALOG
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_drawdialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdialog.html
#_
</article>
</node>
<node>
id=303
lv=2
dt=Text
nm=DN_DRAWDIALOGDONE
ctime=3477111575
mtime=3602352477
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_DRAWDIALOGDONE
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_drawdialogdone}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdialogdone.html
#_
</article>
</node>
<node>
id=287
lv=2
dt=Text
nm=DN_DRAWDLGITEM
ctime=3477040579
mtime=3602352490
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tFarDialogItem`)
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_DRAWDLGITEM
#_
#_@@@
#_[description]: 285.html
#_[tFarDialogItem]: 295.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_drawdlgitem}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdlgitem.html
#_
</article>
</node>
<node>
id=493
lv=2
dt=Text
nm=DN_DRAWDLGITEMDONE
ctime=3604691147
mtime=3604691338
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_DRAWDLGITEMDONE
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_drawdlgitemdone}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_drawdlgitemdone.html
#_
</article>
</node>
<node>
id=492
lv=2
dt=Text
nm=DN_DROPDOWNOPENED
ctime=3604691109
mtime=3604691304
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_DROPDOWNOPENED
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_dropdownopened}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_dropdownopened.html
#_
</article>
</node>
<node>
id=288
lv=2
dt=Text
nm=DN_EDITCHANGE
ctime=3477040592
mtime=3602352502
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tFarDialogItem`)
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_EDITCHANGE
#_
#_@@@
#_[description]: 285.html
#_[tFarDialogItem]: 295.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_editchange}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_editchange.html
#_
</article>
</node>
<node>
id=454
lv=2
dt=Text
nm=DN_GETVALUE
ctime=3525638668
mtime=3602353306
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table
#_      GetType: integer
#_      ValType: integer (enum FARMACROVARTYPE)
#_      Value:   nil, flags, string, or number (depends on ValType)
#_
#_**Return**
#_    table
#_      ValType: integer (enum FARMACROVARTYPE)
#_      Value:   flags, string, or number (depends on ValType)
#_
#_**Note**
#_    If the returned value is not a table containing valid values,
#_    then 0 is returned to Far.
#_
#_**Far API used:**
#_  DlgProc, DN_GETVALUE
#_
#_@@@
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_getvalue}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_getvalue.html
#_{farmacrovartype}: http://api.farmanager.com/ru/structures/farmacrovalue.html#FARMACROVARTYPE
#_
</article>
</node>
<node>
id=306
lv=2
dt=Text
nm=DN_GOTFOCUS
ctime=3477111575
mtime=3602352577
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_GOTFOCUS
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_gotfocus}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_gotfocus.html
#_
</article>
</node>
<node>
id=289
lv=2
dt=Text
nm=DN_HELP
ctime=3477040601
mtime=3602352587
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    string; according to Far API 
#_
#_**Return**
#_    If the function returned a string, its address is returned
#_    to Far, otherwise 0 is returned.
#_
#_**Far API used:**
#_  DlgProc, DN_HELP
#_
#_@@@
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_help}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_help.html
#_
</article>
</node>
<node>
id=307
lv=2
dt=Text
nm=DN_HOTKEY
ctime=3477111575
mtime=3633093110
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    `tInputRecord`
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_HOTKEY
#_
#_@@@
#_[description]: 285.html
#_[tInputRecord]: 187.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_hotkey}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_hotkey.html
#_
</article>
</node>
<node>
id=308
lv=2
dt=Text
nm=DN_INITDIALOG
ctime=3477111575
mtime=3606114863
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_INITDIALOG
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_initdialog}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_initdialog.html
#_
</article>
</node>
<node>
id=408
lv=2
dt=Text
nm=DN_INPUT
ctime=3507553234
mtime=3602352620
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    `tInputRecord`
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_INPUT
#_
#_@@@
#_[description]: 285.html
#_[tInputRecord]: 187.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_input}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_input.html
#_
</article>
</node>
<node>
id=310
lv=2
dt=Text
nm=DN_KILLFOCUS
ctime=3477111575
mtime=3602352635
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_KILLFOCUS
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_killfocus}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_killfocus.html
#_
</article>
</node>
<node>
id=311
lv=2
dt=Text
nm=DN_LISTCHANGE
ctime=3477111575
mtime=3602352644
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_LISTCHANGE
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_listchange}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_listchange.html
#_
</article>
</node>
<node>
id=312
lv=2
dt=Text
nm=DN_LISTHOTKEY
ctime=3477111575
mtime=3602352656
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    integer; according to Far API 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_LISTHOTKEY
#_
#_@@@
#_[description]: 285.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_listhotkey}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_listhotkey.html
#_
</article>
</node>
<node>
id=292
lv=2
dt=Text
nm=DN_RESIZECONSOLE
ctime=3477040640
mtime=3602353245
<article>
#_**Param1**
#_    integer; according to Far API 
#_
#_**Param2**
#_    table (`tCoord`) 
#_
#_**Return**
#_    default processing of the return value, see `description`.
#_
#_**Far API used:**
#_  DlgProc, DN_RESIZECONSOLE
#_
#_@@@
#_[description]: 285.html
#_[tCoord]: 314.html
#_
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_{dn_resizeconsole}: http://api.farmanager.com/ru/dialogapi/dmsg/dn_resizeconsole.html
#_
</article>
</node>
<node>
id=79
lv=1
dt=Text
nm=Editor functions
<article>
</article>
</node>
<node>
id=22
lv=2
dt=Text
nm=editor.AddColor
mtime=3602277824
<article>
#_result = editor.AddColor (EditorId, StringNumber, StartPos, EndPos, Flags,
#_                          Color, Priority, Owner)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer, or nil
#_  StartPos:     integer (1-based)
#_  EndPos:       integer (1-based)
#_  Flags:        flags
#_  Color:        table `tFarColor` or integer
#_  Priority:     integer (optional; default=EDITOR_COLOR_NORMAL_PRIORITY)
#_  Owner:        string, or nil  (defaults to the calling plugin's GUID)
#_
#_**Returns:**
#_  result:       boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_ADDCOLOR
#_
#_@@@
#_[tFarColor]: 427.html
#_
#_{ectl_addcolor}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_ADDCOLOR
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=223
lv=2
dt=Text
nm=editor.AddSessionBookmark
mtime=3507542580
<article>
#_result = editor.AddSessionBookmark (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_ADDSESSIONBOOKMARK
#_
#_@@@
#_{ectl_addsessionbookmark}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_ADDSESSIONBOOKMARK
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=224
lv=2
dt=Text
nm=editor.ClearSessionBookmarks
mtime=3614953967
<article>
#_result = editor.ClearSessionBookmarks (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_CLEARSESSIONBOOKMARKS
#_
#_@@@
#_{ectl_clearsessionbookmarks}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_CLEARSESSIONBOOKMARKS
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=444
lv=2
dt=Text
nm=editor.DelColor
ctime=3515093666
mtime=3572708824
<article>
#_result = editor.DelColor (EditorId, StringNumber, StartPos, Owner)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil (defaults to CURRENT_EDITOR)
#_  StringNumber: integer, or nil
#_  StartPos:     integer, or nil
#_  Owner:        string, or nil  (defaults to the calling plugin's GUID)
#_
#_**Returns:**
#_  result:       boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELCOLOR
#_
#_@@@
#_{ectl_delcolor}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_DELCOLOR
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=23
lv=2
dt=Text
nm=editor.DeleteBlock
mtime=3507542607
<article>
#_result = editor.DeleteBlock (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELETEBLOCK
#_
#_@@@
#_{ectl_deleteblock}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_DELETEBLOCK
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=24
lv=2
dt=Text
nm=editor.DeleteChar
mtime=3507542619
<article>
#_result = editor.DeleteChar (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELETECHAR
#_
#_@@@
#_{ectl_deletechar}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_DELETECHAR
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=225
lv=2
dt=Text
nm=editor.DeleteSessionBookmark
mtime=3688049909
<article>
#_result = editor.DeleteSessionBookmark (EditorId [,position])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  position: integer (1-based), or nil (nil = current position)
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELETESESSIONBOOKMARK
#_
#_@@@
#_{ectl_deletesessionbookmark}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_DELETESESSIONBOOKMARK
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=25
lv=2
dt=Text
nm=editor.DeleteString
mtime=3507542669
<article>
#_result = editor.DeleteString (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_DELETESTRING
#_
#_@@@
#_{ectl_deletestring}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_DELETESTRING
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=21
lv=2
dt=Text
nm=editor.Editor
mtime=3625957315
<article>
#_result = editor.Editor (FileName, Title, X1, Y1, X2, Y2,
#_                        Flags, StartLine, StartChar, CodePage)
#_
#_**Parameters:**
#_  FileName:  string
#_  Title:     string,  or nil (default = NULL)
#_  X1:        integer, or nil (default = 0)
#_  Y1:        integer, or nil (default = 0)
#_  X2:        integer, or nil (default = -1)
#_  Y2:        integer, or nil (default = -1)
#_  Flags:     flags,   or nil (default = 0)
#_  StartLine: integer, or nil (1-based; default = -1)
#_  StartChar: integer, or nil (1-based; default = -1)
#_  CodePage:  integer, or nil (default = CP_AUTODETECT)
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  `Editor`
#_
#_@@@
#_[Editor]: http://api.farmanager.com/ru/service_functions/editor.html
#_
#_
</article>
</node>
<node>
id=27
lv=2
dt=Text
nm=editor.ExpandTabs
mtime=3572618138
<article>
#_result = editor.ExpandTabs (EditorId, StringNumber)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer (1-based), or nil
#_
#_**Returns:**
#_  result:       boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_EXPANDTABS
#_
#_@@@
#_{ectl_expandtabs}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_EXPANDTABS
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=136
lv=2
dt=Text
nm=editor.GetBookmarks
mtime=3507542713
<article>
#_bookmarks = editor.GetBookmarks (EditorId)
#_
#_**Parameters:**
#_  EditorId:  integer, or nil
#_
#_**Returns:**
#_  bookmarks: table (array of "bookmark tables"), or nil
#_    fields of a "bookmark table":
#_      Line:       integer
#_      Cursor:     integer
#_      ScreenLine: integer
#_      LeftPos:    integer
#_
#_**Note:**
#_  This function groups data differently from how Far API's
#_  EditorControl(ECTL_GETBOOKMARKS) does. It places data of
#_  each bookmark into a separate table.
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETBOOKMARKS, ECTL_GETINFO
#_
#_@@@
#_{ectl_getbookmarks}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETBOOKMARKS
#_{ectl_getinfo}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETINFO
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=28
lv=2
dt=Text
nm=editor.GetColor
mtime=3609591333
<article>
#_colordata = editor.GetColor(EditorId, StringNumber, ColorItem)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer (1-based), or nil
#_  ColorItem:    integer (0-based)
#_
#_**Returns:**
#_  colordata:    table (or nil)
#_                  StartPos:     integer
#_                  EndPos:       integer
#_                  Priority:     integer
#_                  Flags:        flags
#_                  Color:        table `tFarColor`
#_                  Owner:        string (GUID)
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETCOLOR
#_
#_@@@
#_[tFarColor]: 427.html
#_
#_{ectl_getcolor}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETCOLOR
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=261
lv=2
dt=Text
nm=editor.GetFileName
mtime=3507542738
<article>
#_FileName = editor.GetFileName (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  FileName: string
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETFILENAME
#_
#_@@@
#_{ectl_getfilename}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETFILENAME
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=29
lv=2
dt=Text
nm=editor.GetInfo
mtime=3602447116
<article>
#_Info = editor.GetInfo (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  Info:     table, or nil
#_    Info fields:
#_      EditorID:              integer
#_      FileName:              string
#_      WindowSizeX:           integer
#_      WindowSizeY:           integer
#_      TotalLines:            integer
#_      CurLine:               integer, 1-based
#_      CurPos:                integer, 1-based
#_      CurTabPos:             integer, 1-based
#_      TopScreenLine:         integer, 1-based
#_      LeftPos:               integer, 1-based
#_      Overtype:              integer
#_      BlockType:             integer
#_      BlockStartLine:        integer, 1-based
#_      Options:               integer
#_      TabSize:               integer
#_      BookmarkCount:         integer
#_      SessionBookmarkCount:  integer
#_      CurState:              integer
#_      CodePage:              integer
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETINFO
#_
#_@@@
#_{ectl_getinfo}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETINFO
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=30
lv=2
dt=Text
nm=editor.GetSelection
mtime=3616180189
<article>
#_Sel = editor.GetSelection (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  Sel:      table, or nil
#_    Sel fields:
#_      BlockType: integer
#_      StartLine: integer, 1-based (Far API + 1)
#_      StartPos:  integer, 1-based (Far API + 1)
#_      EndLine:   integer, 1-based (Far API + 1)
#_      EndPos:    integer, 1-based (Far API + 0)
#_
#_**Note:**
#_  This function does not have a prototype in Far API.
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETINFO, ECTL_GETSTRING, ECTL_SETPOSITION
#_
#_@@@
#_{ectl_getinfo}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETINFO
#_{ectl_getstring}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETSTRING
#_{ectl_setposition}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SETPOSITION
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=230
lv=2
dt=Text
nm=editor.GetSessionBookmarks
mtime=3507542793
<article>
#_bookmarks = editor.GetSessionBookmarks (EditorId)
#_
#_**Parameters:**
#_  EditorId:  integer, or nil
#_
#_**Returns:**
#_  bookmarks: table (array of "bookmark tables"), or nil
#_    fields of a "bookmark table":
#_      Line:       integer
#_      Cursor:     integer
#_      ScreenLine: integer
#_      LeftPos:    integer
#_
#_**Note:**
#_  This function groups data differently from how Far API's
#_  EditorControl(ECTL_GETSESSIONBOOKMARKS) does. It places data
#_  of each bookmark into a separate table.
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETSESSIONBOOKMARKS
#_
#_@@@
#_{ectl_getsessionbookmarks}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETSESSIONBOOKMARKS
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=31
lv=2
dt=Text
nm=editor.GetString
mtime=3682770766
<article>
#_**Note:**
#_  This function is an extension over its prototype in Far API.
#_
#_LineInfo = editor.GetString (EditorId, StringNumber, Mode)
#_    or
#_StringText, StringEOL = editor.GetString (EditorId, StringNumber, Mode)
#_
#_**Parameters:**
#_  EditorId:     integer (default=CURRENT_EDITOR)
#_  StringNumber: integer, 1-based (default=0)
#_  Mode:         integer (0,1,2,3; default=0)
#_
#_**Returns:**
#_  LineInfo: table (Mode<2), or 2 strings (Mode>=2), or nil
#_    fields of LineInfo:
#_      StringNumber: integer, 1-based
#_      StringText:   string
#_      StringEOL:    string
#_      StringLength: integer
#_      SelStart:     integer, 1-based
#_      SelEnd:       integer, 1-based
#_
#_**Description:**
#_  The function's behavior depends on its *Mode* argument:
#_  Mode:  0 = returns: table LineInfo;        changes current position: no
#_         1 = returns: table LineInfo;        changes current position: yes
#_         2 = returns: StringText,StringEOL;  changes current position: yes
#_         3 = returns: StringText,StringEOL;  changes current position: no
#_
#_  Modes 1 and 2 have a side effect: the current line position in the Editor
#_  is set to *StringNumber*.
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETINFO, ECTL_SETPOSITION, ECTL_GETSTRING
#_
#_@@@
#_{ectl_getinfo}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETINFO
#_{ectl_getstring}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETSTRING
#_{ectl_setposition}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SETPOSITION
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=448
lv=2
dt=Text
nm=editor.GetStringW
ctime=3523911376
mtime=3523911537
<article>
#_Same as `editor.GetString` but *StringText* and *StringEOL* are encoded in UTF-16LE.
#_
#_@@@
#_[editor.GetString]: 31.html
#_
</article>
</node>
<node>
id=497
lv=2
dt=Text
nm=editor.GetTitle
ctime=3615110277
mtime=3615110403
<article>
#_Title = editor.GetTitle (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  Title:    string, or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_GETTITLE
#_
#_@@@
#_{ectl_gettitle}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_GETTITLE
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=32
lv=2
dt=Text
nm=editor.InsertString
mtime=3507542843
<article>
#_result = editor.InsertString ([EditorId [, indent]])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  indent:   boolean, defaults to false
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_INSERTSTRING
#_
#_@@@
#_{ectl_insertstring}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_INSERTSTRING
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=33
lv=2
dt=Text
nm=editor.InsertText
mtime=3507542869
<article>
#_result = editor.InsertText (EditorId, text)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  text:     string
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_INSERTTEXT
#_
#_@@@
#_{ectl_inserttext}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_INSERTTEXT
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=450
lv=2
dt=Text
nm=editor.InsertTextW
ctime=3523911742
mtime=3612182828
<article>
#_Same as `editor.InsertText` but *text* should be encoded in UTF-16LE.
#_
#_If *text* argument does not have two zero bytes at the end, the function adds them,
#_so the caller does not have to.
#_
#_@@@
#_[editor.InsertText]: 33.html
#_
</article>
</node>
<node>
id=227
lv=2
dt=Text
nm=editor.NextSessionBookmark
mtime=3507542898
<article>
#_result = editor.NextSessionBookmark (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_NEXTSESSIONBOOKMARK
#_
#_@@@
#_{ectl_nextsessionbookmark}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_NEXTSESSIONBOOKMARK
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=226
lv=2
dt=Text
nm=editor.PrevSessionBookmark
mtime=3507542972
<article>
#_result = editor.PrevSessionBookmark (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_PREVSESSIONBOOKMARK
#_
#_@@@
#_{ectl_prevsessionbookmark}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_PREVSESSIONBOOKMARK
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=36
lv=2
dt=Text
nm=editor.ProcessInput
mtime=3602278569
<article>
#_result = editor.ProcessInput (EditorId, Input)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  Input:    table `tInputRecord`.
#_              (Field *EventType* is mandatory, other fields
#_              are optional. If some field is missing, the default
#_              value of 0/false is used, except for *wRepeatCount*
#_              that defaults to 1).
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_PROCESSINPUT
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{ectl_processinput}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_PROCESSINPUT
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=37
lv=2
dt=Text
nm=editor.Quit
mtime=3507543136
<article>
#_result = editor.Quit (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_QUIT
#_
#_@@@
#_{ectl_quit}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_QUIT
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=38
lv=2
dt=Text
nm=editor.ReadInput
mtime=3602278578
<article>
#_Info = editor.ReadInput (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  Info:     table `tInputRecord`, or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_READINPUT
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{ectl_readinput}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_READINPUT
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=39
lv=2
dt=Text
nm=editor.RealToTab
mtime=3572709078
<article>
#_result = editor.RealToTab (EditorId, StringNumber, SrcPos)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer (1-based), or nil
#_  SrcPos:       integer (1-based)
#_
#_**Returns:**
#_  result:       integer (1-based), or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_REALTOTAB
#_
#_@@@
#_{ectl_realtotab}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_REALTOTAB
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=40
lv=2
dt=Text
nm=editor.Redraw
mtime=3507543169
<article>
#_result = editor.Redraw (EditorId)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_REDRAW
#_
#_@@@
#_{ectl_redraw}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_REDRAW
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=41
lv=2
dt=Text
nm=editor.SaveFile
mtime=3577044333
<article>
#_result = editor.SaveFile (EditorId, FileName, FileEOL, CodePage)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  FileName: string, or nil
#_  FileEOL:  string, or nil
#_  CodePage: integer, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SAVEFILE
#_
#_@@@
#_{ectl_savefile}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SAVEFILE
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=42
lv=2
dt=Text
nm=editor.Select
mtime=3602447196
<article>
#_result = editor.Select (EditorId, SelectData)
#_  or
#_result = editor.Select (EditorId, BlockType, BlockStartLine, BlockStartPos,
#_                        BlockWidth, BlockHeight)
#_
#_**Parameters:**
#_  EditorId:   integer, or nil
#_  SelectData: table
#_    fields of SelectData:
#_      BlockType:      flags
#_      BlockStartLine: integer, 1-based
#_      BlockStartPos:  integer, 1-based
#_      BlockWidth:     integer
#_      BlockHeight:    integer
#_
#_  Parameters of the 2-nd function variant correspond to fields
#_  of the *SelectData* table.
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SELECT
#_
#_@@@
#_{ectl_select}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SELECT
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=139
lv=2
dt=Text
nm=editor.SetKeyBar
mtime=3602278704
<article>
#_result = editor.SetKeyBar (EditorId, param)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  param, either of:
#_      - string "redraw":  redraw the key bar titles;
#_      - string "restore": restore the original titles;
#_      - table (array of `tKeyBarLabel` tables)
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETKEYBAR
#_
#_@@@
#_[tKeyBarLabel]: 406.html
#_
#_{ectl_setkeybar}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SETKEYBAR
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=140
lv=2
dt=Text
nm=editor.SetParam
mtime=3507818234
<article>
#_res1 [, res2] = editor.SetParam (EditorId, Type, Param [, Flags])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  Type:     flags
#_  Param:    integer, boolean, or string
#_  Flags:    flags, or nil
#_
#_**Returns:**
#_  res1: boolean
#_  res2: string (if Type==ESPT_GETWORDDIV), or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETPARAM
#_
#_@@@
#_{ectl_setparam}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SETPARAM
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_{espt_getworddiv}: http://api.farmanager.com/ru/structures/editorsetparameter.html#ESPT_GETWORDDIV
#_
</article>
</node>
<node>
id=43
lv=2
dt=Text
nm=editor.SetPosition
mtime=3572709106
<article>
#_result = editor.SetPosition (EditorId, PosData)
#_  or
#_result = editor.SetPosition (EditorId, CurLine, CurPos,
#_               CurTabPos, TopScreenLine, LeftPos, Overtype)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  PosData:  table
#_    fields of PosData:
#_      CurLine:       integer, 1-based
#_      CurPos:        integer, 1-based
#_      CurTabPos:     integer, 1-based
#_      TopScreenLine: integer, 1-based
#_      LeftPos:       integer, 1-based
#_      Overtype:      integer
#_
#_  Parameters of the 2-nd function variant correspond to fields
#_  of the *PosData* table.
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETPOSITION
#_
#_@@@
#_{ectl_setposition}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SETPOSITION
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=44
lv=2
dt=Text
nm=editor.SetString
mtime=3572379327
<article>
#_result = editor.SetString (EditorId, StringNumber, StringText, StringEOL)
#_
#_**Parameters:**
#_  EditorId:     integer (default=-1)
#_  StringNumber: integer, 1-based (default=0)
#_  StringText:   string
#_  StringEOL:    string, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETSTRING
#_
#_@@@
#_{ectl_setstring}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SETSTRING
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=449
lv=2
dt=Text
nm=editor.SetStringW
ctime=3523911625
mtime=3523911700
<article>
#_Same as `editor.SetString` but *StringText* and *StringEOL*
#_should be encoded in UTF-16LE.
#_
#_@@@
#_[editor.SetString]: 44.html
#_
</article>
</node>
<node>
id=45
lv=2
dt=Text
nm=editor.SetTitle
mtime=3507543302
<article>
#_result = editor.SetTitle ([EditorId [, Title]])
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  Title:    string, or nil
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SETTITLE
#_
#_@@@
#_{ectl_settitle}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SETTITLE
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=486
lv=2
dt=Text
nm=editor.SubscribeChangeEvent
ctime=3576326324
mtime=3576326560
<article>
#_result = editor.SubscribeChangeEvent (EditorId, Subscribe)
#_
#_**Parameters:**
#_  EditorId:   integer, or nil
#_  Subscribe:  boolean (true means "subscribe", false means "unsubscribe")
#_
#_**Returns:**
#_  result:     boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_SUBSCRIBECHANGEEVENT, ECTL_UNSUBSCRIBECHANGEEVENT.
#_
#_@@@
#_{ectl_subscribechangeevent}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_SUBSCRIBECHANGEEVENT
#_{ectl_unsubscribechangeevent}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_UNSUBSCRIBECHANGEEVENT
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=48
lv=2
dt=Text
nm=editor.TabToReal
mtime=3572709125
<article>
#_result = editor.TabToReal (EditorId, StringNumber, SrcPos)
#_
#_**Parameters:**
#_  EditorId:     integer, or nil
#_  StringNumber: integer (1-based), or nil
#_  SrcPos:       integer (1-based)
#_
#_**Returns:**
#_  result:       integer (1-based), or nil
#_
#_**Far API used:**
#_  EditorControl, ECTL_TABTOREAL
#_
#_@@@
#_{ectl_tabtoreal}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_TABTOREAL
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=283
lv=2
dt=Text
nm=editor.UndoRedo
ctime=3476902749
mtime=3507818238
<article>
#_result = editor.UndoRedo (EditorId, Command)
#_
#_**Parameters:**
#_  EditorId: integer, or nil
#_  Command:  flags
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  EditorControl, ECTL_UNDOREDO
#_
#_@@@
#_{ectl_undoredo}: http://api.farmanager.com/ru/service_functions/editorcontrol.html#ECTL_UNDOREDO
#_{editorcontrol}: http://api.farmanager.com/ru/service_functions/editorcontrol.html
#_
</article>
</node>
<node>
id=453
lv=1
dt=Text
nm=Panel functions
ctime=3523954698
mtime=3615036414
<article>
#_<markdown>
#_### Note about parameters in some panel functions
#_
#_Many panel functions have the 1-st parameter *handle* and the 2-nd parameter *whatpanel*.
#_Only one of them is actually used:
#_
#_* If *handle* parameter is supplied as a non-nil value then *whatpanel* parameter is ignored
#_* If *handle* parameter is nil then *whatpanel* parameter is mandatory
#_
</article>
</node>
<node>
id=535
lv=2
dt=Text
nm=panel.BeginSelection
ctime=3774941211
mtime=3774941407
<article>
#_result = panel.BeginSelection (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active_panel, 0=inactive_panel
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_BEGINSELECTION
#_
#_@@@
#_{fctl_beginselection}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_BEGINSELECTION
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=145
lv=2
dt=Text
nm=panel.CheckPanelsExist
mtime=3571802922
<article>
#_result = panel.CheckPanelsExist ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_CHECKPANELSEXIST
#_
#_@@@
#_{fctl_checkpanelsexist}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_CHECKPANELSEXIST
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=330
lv=2
dt=Text
nm=panel.ClearSelection
ctime=3480322277
mtime=3787492154
<article>
#_result = panel.ClearSelection (handle, whatpanel, items)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active_panel, 0=inactive_panel
#_  items:        integer (1-based item index),
#_                or table (array of item indexes)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELINFO, FCTL_CLEARSELECTION
#_
#_@@@
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_{fctl_getpanelinfo}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETPANELINFO
#_{fctl_clearselection}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_CLEARSELECTION
#_
</article>
</node>
<node>
id=4
lv=2
dt=Text
nm=panel.ClosePanel
mtime=3571802942
<article>
#_result = panel.ClosePanel (handle [, dir])
#_
#_**Parameters:**
#_  handle: panel handle
#_  dir:    string (optional);
#_          nil/nothing pass NULL to Far.
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_CLOSEPANEL
#_
#_@@@
#_{fctl_closepanel}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_CLOSEPANEL
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=536
lv=2
dt=Text
nm=panel.EndSelection
ctime=3774941226
mtime=3774941499
<article>
#_result = panel.EndSelection (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active_panel, 0=inactive_panel
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_ENDSELECTION
#_
#_@@@
#_{fctl_endselection}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_ENDSELECTION
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=5
lv=2
dt=Text
nm=panel.GetCmdLine
mtime=3571802946
<article>
#_result = panel.GetCmdLine ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  result: string (or nil)
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETCMDLINE
#_
#_@@@
#_{fctl_getcmdline}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETCMDLINE
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=6
lv=2
dt=Text
nm=panel.GetCmdLinePos
mtime=3571802951
<article>
#_pos = panel.GetCmdLinePos ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  pos: 1-based position (or nil)
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETCMDLINEPOS
#_
#_@@@
#_{fctl_getcmdlinepos}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETCMDLINEPOS
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=331
lv=2
dt=Text
nm=panel.GetCmdLineSelection
ctime=3480326038
mtime=3571802956
<article>
#_SelStart, SelEnd = panel.GetCmdLineSelection ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  SelStart: integer (1-based)
#_  SelEnd:   integer
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETCMDLINESELECTION
#_
#_@@@
#_{fctl_getcmdlineselection}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETCMDLINESELECTION
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=258
lv=2
dt=Text
nm=panel.GetColumnTypes
mtime=3615035274
<article>
#_ColumnTypes = panel.GetColumnTypes (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:      panel handle, or nil
#_  whatpanel:   1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  ColumnTypes: string
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETCOLUMNTYPES
#_
#_@@@
#_{fctl_getcolumntypes}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETCOLUMNTYPES
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=259
lv=2
dt=Text
nm=panel.GetColumnWidths
mtime=3615035289
<article>
#_ColumnWidths = panel.GetColumnWidths (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  ColumnWidths: string
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETCOLUMNWIDTHS
#_
#_@@@
#_{fctl_getcolumnwidths}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETCOLUMNWIDTHS
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=252
lv=2
dt=Text
nm=panel.GetCurrentPanelItem
mtime=3602278895
<article>
#_item = panel.GetCurrentPanelItem (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  item:      `tPluginPanelItem`
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETCURRENTPANELITEM
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{fctl_getcurrentpanelitem}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETCURRENTPANELITEM
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=260
lv=2
dt=Text
nm=panel.GetPanelDirectory
mtime=3615035305
<article>
#_PanelDir = panel.GetPanelDirectory (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  PanelDir:  table `tFarPanelDirectory`
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELDIRECTORY
#_
#_@@@
#_[tFarPanelDirectory]: 459.html
#_
#_{fctl_getpaneldirectory}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETPANELDIRECTORY
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=381
lv=2
dt=Text
nm=panel.GetPanelFormat
ctime=3492068593
mtime=3615035321
<article>
#_PanelFormat = panel.GetPanelFormat (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  PanelFormat:  string
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELFORMAT
#_
#_@@@
#_{fctl_getpanelformat}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETPANELFORMAT
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=382
lv=2
dt=Text
nm=panel.GetPanelHostFile
ctime=3492068606
mtime=3615035340
<article>
#_HostFile = panel.GetPanelHostFile (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  HostFile:  string
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELHOSTFILE
#_
#_@@@
#_{fctl_getpanelhostfile}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETPANELHOSTFILE
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=7
lv=2
dt=Text
nm=panel.GetPanelInfo
mtime=3827227504
<article>
#_tPanelInfo = panel.GetPanelInfo (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  tPanelInfo: table, or nil
#_    fields of tPanelInfo:
#_      OwnerGuid:           string
#_      PluginHandle:        light userdata, or nil
#_      PanelType:           integer
#_      PanelRect:           table (fields: left, top, right, bottom)
#_      ItemsNumber:         integer
#_      SelectedItemsNumber: integer
#_      CurrentItem:         1-based integer
#_      TopPanelItem:        1-based integer
#_      ViewMode:            integer
#_      SortMode:            integer
#_      Flags:               flags
#_      PluginObject:        non-false Lua value
#_
#_**Note 1:**
#_  The *PluginObject* field is LuaFAR-specific. It is only present if OwnerGuid==PluginGuid,
#_  i.e. when *panel.GetPanelInfo* was called from the same plugin that created the panel.
#_  The intended use of this field is when a panel plugin processes macro calls for operations
#_  on an already opened panel.
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELINFO, PanelInfo
#_
#_@@@
#_{fctl_getpanelinfo}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETPANELINFO
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_{panelinfo}: http://api.farmanager.com/ru/structures/panelinfo.html
#_
</article>
</node>
<node>
id=253
lv=2
dt=Text
nm=panel.GetPanelItem
mtime=3615035361
<article>
#_item = panel.GetPanelItem (handle, whatpanel, itemindex)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  itemindex: integer (1-based)
#_
#_**Returns:**
#_  item:      `tPluginPanelItem`
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELITEM
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{fctl_getpanelitem}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETPANELITEM
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=455
lv=2
dt=Text
nm=panel.GetPanelPrefix
ctime=3525948213
mtime=3615035370
<article>
#_Prefix = panel.GetPanelPrefix (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  Prefix:  string, or nil
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELPREFIX
#_
#_@@@
#_{fctl_getpanelprefix}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETPANELPREFIX
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=254
lv=2
dt=Text
nm=panel.GetSelectedPanelItem
mtime=3615035379
<article>
#_item = panel.GetSelectedPanelItem (handle, whatpanel, itemindex)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  itemindex: integer (1-based)
#_
#_**Returns:**
#_  item:      `tPluginPanelItem`
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETSELECTEDPANELITEM
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{fctl_getselectedpanelitem}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETSELECTEDPANELITEM
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=228
lv=2
dt=Text
nm=panel.GetUserScreen
mtime=3726225741
<article>
#_result = panel.GetUserScreen ([handle], [scrolltype])
#_
#_**Parameters:**
#_  handle:     panel handle
#_  scrolltype: integer (defaults to 0)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETUSERSCREEN
#_
#_**Example:**
#_  function printToFARConsole(...)
#_    panel.GetUserScreen()
#_    io.write(...)
#_    io.write("\n")
#_    panel.SetUserScreen()
#_  end
#_
#_@@@
#_{fctl_getuserscreen}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETUSERSCREEN
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=9
lv=2
dt=Text
nm=panel.InsertCmdLine
mtime=3571803014
<article>
#_result = panel.InsertCmdLine (handle, str)
#_
#_**Parameters:**
#_  handle: panel handle, or nil
#_  str:    string
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_INSERTCMDLINE
#_
#_@@@
#_{fctl_insertcmdline}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_INSERTCMDLINE
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=320
lv=2
dt=Text
nm=panel.IsActivePanel
ctime=3480215162
mtime=3571803018
<article>
#_result = panel.IsActivePanel ([handle])
#_
#_**Parameters:**
#_  handle: panel handle
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_ISACTIVEPANEL
#_
#_@@@
#_{fctl_isactivepanel}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_ISACTIVEPANEL
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=10
lv=2
dt=Text
nm=panel.RedrawPanel
mtime=3571803022
<article>
#_result = panel.RedrawPanel (handle, whatpanel [, redrawinfo])
#_
#_**Parameters:**
#_  handle:     panel handle, or nil
#_  whatpanel:  1=active panel; 0=passive panel;
#_  redrawinfo: table with the following fields:
#_                CurrentItem  : integer (1-based)
#_                TopPanelItem : integer (1-based)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_REDRAWPANEL
#_
#_@@@
#_{fctl_redrawpanel}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_REDRAWPANEL
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=484
lv=2
dt=Text
nm=panel.SetActivePanel
ctime=3573119369
mtime=3573119438
<article>
#_result = panel.SetActivePanel (handle, whatpanel)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETACTIVEPANEL
#_
#_@@@
#_{fctl_setactivepanel}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETACTIVEPANEL
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=11
lv=2
dt=Text
nm=panel.SetCmdLine
mtime=3571803030
<article>
#_result = panel.SetCmdLine (handle, str)
#_
#_**Parameters:**
#_  handle: panel handle, or nil
#_  str:    string
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETCMDLINE
#_
#_@@@
#_{fctl_setcmdline}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETCMDLINE
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=12
lv=2
dt=Text
nm=panel.SetCmdLinePos
mtime=3571803034
<article>
#_result = panel.SetCmdLinePos (handle, pos)
#_
#_**Parameters:**
#_  handle: panel handle, or nil
#_  pos:    1-based integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETCMDLINEPOS
#_
#_@@@
#_{fctl_setcmdlinepos}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETCMDLINEPOS
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=332
lv=2
dt=Text
nm=panel.SetCmdLineSelection
ctime=3480326063
mtime=3571803039
<article>
#_result = panel.SetCmdLineSelection (handle, selStart, selEnd)
#_
#_**Parameters:**
#_  handle:   panel handle, or nil
#_  selStart: integer (1-based)
#_  selEnd:   integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETCMDLINESELECTION
#_
#_@@@
#_{fctl_setcmdlineselection}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETCMDLINESELECTION
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=489
lv=2
dt=Text
nm=panel.SetDirectoriesFirst
ctime=3584893767
mtime=3584893925
<article>
#_result = panel.SetDirectoriesFirst (handle, whatpanel [, setfirst])
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  setfirst:  boolean (false=don't set directories first; true=set first;
#_                      defaults to false)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETDIRECTORIESFIRST
#_
#_@@@
#_{fctl_setdirectoriesfirst}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETDIRECTORIESFIRST
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=13
lv=2
dt=Text
nm=panel.SetPanelDirectory
mtime=3602278440
<article>
#_result = panel.SetPanelDirectory (handle, whatpanel, dir)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  dir:       string, or table `tFarPanelDirectory`
#_             (if dir.PluginId is not set, it defaults to Far ID)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETPANELDIRECTORY
#_
#_@@@
#_[tFarPanelDirectory]: 459.html
#_
#_{fctl_setpaneldirectory}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETPANELDIRECTORY
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=14
lv=2
dt=Text
nm=panel.SetSelection
mtime=3787492126
<article>
#_result = panel.SetSelection (handle, whatpanel, items, selection)
#_
#_**Parameters:**
#_  handle:       panel handle, or nil
#_  whatpanel:    1=active_panel, 0=inactive_panel
#_  items:        integer (1-based item index),
#_                or table (array of item indexes)
#_  selection:    boolean
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_GETPANELINFO, FCTL_SETSELECTION
#_
#_@@@
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_{fctl_getpanelinfo}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_GETPANELINFO
#_{fctl_setselection}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETSELECTION
#_
</article>
</node>
<node>
id=147
lv=2
dt=Text
nm=panel.SetSortMode
mtime=3571803056
<article>
#_result = panel.SetSortMode (handle, whatpanel, mode)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  mode:      flags
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETSORTMODE
#_
#_@@@
#_{fctl_setsortmode}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETSORTMODE
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=148
lv=2
dt=Text
nm=panel.SetSortOrder
mtime=3571803060
<article>
#_result = panel.SetSortOrder (handle, whatpanel [, order])
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  order:     boolean (false=direct order; true=reverse order;
#_                      defaults to false)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETSORTORDER
#_
#_@@@
#_{fctl_setsortorder}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETSORTORDER
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=15
lv=2
dt=Text
nm=panel.SetUserScreen
mtime=3726225783
<article>
#_result = panel.SetUserScreen ([handle], [scrolltype])
#_
#_**Parameters:**
#_  handle:     panel handle
#_  scrolltype: integer (defaults to 0)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETUSERSCREEN
#_
#_**Example:**
#_  function printToFARConsole(...)
#_    panel.GetUserScreen()
#_    io.write(...)
#_    io.write("\n")
#_    panel.SetUserScreen()
#_  end
#_
#_@@@
#_{fctl_setuserscreen}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETUSERSCREEN
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=16
lv=2
dt=Text
nm=panel.SetViewMode
mtime=3571803067
<article>
#_result = panel.SetViewMode (handle, whatpanel, mode)
#_
#_**Parameters:**
#_  handle:    panel handle, or nil
#_  whatpanel: 1=active panel; 0=passive panel;
#_  mode:      integer (0...9)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_SETVIEWMODE
#_
#_@@@
#_{fctl_setviewmode}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_SETVIEWMODE
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=17
lv=2
dt=Text
nm=panel.UpdatePanel
mtime=3571803071
<article>
#_result = panel.UpdatePanel (handle, whatpanel [, keepselection])
#_
#_**Parameters:**
#_  handle:         panel handle, or nil
#_  whatpanel:      1=active panel; 0=passive panel;
#_  keepselection:  boolean, defaults to false
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  PanelControl, FCTL_UPDATEPANEL
#_
#_@@@
#_{fctl_updatepanel}: http://api.farmanager.com/ru/service_functions/panelcontrol.html#FCTL_UPDATEPANEL
#_{panelcontrol}: http://api.farmanager.com/ru/service_functions/panelcontrol.html
#_
</article>
</node>
<node>
id=80
lv=1
dt=Text
nm=Viewer functions
<article>
</article>
</node>
<node>
id=479
lv=2
dt=Text
nm=viewer.GetFileName
ctime=3557413971
mtime=3557414017
<article>
#_FileName = viewer.GetFileName (ViewerId)
#_
#_**Parameters:**
#_  ViewerId: integer, or nil
#_
#_**Returns:**
#_  FileName: string
#_
#_**Far API used:**
#_  ViewerControl, VCTL_GETFILENAME
#_
#_@@@
#_{vctl_getfilename}: http://api.farmanager.com/ru/service_functions/viewercontrol.html#VCTL_GETFILENAME
#_{viewercontrol}: http://api.farmanager.com/ru/service_functions/viewercontrol.html
#_
</article>
</node>
<node>
id=132
lv=2
dt=Text
nm=viewer.GetInfo
mtime=3602447477
<article>
#_Info = viewer.GetInfo (ViewerID)
#_
#_**Parameters:**
#_  ViewerID: integer, or nil
#_
#_**Returns:**
#_  Info:     table, or nil
#_    Info fields:
#_      ViewerID:       integer
#_      FileName:       string
#_      FileSize:       double
#_      FilePos:        double, 0-based
#_      WindowSizeX:    integer
#_      WindowSizeY:    integer
#_      Options:        integer
#_      TabSize:        integer
#_      LeftPos:        integer, 1-based
#_      `CurMode`:        table
#_
#_**Far API used:**
#_  ViewerControl, VCTL_GETINFO
#_
#_@@@
#_[CurMode]: 133.html
#_
#_{vctl_getinfo}: http://api.farmanager.com/ru/service_functions/viewercontrol.html#VCTL_GETINFO
#_{viewercontrol}: http://api.farmanager.com/ru/service_functions/viewercontrol.html
#_
</article>
</node>
<node>
id=134
lv=2
dt=Text
nm=viewer.Quit
mtime=3507624360
<article>
#_viewer.Quit (ViewerID)
#_
#_**Parameters:**
#_  ViewerID: integer, or nil
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  ViewerControl, VCTL_QUIT
#_
#_@@@
#_{vctl_quit}: http://api.farmanager.com/ru/service_functions/viewercontrol.html#VCTL_QUIT
#_{viewercontrol}: http://api.farmanager.com/ru/service_functions/viewercontrol.html
#_
</article>
</node>
<node>
id=135
lv=2
dt=Text
nm=viewer.Redraw
mtime=3507624410
<article>
#_viewer.Redraw (ViewerID)
#_
#_**Parameters:**
#_  ViewerID: integer, or nil
#_
#_**Returns:**
#_  nothing
#_
#_**Far API used:**
#_  ViewerControl, VCTL_REDRAW
#_
#_@@@
#_{vctl_redraw}: http://api.farmanager.com/ru/service_functions/viewercontrol.html#VCTL_REDRAW
#_{viewercontrol}: http://api.farmanager.com/ru/service_functions/viewercontrol.html
#_
</article>
</node>
<node>
id=144
lv=2
dt=Text
nm=viewer.Select
mtime=3507624477
<article>
#_result = viewer.Select (ViewerID, BlockStartPos, BlockLen)
#_
#_**Parameters:**
#_  ViewerID:      integer, or nil
#_  BlockStartPos: number
#_  BlockLen:      integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ViewerControl, VCTL_SELECT
#_
#_@@@
#_{vctl_select}: http://api.farmanager.com/ru/service_functions/viewercontrol.html#VCTL_SELECT
#_{viewercontrol}: http://api.farmanager.com/ru/service_functions/viewercontrol.html
#_
</article>
</node>
<node>
id=141
lv=2
dt=Text
nm=viewer.SetKeyBar
mtime=3602278710
<article>
#_result = viewer.SetKeyBar (ViewerID, param)
#_
#_**Parameters:**
#_  ViewerID: integer, or nil
#_  param, either of:
#_      - string "redraw":  redraw the key bar titles;
#_      - string "restore": restore the original titles;
#_      - table (array of `tKeyBarLabel` tables)
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Far API used:**
#_  ViewerControl, VCTL_SETKEYBAR
#_
#_@@@
#_[tKeyBarLabel]: 406.html
#_
#_{vctl_setkeybar}: http://api.farmanager.com/ru/service_functions/viewercontrol.html#VCTL_SETKEYBAR
#_{viewercontrol}: http://api.farmanager.com/ru/service_functions/viewercontrol.html
#_
</article>
</node>
<node>
id=229
lv=2
dt=Text
nm=viewer.SetMode
mtime=3507818253
<article>
#_result = viewer.SetMode (ViewerID, ModeData)
#_
#_**Parameters:**
#_  ViewerID: integer, or nil
#_  ModeData: table
#_    fields of ModeData:
#_      Type:      flags
#_      iParam:    integer
#_      Flags:     flags
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  ViewerControl, VCTL_SETMODE
#_
#_@@@
#_{vctl_setmode}: http://api.farmanager.com/ru/service_functions/viewercontrol.html#VCTL_SETMODE
#_{viewercontrol}: http://api.farmanager.com/ru/service_functions/viewercontrol.html
#_
</article>
</node>
<node>
id=142
lv=2
dt=Text
nm=viewer.SetPosition
mtime=3573762591
<article>
#_pos = viewer.SetPosition (ViewerID, PosData)
#_  or
#_pos = viewer.SetPosition (ViewerID, StartPos, LeftPos, Flags)
#_
#_**Parameters:**
#_  ViewerID: integer, or nil
#_  PosData:  table
#_    fields of PosData:
#_      StartPos:  number, 0-based
#_      LeftPos:   number, 1-based
#_      Flags:     flags
#_
#_  Parameters of the 2-nd function variant correspond to fields
#_  of the *PosData* table.
#_
#_**Returns:**
#_  pos:      resulting value of *StartPos* (number), or nil
#_
#_**Far API used:**
#_  ViewerControl, VCTL_SETPOSITION
#_
#_@@@
#_{vctl_setposition}: http://api.farmanager.com/ru/service_functions/viewercontrol.html#VCTL_SETPOSITION
#_{viewercontrol}: http://api.farmanager.com/ru/service_functions/viewercontrol.html
#_
</article>
</node>
<node>
id=77
lv=2
dt=Text
nm=viewer.Viewer
mtime=3643655890
<article>
#_result = viewer.Viewer (FileName, Title, X1, Y1, X2, Y2, Flags, CodePage)
#_
#_**Parameters:**
#_  FileName: string
#_  Title:    string  (defaults to NULL)
#_  X1:       integer (defaults to 0)
#_  Y1:       integer (defaults to 0)
#_  X2:       integer (defaults to -1)
#_  Y2:       integer (defaults to -1)
#_  Flags:    flags   (defaults to 0)
#_  CodePage: integer (defaults to CP_AUTODETECT)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  `Viewer`
#_
#_@@@
#_[Viewer]: http://api.farmanager.com/ru/service_functions/viewer.html
#_
</article>
</node>
<node>
id=322
lv=1
dt=Text
nm=File Filter Control
ctime=3480243081
mtime=3552796472
<article>
#_<markdown>
#_File filter control is implemented as bindings of Far API
#_function `FileFilterControl`. LuaFAR API is chosen to be
#_different from Far API (in fact, it is much simpler).
#_
#_The API consists of 1 function ([`far.CreateFileFilter`](323.html))
#_that creates an instance of file filter object, the latter has 4
#_methods:
#_[`FreeFileFilter`](324.html),
#_[`OpenFiltersMenu`](325.html),
#_[`StartingToFilter`](326.html) and
#_[`IsFileInFilter`](327.html).
#_
#_#### Example
#_
#_```
#_  -- create a filter for the "active panel" area
#_  local AFilter = far.CreateFileFilter(1, "FFT_PANEL")
#_  if AFilter then
#_    -- update the "current time" parameter
#_    AFilter:StartingToFilter()
#_
#_    -- manipulate panel elements
#_    local pInfo = panel.GetPanelInfo(nil, 1)
#_    for i=1, pInfo.ItemsNumber do
#_      -- apply the filter...
#_      local item = panel.GetPanelItem(nil, 1, i)
#_      if AFilter:IsFileInFilter(item) then
#_        -- the element matches filter conditions;
#_        -- process the element...
#_      end
#_    end
#_
#_    -- free memory
#_    AFilter:FreeFileFilter()
#_  end
#_```
#_
#_@@@
#_{filefiltercontrol}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html
#_
</article>
</node>
<node>
id=323
lv=2
dt=Text
nm=far.CreateFileFilter
ctime=3480243198
mtime=3507818385
<article>
#_f = far.CreateFileFilter (whatPanel, filterType)
#_
#_**Parameters:**
#_  whatPanel:  integer (0=passive panel, 1=active panel)
#_  filterType: flags
#_
#_**Returns:**
#_  f:          userdata (file filter object), or nil
#_
#_**Description:**
#_  The created object has the following methods: `FreeFileFilter`,
#_  `OpenFiltersMenu`, `StartingToFilter` and `IsFileInFilter`.
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_CREATEFILEFILTER
#_
#_@@@
#_[FreeFileFilter]: 324.html
#_[IsFileInFilter]: 327.html
#_[OpenFiltersMenu]: 325.html
#_[StartingToFilter]: 326.html
#_
#_{ffctl_createfilefilter}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html#FFCTL_CREATEFILEFILTER
#_{filefiltercontrol}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html
#_
</article>
</node>
<node>
id=324
lv=2
dt=Text
nm=f:FreeFileFilter
ctime=3480243269
mtime=3481258596
<article>
#_result = f:FreeFileFilter ()
#_
#_**Parameters:**
#_  f:       file filter object
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Note:**
#_  File filter objects are subject to garbage collection,
#_  thus calling this method is not mandatory.
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_FREEFILEFILTER
#_
#_@@@
#_{ffctl_freefilefilter}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html#FFCTL_FREEFILEFILTER
#_{filefiltercontrol}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html
#_
</article>
</node>
<node>
id=325
lv=2
dt=Text
nm=f:OpenFiltersMenu
ctime=3480243300
mtime=3480252058
<article>
#_result = f:OpenFiltersMenu ()
#_
#_**Parameters:**
#_  f:       file filter object
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_OPENFILTERSMENU
#_
#_@@@
#_{ffctl_openfiltersmenu}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html#FFCTL_OPENFILTERSMENU
#_{filefiltercontrol}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html
#_
</article>
</node>
<node>
id=326
lv=2
dt=Text
nm=f:StartingToFilter
ctime=3480243319
mtime=3480252113
<article>
#_result = f:StartingToFilter ()
#_
#_**Parameters:**
#_  f:       file filter object
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_STARTINGTOFILTER
#_
#_@@@
#_{ffctl_startingtofilter}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html#FFCTL_STARTINGTOFILTER
#_{filefiltercontrol}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html
#_
</article>
</node>
<node>
id=327
lv=2
dt=Text
nm=f:IsFileInFilter
ctime=3480243336
mtime=3602278939
<article>
#_result = f:IsFileInFilter (fileData)
#_
#_**Parameters:**
#_  f:        file filter object
#_  fileData: table `tPluginPanelItem`
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  FileFilterControl, FFCTL_ISFILEINFILTER
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
#_{ffctl_isfileinfilter}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html#FFCTL_ISFILEINFILTER
#_{filefiltercontrol}: http://api.farmanager.com/ru/service_functions/filefiltercontrol.html
#_
</article>
</node>
<node>
id=467
lv=1
dt=Text
nm=Macro Control
ctime=3536863443
mtime=3536863443
<article>
</article>
</node>
<node>
id=446
lv=2
dt=Text
nm=far.MacroAdd
ctime=3523354795
mtime=3717057110
<article>
#_Id = far.MacroAdd (Area, Flags, AKey, SequenceText, Description, Callback, Priority)
#_
#_**Parameters:**
#_  Area:         flags (defaults to MACROAREA_COMMON)
#_  Flags:        flags (defaults to 0)
#_  AKey:         table `tInputRecord`, or string (e.g. "CtrlShiftF12")
#_  SequenceText: string
#_  Description:  string (defaults to "")
#_  Callback:     function, or nil
#_  Priority:     integer (defaults to 50)
#_
#_**Returns:**
#_  Id:           userdata (success), or nil (failure)
#_                  used in Callback and `far.MacroDelete`
#_
#_**Far API used:**
#_  MacroControl(MCTL_ADDMACRO)
#_
#_**Example:**
#_  local F = far.Flags
#_
#_  local function Callback (Id, Flags)
#_    return some_condition and another_condition
#_  end
#_
#_  local Id = far.MacroAdd(
#_    F.MACROAREA_SHELL,
#_    0,
#_    "CtrlShiftF12",
#_    'msgbox("test","test")',
#_    "cool macro",
#_    Callback)
#_
#_@@@
#_[far.MacroDelete]: 447.html
#_[tInputRecord]: 187.html
#_
#_{macroarea_common}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MACROAREA_COMMON
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_addmacro}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_ADDMACRO
#_{msgbox}: http://api.farmanager.com/ru/macro/macrocmd/prop_func/general.html#msgbox
#_
</article>
</node>
<node>
id=415
lv=2
dt=Text
nm=far.MacroCheck
ctime=3507633625
mtime=3602278612
<article>
#_result = far.MacroCheck (SequenceText, Flags)
#_
#_**Parameters:**
#_  SequenceText: string
#_  Flags:        flags (defaults to 0)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  MacroControl(MCTL_SENDSTRING, MSSC_CHECK)
#_
#_@@@
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_sendstring}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_SENDSTRING
#_{mssc_check}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MSSC_CHECK
#_
</article>
</node>
<node>
id=447
lv=2
dt=Text
nm=far.MacroDelete
ctime=3523354806
mtime=3612862428
<article>
#_result = far.MacroDelete (Id)
#_
#_**Parameters:**
#_  Id:      userdata (value returned by `far.MacroAdd`)
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  MacroControl(MCTL_DELMACRO)
#_
#_@@@
#_[far.MacroAdd]: 446.html
#_
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_delmacro}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_DELMACRO
#_
</article>
</node>
<node>
id=488
lv=2
dt=Text
nm=far.MacroExecute
ctime=3580326848
mtime=3606887981
<article>
#_result = far.MacroExecute (SequenceText, Flags, ...)
#_
#_**Parameters:**
#_  SequenceText: string
#_  Flags:        flags (optional)
#_  ...:          arguments for passing to script (optional)
#_
#_**Returns:**
#_  result: table (array of elements returned by the script), or nil
#_
#_**Description:**
#_  Execute a script in the context of LuaMacro plugin.
#_
#_**Notes:**
#_  1. Arguments being passed to the script may be of the following Lua types:
#_     string, boolean, number, nil, "int64", or "binary".
#_
#_  2. The returned table contains field "n" - number of elements in the array.
#_     Use it instead of #result, since there can be elements with nil value.
#_
#_     To properly unpack the table, do:
#_         unpack(result, 1, result.n)
#_
#_**Definitions:**
#_  **"int64"**
#_    Type of userdata, produced by `bit64` library.
#_  **"binary"**
#_    By convention, it is a string enclosed in a table as its first element.
#_    The string is intended to be passed to and from without conversions UTF-8 <-> UTF-16LE.
#_
#_**Far API used:**
#_  MacroControl(MCTL_EXECSTRING)
#_
#_@@@
#_[bit64]: 405.html
#_
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_execstring}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_EXECSTRING
#_
</article>
</node>
<node>
id=413
lv=2
dt=Text
nm=far.MacroGetArea
ctime=3507633603
mtime=3523362800
<article>
#_result = far.MacroGetArea ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  MacroControl(MCTL_GETAREA)
#_
#_@@@
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_getarea}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_GETAREA
#_
</article>
</node>
<node>
id=460
lv=2
dt=Text
nm=far.MacroGetLastError
ctime=3535655414
mtime=3535655604
<article>
#_result = far.MacroGetLastError()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result:  table
#_             ErrCode:  integer
#_             ErrPosX:  integer
#_             ErrPosY:  integer
#_             ErrSrc:   string
#_
#_**Far API used:**
#_  MacroControl(MCTL_GETLASTERROR)
#_
#_@@@
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_getlasterror}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_GETLASTERROR
#_
</article>
</node>
<node>
id=412
lv=2
dt=Text
nm=far.MacroGetState
ctime=3507633589
mtime=3523362887
<article>
#_result = far.MacroGetState ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  MacroControl(MCTL_GETSTATE)
#_
#_@@@
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_getstate}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_GETSTATE
#_
</article>
</node>
<node>
id=410
lv=2
dt=Text
nm=far.MacroLoadAll
ctime=3507631227
mtime=3618328565
<article>
#_result = far.MacroLoadAll ([path [,flags]])
#_
#_**Parameters:**
#_  path:   string, or nil
#_  flags:  flags
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  MacroControl(MCTL_LOADALL)
#_
#_@@@
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_loadall}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_LOADALL
#_
</article>
</node>
<node>
id=414
lv=2
dt=Text
nm=far.MacroPost
ctime=3507633616
mtime=3602447685
<article>
#_result = far.MacroPost (SequenceText, Flags, AKey)
#_
#_**Parameters:**
#_  SequenceText: string
#_  Flags:        flags (defaults to 0)
#_  AKey:         table `tInputRecord`, or string (e.g. "CtrlShiftF12"); optional
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  MacroControl(MCTL_SENDSTRING, MSSC_POST)
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_sendstring}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_SENDSTRING
#_{mssc_post}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MSSC_POST
#_
</article>
</node>
<node>
id=411
lv=2
dt=Text
nm=far.MacroSaveAll
ctime=3507633579
mtime=3523362847
<article>
#_result = far.MacroSaveAll ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  MacroControl(MCTL_SAVEALL)
#_
#_@@@
#_{macrocontrol}: http://api.farmanager.com/ru/service_functions/macrocontrol.html
#_{mctl_saveall}: http://api.farmanager.com/ru/service_functions/macrocontrol.html#MCTL_SAVEALL
#_
</article>
</node>
<node>
id=466
lv=1
dt=Text
nm=Plugins Control
ctime=3536863387
mtime=3536863387
<article>
</article>
</node>
<node>
id=468
lv=2
dt=Text
nm=far.FindPlugin
ctime=3536863835
mtime=3536864018
<article>
#_plugin_handle = far.FindPlugin (Param1, Param2)
#_
#_**Parameters:**
#_  Param1:  flags
#_  Param2:  string (either ModuleName or GUID, depending on Param1)
#_
#_**Returns:**
#_  plugin_handle:  userdata, or nil
#_
#_**Far API used:**
#_  PluginsControl
#_
#_@@@
#_{pluginscontrol}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html
#_
</article>
</node>
<node>
id=465
lv=2
dt=Text
nm=far.ForcedLoadPlugin
ctime=3536781579
mtime=3536863890
<article>
#_plugin_handle = far.ForcedLoadPlugin (Param1, Param2)
#_
#_**Parameters:**
#_  Param1:  flags
#_  Param2:  string
#_
#_**Returns:**
#_  plugin_handle:  userdata, or nil
#_
#_**Far API used:**
#_  PluginsControl
#_
#_@@@
#_{pluginscontrol}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html
#_
</article>
</node>
<node>
id=470
lv=2
dt=Text
nm=far.GetPluginInformation
ctime=3536863851
mtime=3602278794
<article>
#_Info = far.GetPluginInformation (Handle)
#_
#_**Parameters:**
#_  Handle:  userdata
#_
#_**Returns:**
#_  Info:    table, or nil
#_    ModuleName: string
#_    Flags:      flags
#_    PInfo:      table
#_      Flags:         flags
#_      DiskMenu:      table `tPluginMenuItem`
#_      PluginMenu:    table `tPluginMenuItem`
#_      PluginConfig:  table `tPluginMenuItem`
#_      CommandPrefix: string, or nil
#_    GInfo:      table
#_      MinFarVersion: table (array of 5 integers)
#_      Version:       table (array of 5 integers)
#_      Guid:          string (binary GUID)
#_      Title:         string
#_      Description:   string
#_      Author:        string
#_
#_**Far API used:**
#_  PluginsControl
#_
#_@@@
#_[tPluginMenuItem]: 471.html
#_
#_{pluginscontrol}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html
#_
</article>
</node>
<node>
id=469
lv=2
dt=Text
nm=far.GetPlugins
ctime=3536863842
mtime=3560954741
<article>
#_plugin_handles = far.GetPlugins ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  plugin_handles: table (array of plugin handles)
#_
#_**Far API used:**
#_  PluginsControl
#_
#_@@@
#_{pluginscontrol}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html
#_
</article>
</node>
<node>
id=491
lv=2
dt=Text
nm=far.IsPluginLoaded
ctime=3588795929
mtime=3588834989
<article>
#_result = far.IsPluginLoaded (Guid)
#_
#_**Parameters:**
#_  Guid:    string (either binary or text-form plugin's GUID)
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Description:**
#_  Returns *true* if the plugin is loaded in memory.
#_
#_**Far API used:**
#_  PluginsControl: PCTL_FINDPLUGIN, PCTL_GETPLUGININFORMATION
#_
#_@@@
#_{pctl_findplugin}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html#PCTL_FINDPLUGIN
#_{pctl_getplugininformation}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html#PCTL_GETPLUGININFORMATION
#_{pluginscontrol}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html
#_
</article>
</node>
<node>
id=463
lv=2
dt=Text
nm=far.LoadPlugin
ctime=3536781563
mtime=3536863897
<article>
#_plugin_handle = far.LoadPlugin (Param1, Param2)
#_
#_**Parameters:**
#_  Param1:  flags
#_  Param2:  string
#_
#_**Returns:**
#_  plugin_handle:  userdata, or nil
#_
#_**Far API used:**
#_  PluginsControl
#_
#_@@@
#_{pluginscontrol}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html
#_
</article>
</node>
<node>
id=464
lv=2
dt=Text
nm=far.UnloadPlugin
ctime=3536781571
mtime=3536863902
<article>
#_result = far.UnloadPlugin (Handle)
#_
#_**Parameters:**
#_  Handle:  userdata
#_
#_**Returns:**
#_  result:  boolean
#_
#_**Far API used:**
#_  PluginsControl
#_
#_@@@
#_{pluginscontrol}: http://api.farmanager.com/ru/service_functions/pluginscontrol.html
#_
</article>
</node>
<node>
id=403
lv=1
dt=Text
nm=Settings Control
ctime=3507042743
mtime=3513280592
<article>
#_<markdown>
#_**Far Settings Control** contains one function [`far.CreateSettings`](416.html). When called, this function returns an object (userdata) that has a few methods:
#_
#_* [`CreateSubkey`](422.html)
#_* [`Delete`](417.html)
#_* [`Enum`](418.html)
#_* [`Free`](419.html)
#_* [`Get`](420.html)
#_* [`OpenSubkey`](442.html)
#_* [`Set`](421.html)
#_
</article>
</node>
<node>
id=416
lv=2
dt=Text
nm=far.CreateSettings
ctime=3507637218
mtime=3536037740
<article>
#_obj = far.CreateSettings (Guid, Location)
#_
#_**Parameters:**
#_  Guid:     string (optional; defaults to calling plugin's ID)
#_  Location: flags (optional; defaults to PSL_ROAMING)
#_
#_**Returns:**
#_  obj:   userdata
#_
#_**Note:**
#_  For creating an object for accessing Far settings, pass Guid == "far".
#_
#_**Far API used:**
#_  SettingsControl
#_
#_@@@
#_{psl_roaming}: http://api.farmanager.com/ru/service_functions/settingscontrol.html#PSL_ROAMING
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=443
lv=2
dt=Text
nm=far.FreeSettings
ctime=3513437113
mtime=3750618583
<article>
#_far.FreeSettings ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  nothing
#_
#_**Description:**
#_  Frees all settings handles that might be open by previous calls
#_  to `far.CreateSettings` and not freed.
#_
#_**Far API used:**
#_  SettingsControl
#_
#_**WARNING:**
#_ For debug purposes only!
#_ Normally you should use method `Free` to free each settings handle individually.
#_
#_@@@
#_[far.CreateSettings]: 416.html
#_[Free]: 419.html
#_
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=422
lv=2
dt=Text
nm=obj:CreateSubkey
ctime=3507637684
mtime=3754138477
<article>
#_subkey = obj:CreateSubkey (Root, Name [, Description])
#_
#_**Parameters:**
#_  Root:        flag
#_  Name:        string
#_  Description: string, or nil
#_
#_**Returns:**
#_  subkey:      integer, or nil
#_
#_**Notes:**
#_  1. If the specified subkey does not exist, it is created.
#_  2. If *Description* is nil, the description of the subkey
#_     is neither created nor modified.
#_
#_**Far API used:**
#_  SettingsControl
#_
#_@@@
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=417
lv=2
dt=Text
nm=obj:Delete
ctime=3507637642
mtime=3754138488
<article>
#_result = obj:Delete (Root, Name)
#_
#_**Parameters:**
#_  Root:   flag
#_  Name:   string, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Note:**
#_  When *Name* is nil, *Root* is deleted.
#_
#_**Far API used:**
#_  SettingsControl
#_
#_@@@
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=418
lv=2
dt=Text
nm=obj:Enum
ctime=3507637655
mtime=3754138496
<article>
#_items = obj:Enum (Root[, from[, to]])
#_
#_**Parameters:**
#_  Root:   flag
#_  from:   integer; 1-based; negative values count from the end; default=1;
#_  to:     integer; 1-based; negative values count from the end; default=-1;
#_
#_**Returns:**
#_  items: table (array of tables), or nil
#_    items.Count: total number of items
#_    #items:      returned number of items
#_    Each table in the array has the following fields:
#_      if *obj* was created with plugin's GUID:
#_        Name:     string
#_        Type:     integer
#_      if *obj* was created with Far's GUID:
#_        Name:     string
#_        Param:    string
#_        PluginId: string (GUID)
#_        File:     string
#_        Time:     number (number of time ticks elapsed since January 1, 1601)
#_        Lock:     boolean
#_
#_**Far API used:**
#_  SettingsControl
#_
#_@@@
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=419
lv=2
dt=Text
nm=obj:Free
ctime=3507637668
mtime=3513280678
<article>
#_obj:Free ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  nothing
#_
#_**Note:**
#_If Free() is never called, an object will eventually be freed
#_by the garbage collector. Still, it is recommended to call Free()
#_when the object is no more needed.
#_
#_**Far API used:**
#_  SettingsControl
#_
#_@@@
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=420
lv=2
dt=Text
nm=obj:Get
ctime=3507637674
mtime=3754138504
<article>
#_result = obj:Get (Root, Name, Type)
#_
#_**Parameters:**
#_  Root:   flag
#_  Name:   string
#_  Type:   flags
#_
#_**Returns:**
#_  result: flags,   for Type == FST_QWORD
#_          string,  for Type == FST_STRING (in UTF-8 encoding)
#_          string,  for Type == FST_DATA
#_          nil (SettingsControl failed, or Type is unknown)
#_
#_**Far API used:**
#_  SettingsControl
#_
#_@@@
#_{fst_data}: http://api.farmanager.com/ru/structures/farsettingsname.html#FST_DATA
#_{fst_qword}: http://api.farmanager.com/ru/structures/farsettingsname.html#FST_QWORD
#_{fst_string}: http://api.farmanager.com/ru/structures/farsettingsname.html#FST_STRING
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=442
lv=2
dt=Text
nm=obj:OpenSubkey
ctime=3513150721
mtime=3754138512
<article>
#_subkey = obj:OpenSubkey (Root, Name)
#_
#_**Parameters:**
#_  Root:        flag
#_  Name:        string
#_
#_**Returns:**
#_  subkey:      integer, or nil
#_
#_**Note:**
#_  If the specified subkey does not exist, nil is returned.
#_
#_**Far API used:**
#_  SettingsControl
#_
#_@@@
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=421
lv=2
dt=Text
nm=obj:Set
ctime=3507637679
mtime=3754138519
<article>
#_result = obj:Set (Root, Name, Type, Data)
#_
#_**Parameters:**
#_  Root:   flag
#_  Name:   string, or nil
#_  Type:   flags
#_  Data:   flags,   for Type == FST_QWORD
#_          string,  for Type == FST_STRING (in UTF-8 encoding)
#_          string,  for Type == FST_DATA
#_
#_**Returns:**
#_  result: boolean
#_
#_**Note:**
#_  To set description for a key, pass *Name* as nil and *Type* as FST_STRING.
#_
#_**Far API used:**
#_  SettingsControl
#_
#_@@@
#_{fst_data}: http://api.farmanager.com/ru/structures/farsettingsname.html#FST_DATA
#_{fst_qword}: http://api.farmanager.com/ru/structures/farsettingsname.html#FST_QWORD
#_{fst_string}: http://api.farmanager.com/ru/structures/farsettingsname.html#FST_STRING
#_{settingscontrol}: http://api.farmanager.com/ru/service_functions/settingscontrol.html
#_
</article>
</node>
<node>
id=82
lv=1
dt=Text
nm=Far Standard Functions
<article>
</article>
</node>
<node>
id=284
lv=2
dt=Text
nm=far.ConvertPath
ctime=3476911603
mtime=3602447883
<article>
#_Dest = far.ConvertPath (Src [, Mode])
#_
#_**Parameters:**
#_  Src:  string
#_  Mode: flags, or nil (default="CPM_FULL")
#_
#_**Returns:**
#_  Dest: string
#_
#_**Far API used:**
#_  ConvertPath
#_
#_@@@
#_{convertpath}: http://api.farmanager.com/ru/fsf/convertpath.html
#_
</article>
</node>
<node>
id=3
lv=2
dt=Text
nm=far.CopyToClipboard
mtime=3602447964
<article>
#_result = far.CopyToClipboard (str [,type])
#_
#_**Parameters:**
#_  str:    string, or nil
#_  type:   flag (defaults to FCT_STREAM)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Note:**
#_  To clear the clipboard, pass *str* as nil
#_
#_**Far API used:**
#_  CopyToClipboard
#_
#_@@@
#_{copytoclipboard}: http://api.farmanager.com/ru/fsf/copytoclipboard.html
#_{fct_stream}: http://api.farmanager.com/ru/fsf/pastefromclipboard.html#FCT_STREAM
#_
</article>
</node>
<node>
id=509
lv=2
dt=Text
nm=far.FarClock
ctime=3632083312
mtime=3735474225
<article>
#_result = far.FarClock ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result:  number
#_
#_**Far API used:**
#_  FarClock
#_
#_@@@
#_{farclock}: http://api.farmanager.com/ru/fsf/farclock.html
#_
</article>
</node>
<node>
id=472
lv=2
dt=Text
nm=far.FormatFileSize
ctime=3536871985
mtime=3602447969
<article>
#_result = far.FormatFileSize (Size, Width, Flags [, MinSizeIndex])
#_
#_**Parameters:**
#_  Size:         number
#_  Width:        integer
#_  Flags:        flags
#_  MinSizeIndex: integer (only takes effect when *Flags* contain FFFS_MINSIZEINDEX)
#_
#_**Returns:**
#_  result:       string
#_
#_**Far API used:**
#_  FormatFileSize
#_
#_@@@
#_{fffs_minsizeindex}: http://api.farmanager.com/ru/fsf/formatfilesize.html#FFFS_MINSIZEINDEX
#_{formatfilesize}: http://api.farmanager.com/ru/fsf/formatfilesize.html
#_
</article>
</node>
<node>
id=262
lv=2
dt=Text
nm=far.GetCurrentDirectory
mtime=3602447974
<article>
#_CurDir = far.GetCurrentDirectory ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  CurDir: string
#_
#_**Far API used:**
#_  GetCurrentDirectory
#_
#_@@@
#_{getcurrentdirectory}: http://api.farmanager.com/ru/fsf/getcurrentdirectory.html
#_
</article>
</node>
<node>
id=56
lv=2
dt=Text
nm=far.GetFileOwner
mtime=3602447980
<article>
#_result = far.GetFileOwner (Computer, Name)
#_
#_**Parameters:**
#_  Computer: string, or nil
#_  Name:     string
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Far API used:**
#_  GetFileOwner
#_
#_@@@
#_{getfileowner}: http://api.farmanager.com/ru/fsf/getfileowner.html
#_
</article>
</node>
<node>
id=59
lv=2
dt=Text
nm=far.GetNumberOfLinks
mtime=3602447986
<article>
#_result = far.GetNumberOfLinks (Name)
#_
#_**Parameters:**
#_  Name: string
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  GetNumberOfLinks
#_
#_@@@
#_{getnumberoflinks}: http://api.farmanager.com/ru/fsf/getnumberoflinks.html
#_
</article>
</node>
<node>
id=199
lv=2
dt=Text
nm=far.GetPathRoot
mtime=3602447990
<article>
#_Root = far.GetPathRoot (Path)
#_
#_**Parameters:**
#_  Path:  string
#_
#_**Returns:**
#_  Root: string
#_
#_**Far API used:**
#_  GetPathRoot
#_
#_@@@
#_{getpathroot}: http://api.farmanager.com/ru/fsf/getpathroot.html
#_
</article>
</node>
<node>
id=200
lv=2
dt=Text
nm=far.GetReparsePointInfo
mtime=3602447995
<article>
#_Dest = far.GetReparsePointInfo (Src)
#_
#_**Parameters:**
#_  Src:  string
#_
#_**Returns:**
#_  Dest: string, or nil
#_
#_**Far API used:**
#_  GetReparsePointInfo
#_
#_@@@
#_{getreparsepointinfo}: http://api.farmanager.com/ru/fsf/getreparsepointinfo.html
#_
</article>
</node>
<node>
id=186
lv=2
dt=Text
nm=far.InputRecordToName
mtime=3633525408
<article>
#_KeyComb = far.InputRecordToName (Input)
#_Ctrl,Alt,Shift,Key = far.InputRecordToName (Input, true)
#_
#_**Parameters:**
#_  Input:    table `tInputRecord`
#_            (Field *EventType* is mandatory, other fields
#_            are optional. If some field is missing, the default
#_            value of 0/false is used, except for *RepeatCount*
#_            that defaults to 1).
#_
#_**Returns:**
#_  KeyComb:  string
#_
#_  Ctrl:     "Ctrl", "RCtrl", or *false*
#_  Alt:      "Alt", "RAlt", or *false*
#_  Shift:    "Shift", or *false*
#_  Key:      key without key-modifiers, or *false*
#_
#_  In the case of failure *nil* is returned.
#_
#_**Far API used:**
#_  FarInputRecordToName
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{farinputrecordtoname}: http://api.farmanager.com/ru/fsf/farinputrecordtoname.html
#_
</article>
</node>
<node>
id=201
lv=2
dt=Text
nm=far.LIsAlpha
mtime=3602448007
<article>
#_result = far.LIsAlpha (str)
#_
#_**Parameters:**
#_  str:  string (only its first character is tested)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  LIsAlpha
#_
#_@@@
#_{lisalpha}: http://api.farmanager.com/ru/fsf/lisalpha.html
#_
</article>
</node>
<node>
id=202
lv=2
dt=Text
nm=far.LIsAlphanum
mtime=3602448012
<article>
#_result = far.LIsAlphanum (str)
#_
#_**Parameters:**
#_  str:  string (only its first character is tested)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  LIsAlphanum
#_
#_@@@
#_{lisalphanum}: http://api.farmanager.com/ru/fsf/lisalphanum.html
#_
</article>
</node>
<node>
id=203
lv=2
dt=Text
nm=far.LIsLower
mtime=3602448015
<article>
#_result = far.LIsLower (str)
#_
#_**Parameters:**
#_  str:  string (only its first character is tested)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  LIsLower
#_
#_@@@
#_{lislower}: http://api.farmanager.com/ru/fsf/lislower.html
#_
</article>
</node>
<node>
id=204
lv=2
dt=Text
nm=far.LIsUpper
mtime=3602448019
<article>
#_result = far.LIsUpper (str)
#_
#_**Parameters:**
#_  str:  string (only its first character is tested)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  LIsUpper
#_
#_@@@
#_{lisupper}: http://api.farmanager.com/ru/fsf/lisupper.html
#_
</article>
</node>
<node>
id=205
lv=2
dt=Text
nm=far.LLowerBuf
mtime=3602448024
<article>
#_result = far.LLowerBuf (str)
#_
#_**Parameters:**
#_  str:    string
#_
#_**Returns:**
#_  result: string
#_
#_**Far API used:**
#_  LLowerBuf
#_
#_@@@
#_{llowerbuf}: http://api.farmanager.com/ru/fsf/llowerbuf.html
#_
</article>
</node>
<node>
id=188
lv=2
dt=Text
nm=far.LStricmp
mtime=3602448028
<article>
#_result = far.LStricmp (str1, str2)
#_
#_**Parameters:**
#_  str1: string
#_  str2: string
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  LStricmp
#_
#_@@@
#_{lstricmp}: http://api.farmanager.com/ru/fsf/lstricmp.html
#_
</article>
</node>
<node>
id=189
lv=2
dt=Text
nm=far.LStrnicmp
mtime=3602448032
<article>
#_result = far.LStrnicmp (str1, str2, num)
#_
#_**Parameters:**
#_  str1: string
#_  str2: string
#_  num : integer
#_
#_**Returns:**
#_  result: integer
#_
#_**Far API used:**
#_  LStrnicmp
#_
#_@@@
#_{lstrnicmp}: http://api.farmanager.com/ru/fsf/lstrnicmp.html
#_
</article>
</node>
<node>
id=206
lv=2
dt=Text
nm=far.LUpperBuf
mtime=3602448036
<article>
#_result = far.LUpperBuf (str)
#_
#_**Parameters:**
#_  str:    string
#_
#_**Returns:**
#_  result: string
#_
#_**Far API used:**
#_  LUpperBuf
#_
#_@@@
#_{lupperbuf}: http://api.farmanager.com/ru/fsf/lupperbuf.html
#_
</article>
</node>
<node>
id=208
lv=2
dt=Text
nm=far.MkLink
mtime=3602448040
<article>
#_result = far.MkLink (Src, Dest, Type, Flags)
#_
#_**Parameters:**
#_  Src:    string
#_  Dest:   string
#_  Type:   flags
#_  Flags:  flags
#_
#_**Returns:**
#_  result: boolean
#_
#_**Far API used:**
#_  MkLink
#_
#_@@@
#_{mklink}: http://api.farmanager.com/ru/fsf/mklink.html
#_
</article>
</node>
<node>
id=207
lv=2
dt=Text
nm=far.MkTemp
mtime=3602448044
<article>
#_result = far.MkTemp ([prefix])
#_
#_**Parameters:**
#_  prefix: string, or nil
#_
#_**Returns:**
#_  result: string
#_
#_**Far API used:**
#_  MkTemp
#_
#_@@@
#_{mktemp}: http://api.farmanager.com/ru/fsf/mktemp.html
#_
</article>
</node>
<node>
id=426
lv=2
dt=Text
nm=far.NameToInputRecord
ctime=3508525223
mtime=3602448047
<article>
#_Record = far.NameToInputRecord (Name)
#_
#_**Parameters:**
#_  Name:   string
#_
#_**Returns:**
#_  Record: table `tInputRecord`, or nil
#_er
#_
#_**Far API used:**
#_  FarNameToInputRecord
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{farnametoinputrecord}: http://api.farmanager.com/ru/fsf/farnametoinputrecord.html
#_
</article>
</node>
<node>
id=67
lv=2
dt=Text
nm=far.PasteFromClipboard
mtime=3602448051
<article>
#_result = far.PasteFromClipboard ([type])
#_
#_**Parameters:**
#_  type:   flag (defaults to FCT_ANY)
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Far API used:**
#_  PasteFromClipboard
#_
#_@@@
#_{fct_any}: http://api.farmanager.com/ru/fsf/pastefromclipboard.html#FCT_ANY
#_{pastefromclipboard}: http://api.farmanager.com/ru/fsf/pastefromclipboard.html
#_
</article>
</node>
<node>
id=190
lv=2
dt=Text
nm=far.ProcessName
mtime=3602448056
<article>
#_Result = far.ProcessName (Op, Mask, Name, Flags, Size)
#_
#_**Parameters:**
#_  Op:    flag (either of PN_CMPNAME, PN_CMPNAMELIST, PN_GENERATENAME, PN_CHECKMASK)
#_  Mask:  string
#_  Name:  string (ignored when Op==PN_CHECKMASK)
#_  Flags: flags (any combination of PN_SKIPPATH, PN_SHOWERRORMESSAGE; default=0)
#_  Size:  integer 0...0xFFFF (only used when Op==PN_GENERATENAME; default=0)
#_
#_**Returns:**
#_  Result: boolean, or string.
#_          String is returned on success if Op==PN_GENERATENAME
#_
#_**Far API used:**
#_  ProcessName
#_
#_@@@
#_{pn_checkmask}: http://api.farmanager.com/ru/fsf/processname.html#PN_CHECKMASK
#_{pn_cmpnamelist}: http://api.farmanager.com/ru/fsf/processname.html#PN_CMPNAMELIST
#_{pn_cmpname}: http://api.farmanager.com/ru/fsf/processname.html#PN_CMPNAME
#_{pn_generatename}: http://api.farmanager.com/ru/fsf/processname.html#PN_GENERATENAME
#_{pn_showerrormessage}: http://api.farmanager.com/ru/fsf/processname.html#PN_SHOWERRORMESSAGE
#_{pn_skippath}: http://api.farmanager.com/ru/fsf/processname.html#PN_SKIPPATH
#_{processname}: http://api.farmanager.com/ru/fsf/processname.html
#_
</article>
</node>
<node>
id=211
lv=2
dt=Text
nm=far.RecursiveSearch
mtime=3783699265
<article>
#_far.RecursiveSearch (InitDir, Mask, UserFunc [, Flags [, ...]])
#_
#_**Parameters:**
#_  InitDir:  string
#_  Mask:     string (can include attributes - see note below)
#_  UserFunc: function
#_  Flags:    flags
#_  ...:      additional arguments, any Lua values
#_
#_**Returns:**
#_  In case the search was stopped by *UserFunc*:  all values returned by *UserFunc*.
#_  In case no more files left:                  nothing.
#_  In case of error in *UserFunc*:                nothing.
#_
#_**Description:**
#_  On every file found, *UserFunc* is called with the following arguments passed to it:
#_      (1) a `tPluginPanelItem` table
#_      (2) the full pathname of the found file
#_      (3...) additional arguments (if any) that were passed to far.RecursiveSearch
#_
#_  If the 1-st return value of *UserFunc* is neither *false* nor *nil* then the search
#_  is stopped.
#_
#_**Note:**
#_  The 2-nd parameter (Mask) can include file attributes following the mask itself
#_  after a >> delimiter. The attribute characters are described in `this` article.
#_  - A small letter means the attribute must be present.
#_  - A large letter means the attribute must not be present.
#_  **Example:** `*`|`*`.txt>>rA
#_
#_**Far API used:**
#_  FarRecursiveSearch
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_[this]: 85.html
#_
#_{farrecursivesearch}: http://api.farmanager.com/ru/fsf/farrecursivesearch.html
#_
</article>
</node>
<node>
id=209
lv=2
dt=Text
nm=far.TruncPathStr
mtime=3602448065
<article>
#_result = far.TruncPathStr (Str, MaxLength)
#_
#_**Parameters:**
#_  Str:       string
#_  MaxLength: integer
#_
#_**Returns:**
#_  result:    string
#_
#_**Far API used:**
#_  TruncPathStr
#_
#_@@@
#_{truncpathstr}: http://api.farmanager.com/ru/fsf/truncpathstr.html
#_
</article>
</node>
<node>
id=210
lv=2
dt=Text
nm=far.TruncStr
mtime=3602448069
<article>
#_result = far.TruncStr (Str, MaxLength)
#_
#_**Parameters:**
#_  Str:       string
#_  MaxLength: integer
#_
#_**Returns:**
#_  result:    string
#_
#_**Far API used:**
#_  TruncStr
#_
#_@@@
#_{truncstr}: http://api.farmanager.com/ru/fsf/truncstr.html
#_
</article>
</node>
<node>
id=335
lv=2
dt=Text
nm=far.XLat
ctime=3480362672
mtime=3608020836
<article>
#_result = far.XLat (Line, StartPos, EndPos, Flags)
#_
#_**Parameters:**
#_  Line:     string
#_  StartPos: integer (optional, default=1)
#_  EndPos:   integer (optional, default=Line:len())
#_  Flags:    flags
#_
#_**Returns:**
#_  result:   string, or nil
#_
#_**Far API used:**
#_  XLat
#_
#_@@@
#_{xlat}: http://api.farmanager.com/ru/fsf/xlat.html
#_
</article>
</node>
<node>
id=273
lv=1
dt=Text
nm=Regular expression functions
<article>
</article>
</node>
<node>
id=528
lv=2
dt=Text
nm=regex.exec, regex.execW
ctime=3748474620
mtime=3748474986
<article>
#_from, to, offsets = regex.exec (s, pattern, [init], [cflags])
#_
#_**Parameters:**
#_  s       :  string
#_  pattern :  string
#_  init    :  integer (default=1; can be negative)
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  from    : integer
#_  to      : integer
#_  offsets : table - array of captures' offsets (there can be *false*
#_                    in place of captures not participated in the match)
#_
#_**Example:**
#_  If the whole match is at offsets 10,20 and substring matches are
#_  at offsets 12,14 and 16,19 then the function returns the following:
#_  10, 20, { 12,14,16,19 }.
#_
#_**Note:**
#_*regex.execW* receives its 1-st argument in UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
</article>
</node>
<node>
id=271
lv=2
dt=Text
nm=regex.find, regex.findW
mtime=3532684645
<article>
#_from, to [,c1 [,c2]...] = regex.find (s, pattern, [init], [cflags])
#_
#_**Parameters:**
#_  s       :  string
#_  pattern :  string
#_  init    :  integer (default=1; can be negative)
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  from    : integer
#_  to      : integer
#_  c1,...  : strings (there can be *false* in place of captures
#_                     not participated in the match)
#_
#_**Description:**
#_  The function is similar to *string.find*, but differs from it
#_  by the meaning of its optional 4-th parameter:
#_  -- *cflags* : compilation flags;
#_
#_**Note:**
#_*regex.findW* receives its 1-st argument and returns captures in
#_UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=269
lv=2
dt=Text
nm=regex.gmatch, regex.gmatchW
mtime=3532684657
<article>
#_for c1 [,c2 ...] in regex.gmatch (s, pattern [, cflags]) do
#_  ......
#_end
#_
#_**Parameters:**
#_  s       :  string
#_  pattern :  string
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  c1,...  :  strings (there can be *false* in place of captures
#_                     not participated in the match)
#_
#_**Description:**
#_  The function is API-compatible with *string.gmatch*, with the
#_  following extensions:
#_  -- *cflags* : optional 3-rd parameter: compilation flags;
#_
#_**Note:**
#_*regex.gmatchW* receives its 1-st argument and returns captures in
#_UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=270
lv=2
dt=Text
nm=regex.gsub, regex.gsubW
mtime=3549007487
<article>
#_res, nmatch, nrep = regex.gsub (s, pattern, repl, [n], [cflags])
#_
#_**Parameters:**
#_  s:        string
#_  pattern:  string
#_  repl:     string, or table, or function
#_  n:        integer
#_  cflags:   string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  res:      string
#_  nmatch:   integer
#_  nrep:     integer
#_
#_**Description:**
#_  The function is API-compatible with *string.gsub*, with the
#_  following extensions:
#_  -- *cflags* : optional 5-th parameter: compilation flags;
#_  -- *nrep*   : 3-rd return value: number of replacements made;
#_  -- *repl* can specify more captures than in *string.gsub*: %0-%9, %A-%Z (or %a-%z).
#_
#_**Note:**
#_*regex.gsubW* receives its 1-st argument and returns captures in
#_UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=272
lv=2
dt=Text
nm=regex.match, regex.matchW
mtime=3532684676
<article>
#_c1 [,c2]...] = regex.match (s, pattern, [init], [cflags])
#_
#_**Parameters:**
#_  s       :  string
#_  pattern :  string
#_  init    :  integer (default=1; can be negative)
#_  cflags  :  string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  c1,...  : strings (there can be *false* in place of captures
#_                     not participated in the match)
#_
#_**Description:**
#_  The function is API-compatible with *string.match*, with the
#_  following extensions:
#_  -- *cflags* : optional 4-th parameter: compilation flags;
#_
#_**Note:**
#_*regex.matchW* receives its 1-st argument and returns captures in
#_UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=266
lv=2
dt=Text
nm=regex.new
mtime=3532684281
<article>
#_regex_object = regex.new (pattern [, cflags])
#_
#_**Parameters:**
#_  pattern:      string
#_  cflags:       string (any combination of 'i','m','o','s' and 'x')
#_
#_**Returns:**
#_  regex_object: userdata
#_
#_**Description:**
#_  Compiles pattern into the internal form.
#_  Compilation flags can be specified in either of two ways:
#_    -- If the pattern is enclosed in '/' (forward slashes)
#_       then the flags can follow the trailing slash.
#_       In this case, the *cflags* parameter is ignored.
#_    -- Via the *cflags* parameter.
#_
#_**Object methods:**
#_  `bracketscount`, `find`, `gsub`, `match`
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_[gsub]: 386.html
#_[bracketscount]: 377.html
#_[find]: 267.html
#_[match]: 268.html
#_
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=377
lv=3
dt=Text
nm=method bracketscount
ctime=3489988958
mtime=3489990041
<article>
#_count = regex_object:bracketscount ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  count : integer
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=529
lv=3
dt=Text
nm=method exec, execW
ctime=3748475041
mtime=3748475255
<article>
#_from, to, offsets = regex_object:exec (subj [, init])
#_
#_**Parameters:**
#_  subj   :  string
#_  init   :  integer (default=1; can be negative)
#_
#_**Returns:**
#_  from    : integer
#_  to      : integer
#_  offsets : table - array of captures' offsets (there can be *false*
#_                    in place of captures not participated in the match)
#_
#_**Example:**
#_  If the whole match is at offsets 10,20 and substring matches are
#_  at offsets 12,14 and 16,19 then the method returns the following:
#_  10, 20, { 12,14,16,19 }.
#_
#_**Note:**
#_*regex_object:execW* receives its 1-st argument in UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
</article>
</node>
<node>
id=267
lv=3
dt=Text
nm=method find, findW
mtime=3524034062
<article>
#_from, to [,c1 [,c2]...] = regex_object:find (subj [, init])
#_
#_**Parameters:**
#_  subj   :  string
#_  init   :  integer (default=1; can be negative)
#_
#_**Returns:**
#_  from   : integer
#_  to     : integer
#_  c1,... : strings (there can be *false* in place of captures
#_                    not participated in the match)
#_
#_**Note:**
#_*regex_object:findW* receives its 1-st argument and returns captures
#_in UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=386
lv=3
dt=Text
nm=method gsub, gsubW
ctime=3497976622
mtime=3524034123
<article>
#_res, nmatch, nrep = regex_object:gsub (s, repl, [n])
#_
#_**Parameters:**
#_  s:        string
#_  repl:     string, or table, or function
#_  n:        integer
#_
#_**Returns:**
#_  res:      string
#_  nmatch:   integer
#_  nrep:     integer
#_
#_**Note:**
#_*regex_object:gsubW* receives its 1-st argument and returns captures
#_in UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=268
lv=3
dt=Text
nm=method match, matchW
mtime=3524034111
<article>
#_c1 [,c2 ...] = regex_object:match (subj [, init])
#_
#_**Parameters:**
#_  subj   :  string
#_  init   :  integer (default=1; can be negative)
#_
#_**Returns:**
#_  c1,... : strings (there can be *false* in place of captures
#_                    not participated in the match)
#_
#_**Note:**
#_*regex_object:matchW* receives its 1-st argument and returns captures
#_in UTF-16LE encoding.
#_
#_**Far API used:**
#_  RegExpControl
#_
#_@@@
#_{regexpcontrol}: http://api.farmanager.com/ru/service_functions/regexpcontrol.html
#_
</article>
</node>
<node>
id=552
lv=1
dt=Text
nm=far.Host
ctime=3808843787
mtime=3808848179
<article>
#_<markdown>
#_`far.Host` is a table containing functions for direct communication
#_with panel plugins. That means that internally these functions call
#_exported functions of plugins.
</article>
</node>
<node>
id=553
lv=2
dt=Text
nm=far.Host.FreeUserData
ctime=3808843886
mtime=3808845384
<article>
#_far.Host.FreeUserData (Handle, Items)
#_
#_**Parameters:**
#_  Handle:  userdata (panel handle)
#_  Items:   table (array of `tPluginPanelItem`)
#_
#_**Returns:**
#_  nothing
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
</article>
</node>
<node>
id=554
lv=2
dt=Text
nm=far.Host.GetFiles
ctime=3808843892
mtime=3808848450
<article>
#_result = far.Host.GetFiles (handle, Items, Move, DestPath [, OpMode])
#_
#_**Parameters:**
#_  handle:    panel handle
#_  Items:     table (array of `tPluginPanelItem`)
#_  Move:      boolean
#_  DestPath:  string
#_  OpMode:    flags (default = OPM_FIND|OPM_SILENT)
#_
#_**Returns:**
#_  result:    integer
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
</article>
</node>
<node>
id=555
lv=2
dt=Text
nm=far.Host.GetFindData
ctime=3808843910
mtime=3808846173
<article>
#_Items = far.Host.GetFindData (handle [, OpMode])
#_
#_**Parameters:**
#_  handle:  panel handle
#_  OpMode:  flags (default = OPM_FIND|OPM_SILENT)
#_
#_**Returns:**
#_  Items:   table (array of `tPluginPanelItem`), or nil
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
</article>
</node>
<node>
id=556
lv=2
dt=Text
nm=far.Host.PutFiles
ctime=3808843927
mtime=3808848467
<article>
#_result = far.Host.PutFiles (handle, Items, Move, SrcPath [, OpMode])
#_
#_**Parameters:**
#_  handle:    panel handle
#_  Items:     table (array of `tPluginPanelItem`)
#_  Move:      boolean
#_  SrcPath:   string
#_  OpMode:    flags (default = OPM_SILENT)
#_
#_**Returns:**
#_  result:    integer
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
</article>
</node>
<node>
id=557
lv=2
dt=Text
nm=far.Host.SetDirectory
ctime=3808843933
mtime=3808848103
<article>
#_result = far.Host.SetDirectory (handle, Dir [, OpMode])
#_
#_**Parameters:**
#_  handle:    panel handle
#_  Dir:       string
#_  OpMode:    flags (default = OPM_FIND|OPM_SILENT)
#_
#_**Returns:**
#_  result:    boolean
#_
#_@@@
#_
</article>
</node>
<node>
id=83
lv=1
dt=Text
nm=Other functions
<article>
</article>
</node>
<node>
id=185
lv=2
dt=Text
nm=far.CPluginStartupInfo
mtime=3526661259
<article>
#_Info = far.CPluginStartupInfo()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  Info: light userdata (a pointer to struct PluginStartupInfo)
#_
#_**Description:**
#_  The function is used to give access to Far functions to DLL's other
#_  than the plugin DLL.
#_
#_@@@
#_{pluginstartupinfo}: http://api.farmanager.com/ru/structures/pluginstartupinfo.html
#_
</article>
</node>
<node>
id=544
lv=2
dt=Text
nm=far.FileTimeResolution
ctime=3776673964
mtime=3789189767
<article>
#_result = far.FileTimeResolution ([operation])
#_
#_**Parameters:**
#_  operation: 0=query resolution; 1=set 1ms resolution; 2=set 100ns resolution;
#_             The default is 0.
#_
#_**Returns:**
#_  result: previous value of resolution (1 for 1ms resolution; 2 for 100ns resolution)
#_
#_**Description:**
#_  There are 2 file time resolutions in a LuaFAR plugin: 1ms and 100ns.
#_  At any given moment one of those resolutions is current.
#_  The current resolution affects functions that get or set file times:
#_    - all functions dealing with `tPluginPanelItem`
#_      (fields: LastWriteTime, LastAccessTime, CreationTime, ChangeTime)
#_    - `win.FileTimeToLocalFileTime`
#_    - `win.FileTimeToSystemTime`
#_    - `win.GetSystemTimeAsFileTime`
#_    - `win.SystemTimeToFileTime`
#_    - `obj:Enum` (field: Time) in settings control
#_
#_@@@
#_[tPluginPanelItem]:              85.html
#_[win.FileTimeToLocalFileTime]:  462.html
#_[win.FileTimeToSystemTime]:     215.html
#_[win.GetSystemTimeAsFileTime]:  217.html
#_[win.SystemTimeToFileTime]:     216.html
#_[obj:Enum]:                     418.html
#_
#_
</article>
</node>
<node>
id=549
lv=2
dt=Text
nm=far.GetLuafarVersion
ctime=3792338906
mtime=3792339365
<article>
#_strVersion = far.GetLuafarVersion()
#_  or
#_major,minor,revision,build = far.LuafarVersion(true)
#_
#_**Returns:**
#_  strVersion: string
#_    or
#_  major,minor,revision,build: numbers
#_
#_@@@
#_
</article>
</node>
<node>
id=280
lv=2
dt=Text
nm=far.MakeMenuItems
ctime=3476605549
mtime=3599756117
<article>
#_Items = far.MakeMenuItems (...)
#_
#_**Parameters:**
#_  Arbitrary number of arguments.
#_  Each argument may be of any Lua type.
#_
#_**Returns:**
#_  Items: table (array of tables)
#_           - each element is a table in the form
#_             { text=<string>, arg=<argument value> }
#_           - number of elements >= number of arguments, as one
#_             argument can have a multiple line representation.
#_
#_**Description:**
#_  This function returns representation of its arguments, suitable
#_  for passing to function `far.Menu` as its *Items* parameter.
#_
#_@@@
#_[far.Menu]: 64.html
#_
</article>
</node>
<node>
id=68
lv=2
dt=Text
nm=far.PluginStartupInfo
mtime=3602448401
<article>
#_Info = far.PluginStartupInfo ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  Info: table
#_    fields of Info:
#_      ModuleName:   string
#_      ModuleDir:    string (has a backslash at the end)
#_      PluginGuid:   string
#_
#_**Description:**
#_  Returns a table containing the data elements of the
#_  *PluginStartupInfo* struct that plugin obtains when FAR calls
#_  its function *SetStartupInfoW*.
#_
#_@@@
#_{pluginstartupinfo}: http://api.farmanager.com/ru/structures/pluginstartupinfo.html
#_{setstartupinfow}: http://api.farmanager.com/ru/exported_functions/setstartupinfow.html
#_
</article>
</node>
<node>
id=527
lv=2
dt=Text
nm=far.RunDefaultScript
ctime=3737550505
mtime=3737570204
<article>
#_Result = far.RunDefaultScript ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  Result: boolean (true = success)
#_
#_**Description:**
#_  Runs the default script of the plugin.
#_  This usually means that all plugin's code is **immediately** reloaded.
#_  This is different from setting *far.ReloadDefaultScript = true* which causes
#_  a deferred reload (that occurs when `export.Open` is called the next time).
#_
#_**See also:**
#_  `LF_RunDefaultScript`
#_  `far.ReloadDefaultScript`
#_  `RecreateLuaState`
#_
#_@@@
#_[LF_RunDefaultScript]: 130.html
#_[far.ReloadDefaultScript]: 173.html
#_[export.Open]: 109.html
#_[RecreateLuaState]: 495.html
#_
</article>
</node>
<node>
id=282
lv=2
dt=Text
nm=far.Show
ctime=3476617735
mtime=3599756101
<article>
#_Item, Position = far.Show (...)
#_
#_**Parameters:**
#_  Arbitrary number of arguments.
#_  Each argument may be of any Lua type.
#_
#_**Returns:**
#_  Item, Position - same as in `far.Menu`.
#_
#_**Description:**
#_  This function shows representation of its arguments in a menu
#_  window. It is handy for displaying multiple values at once, or
#_  long multi-line strings.
#_
#_  The function calls `far.MakeMenuItems` internally, then `far.Menu`.
#_
#_  Due to using `far.MakeMenuItems` the returned *Item* table contains
#_  the value of the corresponding original argument under the field 'arg'.
#_
#_@@@
#_[far.Menu]: 64.html
#_[far.MakeMenuItems]: 280.html
#_
</article>
</node>
<node>
id=346
lv=2
dt=Text
nm=far.Timer
ctime=3482124061
mtime=3756386205
<article>
#_timer = far.Timer (interval, handler [, ...])
#_
#_**Parameters:**
#_  interval : integer (milliseconds)
#_  handler  : function
#_  ...      : additional arguments (any Lua types)
#_
#_**Returns:**
#_  timer    : userdata (timer object), or nil
#_
#_**Description:**
#_  The function creates a periodic timer. Every time the next
#_  *interval* milliseconds are elapsed, the *handler* is called
#_  with the timer object as its first argument followed by all
#_  the additional arguments (if any) passed to far.Timer.
#_
#_  The returned "timer object" can be used to query or modify
#_  the timer parameters. The object has an API similar to Delphi
#_  classes: properties, methods, events.
#_
#_**Notes:**
#_  1. *handler* can be called only when the plugin returns control
#_     to Far. Thus the real interval between *handler* calls is not
#_     exact and can significantly differ from the specified value.
#_
#_  2. This function requires that the plugin DLL has
#_     *ProcessSynchroEventW* exported. (There is not such a requirement
#_     for `export.ProcessSynchroEvent` though, as it is not called by the
#_     Timer function and methods).
#_
#_**Far API used:**
#_  AdvControl (ACTL_SYNCHRO), ProcessSynchroEventW.
#_
#_**Windows API used:**
#_  CreateTimerQueueTimer, CreateTimerQueue, ChangeTimerQueueTimer, DeleteTimerQueueEx
#_
#_@@@
#_[export.ProcessSynchroEvent]: 319.html
#_
#_{actl_synchro}: http://api.farmanager.com/ru/service_functions/advcontrol.html#ACTL_SYNCHRO
#_{advcontrol}: http://api.farmanager.com/ru/service_functions/advcontrol.html
#_{processsynchroeventw}: http://api.farmanager.com/ru/exported_functions/processsynchroeventw.html
#_
</article>
</node>
<node>
id=352
lv=3
dt=Text
nm=Properties
ctime=3482328762
mtime=3482328762
<article>
</article>
</node>
<node>
id=354
lv=4
dt=Text
nm=Closed
ctime=3482328782
mtime=3482491340
<article>
#_result = timer.Closed
#_
#_This is a read-only boolean property.
#_
</article>
</node>
<node>
id=350
lv=4
dt=Text
nm=Enabled
ctime=3482328603
mtime=3482345154
<article>
#_value = timer.Enabled
#_    or
#_timer.Enabled = value
#_
#_**Description:**
#_  This property is about calling the handler function. The timer
#_  continues to run even when not enabled, but the handler is not
#_  called. The initial value of this property is *true*.
#_  This is a read/write boolean property.
#_
</article>
</node>
<node>
id=351
lv=4
dt=Text
nm=Interval
ctime=3482328655
mtime=3609334745
<article>
#_value = timer.Interval
#_    or
#_timer.Interval = value
#_
#_**Description:**
#_  Query or set the interval (in milliseconds) of the timer.
#_  This is a read/write integer property.
#_
#_  When the interval is set, the time already accumulated by the timer
#_  is discarded, and the new accumulation is started from 0.
#_
</article>
</node>
<node>
id=355
lv=3
dt=Text
nm=Methods
ctime=3482328881
mtime=3482328881
<article>
</article>
</node>
<node>
id=357
lv=4
dt=Text
nm=Close
ctime=3482328964
mtime=3482491377
<article>
#_timer:Close ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  nothing
#_
#_**Description:**
#_  Closes the timer.
#_
#_**Note:**
#_  A timer object is garbage-collected only when its lua_State closes,
#_  thus it is the application's responsibility to call the *Close*
#_  method when the timer is not needed anymore.
#_
</article>
</node>
<node>
id=356
lv=3
dt=Text
nm=Events
ctime=3482328885
mtime=3482328885
<article>
</article>
</node>
<node>
id=353
lv=4
dt=Text
nm=OnTimer
ctime=3482328777
mtime=3630782715
<article>
#_handler = timer.OnTimer
#_    or
#_timer.OnTimer = handler
#_
#_**Description:**
#_  Query or set the timer handler function.
#_  The handler function is called with the timer object as its first argument
#_  followed by all the additional arguments (if any) passed to `far.Timer`.
#_
#_@@@
#_[far.Timer]: 346.html
#_
</article>
</node>
<node>
id=439
lv=1
dt=Text
nm=Tables
ctime=3512119935
mtime=3512119935
<article>
</article>
</node>
<node>
id=437
lv=2
dt=Text
nm=far.Colors
ctime=3512119667
mtime=3601872729
<article>
#_far.Colors
#_
#_**Description:**
#_  A table containing values of all constants (32 bit integers)
#_  from *farcolor.hpp* indexed by their string names.
#_
#_**Example of use:**
#_  local FC = far.Colors
#_  far.AdvControl ("ACTL_SETARRAYCOLOR", nil,
#_      { Flags="FCLR_REDRAW", StartIndex=FC.COL_EDITORTEXT,
#_        0x4E, 0xE4
#_      })
#_
#_
</article>
</node>
<node>
id=57
lv=2
dt=Text
nm=far.Flags
mtime=3512058652
<article>
#_far.Flags
#_
#_**Description:**
#_  A table containing values of various FAR and Windows console
#_  constants keyed by their string names.
#_
#_  Keys of the table are always strings. Values are 64-bit integers
#_  represented either as numbers, or strings in the format acceptable
#_  by the `bit64 library`. Therefore, these values should be tested or
#_  manipulated only by functions of that library.
#_
#_@@@
#_[bit64 library]: 405.html
#_
</article>
</node>
<node>
id=514
lv=2
dt=Text
nm=far.Guids
ctime=3651736089
mtime=3651736631
<article>
#_far.Guids
#_
#_**Description:**
#_  A table containing GUIDs of various Far Manager dialogs and menus.
#_  This table is auto-generated from file *DlgGuid.hpp* at the build time.
#_
#_  GUIDs are given in upper-case text representation, e.g.
#_    FindFileId = '8C9EAD29-910F-4B24-A669-EDAFBA6ED964'
#_
#_@@@
#_
</article>
</node>
<node>
id=84
lv=1
dt=Text
nm="Structures"
<article>
</article>
</node>
<node>
id=461
lv=2
dt=Text
nm=tAnalyseInfo
ctime=3536040267
mtime=3602277550
<article>
#_<markdown>
#_**`tAnalyseInfo`** is a table with the following predefined fields:
#_
#_      FileName: string (UTF-8)
#_      Buffer:   string
#_      OpMode:   flags
#_      Handle:   any Lua type
#_
#_### Note:
#_In [`export.Analyse`](425.html) `Handle` is nil.<br>
#_In [`export.Open`](109.html) `Handle` is the value
#_returned by [`export.Analyse`](425.html).
</article>
</node>
<node>
id=314
lv=2
dt=Text
nm=tCoord
ctime=3477138634
mtime=3477138672
<article>
#_**The table has the following fields:**
#_
#_  X   :  integer
#_  Y   :  integer
#_
</article>
</node>
<node>
id=427
lv=2
dt=Text
nm=tFarColor
ctime=3508689565
mtime=3602277839
<article>
#_<markdown>
#_**`tFarColor`** is a table with the following predefined fields:
#_
#_      Flags:           flags
#_      ForegroundColor: integer
#_      BackgroundColor: integer
#_
#_
</article>
</node>
<node>
id=295
lv=2
dt=Text
nm=tFarDialogItem
ctime=3477054110
mtime=3602278320
<article>
#_<markdown>
#_**`tFarDialogItem`** is a table (array)
#_
#_Fields of a dialog item:
#_
#_      [1]  Type:             integer, or string
#_      [2]  X1:               integer
#_      [3]  Y1:               integer
#_      [4]  X2:               integer
#_      [5]  Y2:               integer
#_      [6]  Selected/ListItems: integer/table
#_             When table, its array part is a table per item:
#_               ListItems[i]:
#_                 Flags : flags
#_                 Text  : string
#_             Its hash part has a field:
#_               SelectIndex : integer
#_      [7]  History:          string
#_      [8]  Mask:             string
#_      [9]  Flags             flags
#_      [10] Data:             string
#_      [11] MaxLength:        integer
#_      [12] UserData:         integer
#_
#_
</article>
</node>
<node>
id=293
lv=2
dt=Text
nm=tFarDialogItemColors
ctime=3477043729
mtime=3602278327
<article>
#_<markdown>
#_**`tFarDialogItemColors`** is a table with the following predefined fields:
#_
#_      Flags:  flags
#_
#_The array part of the table keeps colors, represented by
#_[`tFarColor`](427.html) tables.
#_Color count can be obtained via the operator `#`.
#_
#_
</article>
</node>
<node>
id=445
lv=2
dt=Text
nm=tFarKey
ctime=3519480559
mtime=3602278411
<article>
#_<markdown>
#_**`tFarKey`** is a table with the following predefined fields:
#_
#_      VirtualKeyCode:     integer
#_      ControlKeyState:    integer
#_
#_
</article>
</node>
<node>
id=459
lv=2
dt=Text
nm=tFarPanelDirectory
ctime=3534535611
mtime=3602278445
<article>
#_<markdown>
#_**`tFarPanelDirectory`** is a table with the following predefined fields:
#_
#_      Name:     string
#_      Param:    string
#_      PluginId: string (GUID)
#_      File:     string
#_
#_
</article>
</node>
<node>
id=120
lv=2
dt=Text
nm=tInfoLine
mtime=3602278509
<article>
#_<markdown>
#_**`tInfoLine`** is a table with the following predefined fields:
#_
#_      Text:   string
#_      Data:   string
#_      Flags:  flags
#_
</article>
</node>
<node>
id=187
lv=2
dt=Text
nm=tInputRecord
mtime=3653036816
<article>
#_**The table has the following fields:**
#_
#_  EventType:         integer
#_
#_  *--if EventType is KEY_EVENT:*
#_  KeyDown:          boolean
#_  RepeatCount:      integer
#_  VirtualKeyCode:   integer
#_  VirtualScanCode:  integer
#_  UnicodeChar:      string
#_  ControlKeyState:  integer
#_
#_  *--if EventType is MOUSE_EVENT:*
#_  see `tMouseEventRecord`
#_
#_  *--if EventType is WINDOW_BUFFER_SIZE_EVENT:*
#_  SizeX             integer
#_  SizeY             integer
#_
#_  *--if EventType is MENU_EVENT:*
#_  CommandId         integer
#_
#_  *--if EventType is FOCUS_EVENT:*
#_  SetFocus          boolean
#_
#_@@@
#_[editor.ProcessInput]: 36.html
#_[tMouseEventRecord]: 313.html
#_[far.ProcessKey]: 114.html
#_[far.InputRecordToKey]: 186.html
#_[editor.ReadInput]: 38.html
#_
</article>
</node>
<node>
id=406
lv=2
dt=Text
nm=tKeyBarLabel
ctime=3507471475
mtime=3602278714
<article>
#_<markdown>
#_**`tKeyBarLabel`** is a table with the following predefined fields:
#_
#_      VirtualKeyCode:  integer
#_      ControlKeyState: flags
#_      Text:            string
#_      LongText:        string
#_
#_
</article>
</node>
<node>
id=313
lv=2
dt=Text
nm=tMouseEventRecord
ctime=3477138206
mtime=3532719874
<article>
#_**The table has the following fields:**
#_
#_  MousePositionX   :  integer
#_  MousePositionY   :  integer
#_  ButtonState      :  integer
#_  ControlKeyState  :  integer
#_  EventFlags       :  integer
#_
#_
</article>
</node>
<node>
id=121
lv=2
dt=Text
nm=tPanelMode
mtime=3602278770
<article>
#_<markdown>
#_**`tPanelMode`** is a table with the following predefined fields:
#_
#_      ColumnTypes:        string
#_      ColumnWidths:       string
#_      StatusColumnTypes:  string
#_      StatusColumnWidths: string
#_      ColumnTitles:       table (array of strings)
#_      Flags:              flags
#_
</article>
</node>
<node>
id=471
lv=2
dt=Text
nm=tPluginMenuItem
ctime=3536865687
mtime=3602278799
<article>
#_<markdown>
#_**`tPluginMenuItem`** is a table with the following predefined fields:
#_
#_      Count:    integer
#_      Guids:    array of strings (binary GUID's)
#_      Strings:  array of strings
#_
#_
</article>
</node>
<node>
id=85
lv=2
dt=Text
nm=tPluginPanelItem
mtime=3776679713
<article>
#_<markdown>
#_**`tPluginPanelItem`** is a table with the following predefined fields:
#_
#_      LastWriteTime:      number or bit64-userdata
#_      LastAccessTime:     number or bit64-userdata
#_      CreationTime:       number or bit64-userdata
#_      ChangeTime:         number or bit64-userdata
#_
#_      FileSize:           number
#_      AllocationSize:     number
#_
#_      FileName:           string
#_      AlternateFileName:  string
#_
#_      FileAttributes:     string
#_      Flags:              flags
#_      NumberOfLinks:      integer
#_      CRC32:              integer
#_      Description:        string, or nil
#_      Owner:              string, or nil
#_      CustomColumnData:   table, or nil
#_      UserData:           any type
#_
#_###Notes
#_
#_1. **`FileAttributes`** is a string of concatenated attribute
#_letters (see below). If a letter representing some attribute
#_is present in the string, that means the corresponding attribute
#_is set, otherwise it is not.
#_
#_          a - archive
#_          c - compressed
#_          d - directory
#_          e - reparse point
#_          h - hidden
#_          i - not content indexed
#_          n - encrypted
#_          o - offline
#_          p - sparse file
#_          r - read only
#_          s - system file
#_          t - temporary
#_          u - no scrub data
#_          v - virtual
#_
#_1. **`LastWriteTime`**, **`LastAccessTime`**, **`CreationTime`**
#_and **`ChangeTime`** are values measured in number of time ticks
#_elapsed since January 1, 1601.
#_
#_
</article>
</node>
<node>
id=218
lv=2
dt=Text
nm=tSystemTime
mtime=3602279009
<article>
#_<markdown>
#_**`tSystemTime`** is a table with the following predefined fields:
#_
#_      wYear:          number
#_      wMonth:         number
#_      wDayOfWeek:     number
#_      wDay:           number
#_      wHour:          number
#_      wMinute:        number
#_      wSecond:        number
#_      wMilliseconds:  number
#_
</article>
</node>
<node>
id=133
lv=2
dt=Text
nm=ViewerInfo.CurMode
mtime=3560971933
<article>
#_<markdown>
#_**`ViewerInfo.CurMode`** is a table with the following predefined fields:
#_
#_      CodePage:       integer
#_      Flags:          flags
#_      ViewMode:       flag
#_
#_
</article>
</node>
<node>
id=458
lv=0
dt=Text
nm=Additional libraries
ctime=3532768921
mtime=3721977211
<article>
</article>
</node>
<node>
id=405
lv=1
dt=Text
nm=bit64
ctime=3507278228
mtime=3790945395
<article>
#_<markdown>
#_As Far 3.0 started to use 64-bit integer values ("flags") in its API, arose the need to represent and handle them from Lua. This is the role of **bit64** library.
#_
#_The library represents and accepts flags as either numbers or "64 bit integer" userdata. Values that fit in 53 bits can be represented in both ways. Greater values are always represented as userdata.
#_
#_Userdata values created by the library support the following operations (metamethods):<br>
#_`+`, `-`, `*`, `/`, `%`, `==`, `<`, `<=`, unary minus, `tonumber`.
#_
#_`__tostring` metamethod of "64-bit type" userdata returns an acceptable string representation that when passed to [`new`][new] will produce a value equal to the original one.
#_
#_The library has the following functions:
#_
#_* *`bnot`*    - gets a flag, returns a flag
#_* *`band`*    - gets multiple flags, returns a flag
#_* *`bor`*     - gets multiple flags, returns a flag
#_* *`bxor`*    - gets multiple flags, returns a flag
#_* *`lshift`*  - gets a flag and an integer, returns a flag
#_* *`rshift`*  - gets a flag and an integer, returns a flag
#_* *`arshift`* - gets a flag and an integer, returns a flag
#_* *`add`*     - gets multiple flags, returns a flag
#_* *`mul`*     - gets multiple flags, returns a flag
#_* *`sub`*     - gets 2 flags, returns a flag
#_* *`div`*     - gets 2 flags, returns a flag
#_* *`mod`*     - gets 2 flags, returns a flag
#_
#_The functions above always return a number if the result fits into 53 bits.
#_
#_* *`eq`*      - gets 2 flags, returns a boolean
#_* *`lt`*      - gets 2 flags, returns a boolean
#_* *`le`*      - gets 2 flags, returns a boolean
#_
#_The functions above are useful for comparisons where each operand may be either a "64 bit integer" type userdata or a number. They compare underlying 64-bit integers.
#_
#_* [*`new`*][new]   - gets a string, number or flag representation, returns a flag
#_* [*`type`*][type] - gets a value, returns a string (or nil)
#_
#_[new]: 477.html
#_[type]: 478.html
#_
#_
</article>
</node>
<node>
id=478
lv=2
dt=Text
nm=bit64.type
ctime=3553401501
mtime=3554959390
<article>
#_result = bit64.type (val)
#_
#_**Parameters:**
#_  val:    any type
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Description:**
#_
#_The function returns string *"64 bit integer"* if argument *val*
#_is a userdata of the type created by this library, otherwise nil
#_is returned.
#_
</article>
</node>
<node>
id=477
lv=2
dt=Text
nm=bit64.new
ctime=3553400683
mtime=3554816005
<article>
#_result = bit64.new (arg)
#_
#_**Parameters:**
#_  arg:     string, number or userdata
#_
#_**Returns:**
#_  result:  userdata, or nil
#_
#_**Description:**
#_
#_This function creates a new "64-bit int" type userdata from the input value.
#_
#_If *arg* is a string, it must be an acceptable string representation of
#_a 64-bit integer. The function returns *nil* if the input string can not
#_be converted.
#_
#_The string representation of an integer acceptable by the function must
#_have either the hexadecimal form
#_  **-?0[xX][0-9A-Fa-f]{1,16}**, e.g. "0x56DF5"
#_or the decimal form
#_  **-?[0-9]+**, e.g. "-234567".
#_
#_If *arg* is a number, it must fit in 53 bits, otherwise nil is returned.
#_
#_If *arg* is a "64-bit int" type userdata then a new userdata with the same
#_value is created and returned.
#_
#_
</article>
</node>
<node>
id=430
lv=1
dt=Text
nm=win
ctime=3509087872
mtime=3509095202
<article>
#_<markdown>
#_**`win`** library contains Lua bindings for some Windows API and other functions.
#_
</article>
</node>
<node>
id=517
lv=2
dt=Text
nm=Files and directories
ctime=3664132521
mtime=3664132521
<article>
</article>
</node>
<node>
id=360
lv=3
dt=Text
nm=win.CopyFile
ctime=3484575029
mtime=3484575702
<article>
#_result = win.CopyFile (source, target [, fail_if_exists])
#_
#_**Parameters:**
#_  source:         string
#_  target:         string
#_  fail_if_exists: boolean (defaults to false)
#_
#_**Returns:**
#_  result:         true (or: nil, errormessage)
#_
#_**Windows API used:**
#_  CopyFileW
#_
</article>
</node>
<node>
id=372
lv=3
dt=Text
nm=win.CreateDir
ctime=3488896876
mtime=3582538169
<article>
#_result = win.CreateDir (path [, flags])
#_
#_**Parameters:**
#_  path:     string
#_  flags:    string (set of characters; optional)
#_              't' - stands for 'tolerant'
#_              'o' - stands for 'original'
#_              default: ''
#_
#_**Returns:**
#_  result:   true (or: nil, errormessage)
#_
#_**Description:**
#_  This function creates a directory specified by the *path* parameter.
#_  Nested directories can be created by a single call.
#_
#_  Flag 't': If the target directory already exists, then the function returns true.
#_  Flag 'o': The function will not attempt to create nested directories.
#_            The *path* argument is passed to *CreateDirectoryW* as is.
#_
#_**Note:**
#_  For backwards compatibility, a non-string true value passed as the 2-nd parameter
#_  is equivalent to flags=='t'.
#_
#_**Windows API used:**
#_  CreateDirectoryW
#_
</article>
</node>
<node>
id=361
lv=3
dt=Text
nm=win.DeleteFile
ctime=3484575113
mtime=3484575728
<article>
#_result = win.DeleteFile (filename)
#_
#_**Parameters:**
#_  filename: string
#_
#_**Returns:**
#_  result:   true (or: nil, errormessage)
#_
#_**Windows API used:**
#_  DeleteFileW
#_
</article>
</node>
<node>
id=512
lv=3
dt=Text
nm=win.GetCurrentDir
ctime=3640178067
mtime=3640178294
<article>
#_dir = win.GetCurrentDir ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  dir : string (or: nil, errormessage)
#_
#_**Windows API used:**
#_  GetCurrentDirectoryW
#_
</article>
</node>
<node>
id=398
lv=3
dt=Text
nm=win.GetDriveType
ctime=3504253206
mtime=3504253386
<article>
#_type = win.GetDriveType ([root])
#_
#_**Parameters:**
#_  root : string
#_
#_**Returns:**
#_  type : one of the following strings:
#_           "unknown type"
#_           "no root directory"
#_           "removable"
#_           "fixed"
#_           "remote"
#_           "cdrom"
#_           "ramdisk"
#_
#_**Windows API used:**
#_  GetDriveTypeW
#_
</article>
</node>
<node>
id=433
lv=3
dt=Text
nm=win.GetFileAttr
ctime=3511264574
mtime=3602278956
<article>
#_attr = win.GetFileAttr (FileName)
#_
#_**Parameters:**
#_  FileName: string
#_
#_**Returns:**
#_  attr:     string (see `tPluginPanelItem` page), or nil
#_
#_**Windows API used:**
#_  GetFileAttributesW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
</article>
</node>
<node>
id=213
lv=3
dt=Text
nm=win.GetFileInfo
mtime=3705999657
<article>
#_<markdown>
#_    Info = win.GetFileInfo (FileName)
#_
#_###Parameters
#_   **`FileName`**:  string<br>
#_   A valid directory or path and filename, which can contain
#_   wildcard characters (`*` and `?`)
#_
#_###Returns
#_  On success: [`tPluginPanelItem`][] table <br>
#_  On failure: `nil` + error message
#_
#_###Description
#_  This function provides information about the specified file.
#_  The same information can be obtained with [`far.RecursiveSearch`][]
#_  function, but this function has simpler API and is much faster
#_  when single file data are needed.
#_
#_###Windows API used
#_  `FindFirstFile`, `FindClose`
#_
#_
#_[`tPluginPanelItem`]: 85.html
#_[`far.RecursiveSearch`]: 211.html
#_
</article>
</node>
<node>
id=547
lv=3
dt=Text
nm=win.GetFileTimes
ctime=3790916234
mtime=3790917671
<article>
#_times = win.GetFileTimes (FileName)
#_
#_**Parameters:**
#_  FileName: string
#_
#_**Returns:**
#_  times:    table (success), or nil (failure)
#_    Fields of *times*:
#_      LastWriteTime:      `bit64-userdata`
#_      LastAccessTime:     `bit64-userdata`
#_      CreationTime:       `bit64-userdata`
#_
#_**Note:**
#_  All time values are expressed in 100-ns intervals elapsed since 1601-01-01,00:00:00.
#_
#_**Windows API used:**
#_  CreateFile, GetFileTime
#_
#_@@@
#_[bit64-userdata]: 405.html
#_
</article>
</node>
<node>
id=397
lv=3
dt=Text
nm=win.GetLogicalDriveStrings
ctime=3504246962
mtime=3504247079
<article>
#_drives = win.GetLogicalDriveStrings()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  drives: table (array of strings), or nil + error message
#_
#_**Windows API used:**
#_  GetLogicalDriveStringsW
#_
</article>
</node>
<node>
id=362
lv=3
dt=Text
nm=win.MoveFile
ctime=3484575124
mtime=3484631380
<article>
#_result = win.MoveFile (source, target [, flags])
#_
#_**Parameters:**
#_  source:  string
#_  target:  string
#_  flags:   string (default = '')
#_             'c' = MOVEFILE_COPY_ALLOWED
#_             'd' = MOVEFILE_DELAY_UNTIL_REBOOT
#_             'r' = MOVEFILE_REPLACE_EXISTING
#_             'w' = MOVEFILE_WRITE_THROUGH
#_
#_**Returns:**
#_  result:  true (or: nil, errormessage)
#_
#_**Windows API used:**
#_  MoveFileExW
#_
</article>
</node>
<node>
id=373
lv=3
dt=Text
nm=win.RemoveDir
ctime=3488896891
mtime=3488897675
<article>
#_result = win.RemoveDir (path)
#_
#_**Parameters:**
#_  path:   string
#_
#_**Returns:**
#_  result: true (or: nil, errormessage)
#_
#_**Windows API used:**
#_  RemoveDirectoryW
#_
</article>
</node>
<node>
id=363
lv=3
dt=Text
nm=win.RenameFile
ctime=3484723553
mtime=3484723622
<article>
#_<markdown>
#_This function is an alias to [`win.MoveFile`](362.html).
#_
</article>
</node>
<node>
id=429
lv=3
dt=Text
nm=win.SearchPath
ctime=3509085619
mtime=3509095033
<article>
#_FullName, FilePart = win.SearchPath (Path, FileName, Extension)
#_
#_**Parameters:**
#_  Path :     string, or nil
#_  FileName:  string
#_  Extension: string, or nil
#_
#_**Returns:**
#_  FullName:  string, or nil
#_  FilePart:  string, or nil
#_
#_**Windows API used:**
#_  SearchPathW
#_
</article>
</node>
<node>
id=513
lv=3
dt=Text
nm=win.SetCurrentDir
ctime=3640178091
mtime=3640178534
<article>
#_result = win.SetCurrentDir (dir)
#_
#_**Parameters:**
#_  dir    : string 
#_
#_**Returns:**
#_  result : boolean
#_
#_**Windows API used:**
#_  SetCurrentDirectoryW
#_
</article>
</node>
<node>
id=434
lv=3
dt=Text
nm=win.SetFileAttr
ctime=3511264583
mtime=3602278974
<article>
#_result = win.SetFileAttr (FileName, Attr)
#_
#_**Parameters:**
#_  FileName: string
#_  Attr:     string (see `tPluginPanelItem` page)
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Windows API used:**
#_  SetFileAttributesW
#_
#_@@@
#_[tPluginPanelItem]: 85.html
#_
</article>
</node>
<node>
id=548
lv=3
dt=Text
nm=win.SetFileTimes
ctime=3790916254
mtime=3790917726
<article>
#_result = win.SetFileTimes (FileName, times)
#_
#_**Parameters:**
#_  FileName: string
#_  times:    table
#_    Fields of *times* (each one is optional):
#_      LastWriteTime:      `bit64-userdata` or number
#_      LastAccessTime:     `bit64-userdata` or number
#_      CreationTime:       `bit64-userdata` or number
#_
#_**Returns:**
#_  result:   boolean
#_
#_**Note:**
#_  All time values are expressed in 100-ns intervals elapsed since 1601-01-01,00:00:00.
#_
#_**Windows API used:**
#_  CreateFile, SetFileTime
#_
#_@@@
#_[bit64-userdata]: 405.html
#_
</article>
</node>
<node>
id=516
lv=2
dt=Text
nm=Registry access
ctime=3664128224
mtime=3664128224
<article>
</article>
</node>
<node>
id=521
lv=3
dt=Text
nm=win.DeleteRegKey
ctime=3665073013
mtime=3666677908
<article>
#_result = win.DeleteRegKey (RootKey, Key, [AccessMask])
#_
#_**Parameters:**
#_  RootKey:     string (one of: "HKLM", "HKCC", "HKCR", "HKCU", "HKU")
#_  Key:         string
#_  AccessMask:  flag ("KEY_WOW64_32KEY" or "KEY_WOW64_64KEY"; the default is 0)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Description:**
#_  This function deletes a registry key.
#_
#_**Example of use:**
#_*-- Recursively delete registry keys*
#_function win.DeleteRegKey_Recurse(RootKey, Key, AccessMask)
#_  while true do
#_    local subkey = win.EnumRegKey(RootKey, Key, 0, AccessMask)
#_    if not (subkey and win.DeleteRegKey_Recurse(RootKey, Key.."\\"..subkey, AccessMask)) then
#_      break
#_    end
#_  end
#_  return win.DeleteRegKey(RootKey, Key, AccessMask)
#_end
#_
</article>
</node>
<node>
id=515
lv=3
dt=Text
nm=win.DeleteRegValue
ctime=3659625870
mtime=3664130894
<article>
#_result = win.DeleteRegValue (RootKey, Key, [ValueName], [AccessMask])
#_
#_**Parameters:**
#_  RootKey:     string (one of: "HKLM", "HKCC", "HKCR", "HKCU", "HKU")
#_  Key:         string
#_  ValueName:   string (optional)
#_  AccessMask:  flag ("KEY_WOW64_32KEY" or "KEY_WOW64_64KEY"; the default is 0)
#_
#_**Returns:**
#_  result: boolean
#_
#_**Description:**
#_  This function deletes a registry value.
#_
</article>
</node>
<node>
id=482
lv=3
dt=Text
nm=win.EnumRegKey
ctime=3568652034
mtime=3666677891
<article>
#_Subkey = win.EnumRegKey (RootKey, Key, Index, [AccessMask])
#_
#_**Parameters:**
#_  RootKey:     string (one of: "HKLM", "HKCC", "HKCR", "HKCU", "HKU")
#_  Key:         string (specify "" if RootKey itself is enumerated)
#_  Index:       integer (0-based)
#_  AccessMask:  flag ("KEY_WOW64_32KEY" or "KEY_WOW64_64KEY"; the default is 0)
#_
#_**Returns:**
#_  Subkey:    string, or nil
#_
#_**Description:**
#_  This function enumerates subkeys of the given registry key.
#_
#_**Example of use:**
#_*-- Recursively delete registry keys*
#_function win.DeleteRegKey_Recurse(RootKey, Key, AccessMask)
#_  while true do
#_    local subkey = win.EnumRegKey(RootKey, Key, 0, AccessMask)
#_    if not (subkey and win.DeleteRegKey_Recurse(RootKey, Key.."\\"..subkey, AccessMask)) then
#_      break
#_    end
#_  end
#_  return win.DeleteRegKey(RootKey, Key, AccessMask)
#_end
#_
</article>
</node>
<node>
id=483
lv=3
dt=Text
nm=win.EnumRegValue
ctime=3568712149
mtime=3666604294
<article>
#_ValueName = win.EnumRegValue (RootKey, Key, Index, [AccessMask])
#_
#_**Parameters:**
#_  RootKey:     string (one of: "HKLM", "HKCC", "HKCR", "HKCU", "HKU")
#_  Key:         string (specify "" if RootKey itself is enumerated)
#_  Index:       integer (0-based)
#_  AccessMask:  flag ("KEY_WOW64_32KEY" or "KEY_WOW64_64KEY"; the default is 0)
#_
#_**Returns:**
#_  ValueName: string, or nil
#_
#_**Description:**
#_  This function enumerates values of the given registry key.
#_
</article>
</node>
<node>
id=61
lv=3
dt=Text
nm=win.GetRegKey
mtime=3664130929
<article>
#_ValueData, DataType = win.GetRegKey (RootKey, Key, ValueName, [AccessMask])
#_
#_**Parameters:**
#_  RootKey:     string (one of: "HKLM", "HKCC", "HKCR", "HKCU", "HKU")
#_  Key:         string
#_  ValueName:   string
#_  AccessMask:  flag ("KEY_WOW64_32KEY" or "KEY_WOW64_64KEY"; the default is 0)
#_
#_**Returns:**
#_  ValueData: string, or number
#_  DataType:  string (one of: "string", "expandstring", "multistring",
#_                             "dword" and "binary")
#_
#_**Returns on failure:**
#_  nil + error message
#_
#_**Description:**
#_  This function gets a value from a registry key.
#_
</article>
</node>
<node>
id=73
lv=3
dt=Text
nm=win.SetRegKey
mtime=3747147972
<article>
#_result = win.SetRegKey (RootKey, Key, ValueName, DataType, ValueData, [AccessMask])
#_
#_**Parameters:**
#_  RootKey:     string (one of: "HKLM", "HKCC", "HKCR", "HKCU", "HKU")
#_  Key:         string
#_  ValueName:   string
#_  DataType:    string (one of: "string", "expandstring", "multistring", "dword" and "binary")
#_  ValueData:   string or number
#_  AccessMask:  flag ("KEY_WOW64_32KEY" or "KEY_WOW64_64KEY"; the default is 0)
#_
#_**Returns:**
#_  result:      boolean (true on success)
#_
#_**Description:**
#_  This function sets a value in a registry key.
#_
</article>
</node>
<node>
id=518
lv=2
dt=Text
nm=Text related functions
ctime=3664132713
mtime=3664132713
<article>
</article>
</node>
<node>
id=274
lv=3
dt=Text
nm=win.CompareString
<article>
#_result = win.CompareString(s1, s2, [locale], [flags])
#_
#_**Parameters:**
#_  s1     : string
#_  s2     : string
#_  locale : string, or nil (default="u")
#_             either of:
#_               "s" (system default)
#_               "u" (user default)
#_               "n" (neutral)
#_  flags  : string, or nil (default="")
#_             any combination of characters:
#_               'c' =  NORM_IGNORECASE;
#_               'k' =  NORM_IGNOREKANATYPE;
#_               'n' =  NORM_IGNORENONSPACE;
#_               's' =  NORM_IGNORESYMBOLS;
#_               'w' =  NORM_IGNOREWIDTH;
#_               'S' =  SORT_STRINGSORT;
#_
#_**Returns:**
#_  result : integer (either of -1, 0, 1), or nil
#_
#_**Note:**
#_  The underlying function *CompareStringW* seems to behave as if
#_  flag NORM_IGNORECASE is always present, even if it is not.
#_
#_**Windows API used:**
#_  CompareStringW
#_
</article>
</node>
<node>
id=394
lv=3
dt=Text
nm=win.EnumSystemCodePages
ctime=3500809326
mtime=3500809371
<article>
#_pages = win.EnumSystemCodePages ([supported])
#_
#_**Parameters:**
#_  supported : boolean
#_                false means CP_INSTALLED
#_                true  means CP_SUPPORTED
#_
#_**Returns:**
#_  pages     : table (array of strings), or nil + error message
#_
#_**Windows API used:**
#_  EnumSystemCodePagesW
#_
</article>
</node>
<node>
id=391
lv=3
dt=Text
nm=win.GetACP
ctime=3500653631
mtime=3500653738
<article>
#_codepage = win.GetACP()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  codepage: integer
#_
#_**Windows API used:**
#_  GetACP
#_
</article>
</node>
<node>
id=530
lv=3
dt=Text
nm=win.GetConsoleCP
ctime=3752084597
mtime=3752085213
<article>
#_codepage = win.GetConsoleCP()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  codepage: integer
#_
#_**Windows API used:**
#_  GetConsoleCP
#_
</article>
</node>
<node>
id=533
lv=3
dt=Text
nm=win.GetConsoleOutputCP
ctime=3752084648
mtime=3752085217
<article>
#_codepage = win.GetConsoleOutputCP()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  codepage: integer
#_
#_**Windows API used:**
#_  GetConsoleOutputCP
#_
</article>
</node>
<node>
id=392
lv=3
dt=Text
nm=win.GetOEMCP
ctime=3500653643
mtime=3500653766
<article>
#_codepage = win.GetOEMCP()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  codepage: integer
#_
#_**Windows API used:**
#_  GetOEMCP
#_
</article>
</node>
<node>
id=452
lv=3
dt=Text
nm=win.lenW
ctime=3523918278
mtime=3523940191
<article>
#_length = win.lenW (str)
#_
#_**Parameters:**
#_  str:    string
#_
#_**Returns:**
#_  length: integer
#_
#_**Description:**
#_  This function is similar to *string.len* except that it works on UTF-16LE strings
#_  and returns their lengths as  number of characters rather than bytes.
#_
</article>
</node>
<node>
id=370
lv=3
dt=Text
nm=win.MultiByteToWideChar
ctime=3487755325
mtime=3500869003
<article>
#_str_out = win.MultiByteToWideChar (str_in, codepage [, flags])
#_
#_**Parameters:**
#_  str_in   : string in multi-byte encoding
#_  codepage : integer
#_  flags    : string, a combination of 0 or more of the following
#_             characters:
#_               'p' -> MB_PRECOMPOSED
#_               'c' -> MB_COMPOSITE
#_               'e' -> MB_ERR_INVALID_CHARS
#_               'u' -> MB_USEGLYPHCHARS
#_
#_**Returns:**
#_  str_out  : string in wide character encoding, or nil+error message.
#_
#_**Windows API used:**
#_  MultiByteToWideChar
#_
</article>
</node>
<node>
id=256
lv=3
dt=Text
nm=win.OemToUtf8
<article>
#_str_out = win.OemToUtf8 (str_in)
#_
#_**Parameters:**
#_  str_in  : string in OEM encoding
#_
#_**Returns:**
#_  str_out : string in UTF-8 encoding
#_
</article>
</node>
<node>
id=531
lv=3
dt=Text
nm=win.SetConsoleCP
ctime=3752084616
mtime=3752085222
<article>
#_result = win.SetConsoleCP(codepage)
#_
#_**Parameters:**
#_  codepage: integer
#_
#_**Returns:**
#_  result: true (on success) or nil + error message
#_
#_**Windows API used:**
#_  SetConsoleCP
#_
#_
</article>
</node>
<node>
id=532
lv=3
dt=Text
nm=win.SetConsoleOutputCP
ctime=3752084634
mtime=3752085226
<article>
#_result = win.SetConsoleOutputCP(codepage)
#_
#_**Parameters:**
#_  codepage: integer
#_
#_**Returns:**
#_  result: true (on success) or nil + error message
#_
#_**Windows API used:**
#_  SetConsoleOutputCP
#_
</article>
</node>
<node>
id=451
lv=3
dt=Text
nm=win.subW
ctime=3523918268
mtime=3602449058
<article>
#_strOut = win.subW (str, from, to)
#_
#_**Parameters:**
#_  str:    string
#_  from:   integer (default = 1)
#_  to:     integer (default = -1)
#_
#_**Returns:**
#_  strOut: string
#_
#_**Description:**
#_  This function is similar to *string.sub* except that it works on UTF-16LE strings
#_  and considers arguments *from* and *to* expressed in characters rather than bytes.
#_
</article>
</node>
<node>
id=264
lv=3
dt=Text
nm=win.Utf16ToUtf8
mtime=3491909511
<article>
#_str_out = win.Utf16ToUtf8 (str_in)
#_
#_**Parameters:**
#_  str_in  : string in UTF-16 (little endian) encoding
#_
#_**Returns:**
#_  str_out : string in UTF-8 encoding
#_
</article>
</node>
<node>
id=257
lv=3
dt=Text
nm=win.Utf8ToOem
<article>
#_str_out = win.Utf8ToOem (str_in)
#_
#_**Parameters:**
#_  str_in  : string in UTF-8 encoding
#_
#_**Returns:**
#_  str_out : string in OEM encoding
#_
</article>
</node>
<node>
id=265
lv=3
dt=Text
nm=win.Utf8ToUtf16
mtime=3491909525
<article>
#_str_out = win.Utf8ToUtf16 (str_in)
#_
#_**Parameters:**
#_  str_in  : string in UTF-8 encoding
#_
#_**Returns:**
#_  str_out : string in UTF-16 (little endian) encoding
#_
</article>
</node>
<node>
id=275
lv=3
dt=Text
nm=win.wcscmp
<article>
#_result = win.wcscmp(s1, s2 [, insens))
#_
#_**Parameters:**
#_  s1     : string
#_  s2     : string
#_  insens : boolean (defaults to *false*)
#_
#_**Returns:**
#_  result : integer (either of -1, 0, 1)
#_
#_**C API used:**
#_  wcscmp, wcsicmp
#_
</article>
</node>
<node>
id=456
lv=3
dt=Text
nm=win.WideCharToMultiByte
ctime=3528638377
mtime=3528778037
<article>
#_str_out = win.WideCharToMultiByte (str_in, codepage [, flags])
#_
#_**Parameters:**
#_  str_in   : string in UTF-16LE encoding
#_  codepage : integer
#_  flags    : string, a combination of 0 or more of the following
#_             characters:
#_               'c' -> WC_COMPOSITECHECK
#_               'd' -> WC_DISCARDNS
#_               's' -> WC_SEPCHARS
#_               'f' -> WC_DEFAULTCHAR
#_
#_**Returns:**
#_  str_out  : string in *codepage* encoding.
#_
#_**Windows API used:**
#_  WideCharToMultiByte
#_
</article>
</node>
<node>
id=534
lv=3
dt=Text
nm=win.WriteConsole
ctime=3773163263
mtime=3773238203
<article>
#_result = win.WriteConsole (...)
#_
#_**Parameters:**
#_  ...   : arbitrary number of arguments of any Lua type;
#_          strings must be in UTF-8 encoding;
#_
#_**Returns:**
#_  result  : either *true* (success)
#_            or *nil* [, <error_message>]
#_
#_**Description:**
#_  1. The function writes its arguments to the console.
#_  2. No delimiter is inserted between the arguments (do it yourself).
#_  3. When using this function in LuaFAR plugins and macros place its calls
#_     in a code block wrapped in
#_     `panel.GetUserScreen`() ... `panel.SetUserScreen`().
#_
#_**Windows API used:**
#_  GetStdHandle, WriteConsoleW
#_
#_@@@
#_[panel.GetUserScreen]: 228.html
#_[panel.SetUserScreen]: 15.html
#_
</article>
</node>
<node>
id=520
lv=2
dt=Text
nm=Time related functions
ctime=3664133566
mtime=3664133566
<article>
</article>
</node>
<node>
id=462
lv=3
dt=Text
nm=win.FileTimeToLocalFileTime
ctime=3536488129
mtime=3602448763
<article>
#_local_ftime = win.FileTimeToLocalFileTime (ftime)
#_
#_**Parameters:**
#_  ftime       : number (number of time ticks since January 1, 1601)
#_
#_**Returns:**
#_  local_ftime : number (number of time ticks since January 1, 1601)
#_
#_**Windows API used:**
#_  FileTimeToLocalFileTime
#_
#_
</article>
</node>
<node>
id=215
lv=3
dt=Text
nm=win.FileTimeToSystemTime
mtime=3602448840
<article>
#_result = win.FileTimeToSystemTime (ftime)
#_
#_**Parameters:**
#_  ftime :  number (number of time ticks since January 1, 1601)
#_
#_**Returns:**
#_  result : table `tSystemTime`, or nil
#_
#_**Windows API used:**
#_  FileTimeToSystemTime
#_
#_@@@
#_[tSystemTime]: 218.html
#_
</article>
</node>
<node>
id=217
lv=3
dt=Text
nm=win.GetSystemTimeAsFileTime
mtime=3602279052
<article>
#_result = win.GetSystemTimeAsFileTime ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: number
#_
#_**Description:**
#_  The system time is expressed as number of time ticks since January 1, 1601.
#_
#_**Windows API used:**
#_  GetSystemTimeAsFileTime
#_
#_
</article>
</node>
<node>
id=216
lv=3
dt=Text
nm=win.SystemTimeToFileTime
mtime=3602449161
<article>
#_result = win.SystemTimeToFileTime (systime)
#_
#_**Parameters:**
#_  systime : table `tSystemTime` (missing fields default to 0)
#_
#_**Returns:**
#_  result  : number, or nil
#_            (number of time ticks since January 1, 1601)
#_
#_**Windows API used:**
#_  SystemTimeToFileTime
#_
#_@@@
#_[tSystemTime]: 218.html
#_
</article>
</node>
<node>
id=519
lv=2
dt=Text
nm=Various functions
ctime=3664133445
mtime=3664133445
<article>
</article>
</node>
<node>
id=51
lv=3
dt=Text
nm=win.ExtractKey
<article>
#_result = win.ExtractKey ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Description:**
#_  If a key was pressed, it is extracted, converted to a string and
#_  returned. Otherwise, a nil is returned.
#_
#_**Windows API used:**
#_  GetStdHandle, PeekConsoleInput, ReadConsoleInput
#_
#_@@@
#_{peekconsoleinput}: http://api.farmanager.com/ru/winapi/peekconsoleinput.html
#_{readconsoleinput}: http://api.farmanager.com/ru/winapi/readconsoleinput.html
#_
</article>
</node>
<node>
id=526
lv=3
dt=Text
nm=win.ExtractKeyEx
ctime=3735030822
mtime=3735031137
<article>
#_result = win.ExtractKeyEx ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: table `tInputRecord`, or nil
#_
#_**Description:**
#_  If a key was pressed or released, the input record is returned.
#_  Otherwise, a nil is returned.
#_
#_**Windows API used:**
#_  GetStdHandle, PeekConsoleInput, ReadConsoleInput
#_
#_@@@
#_[tInputRecord]: 187.html
#_
#_{peekconsoleinput}: http://api.farmanager.com/ru/winapi/peekconsoleinput.html
#_{readconsoleinput}: http://api.farmanager.com/ru/winapi/readconsoleinput.html
#_
</article>
</node>
<node>
id=359
lv=3
dt=Text
nm=win.GetConsoleScreenBufferInfo
ctime=3483001149
mtime=3707371971
<article>
#_info = win.GetConsoleScreenBufferInfo ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns (on success):**
#_  info : table
#_    fields of *info*:
#_      SizeX:              integer
#_      SizeY:              integer
#_      CursorPositionX:    integer
#_      CursorPositionY:    integer
#_      Attributes:         integer
#_      WindowLeft:         integer
#_      WindowTop:          integer
#_      WindowRight:        integer
#_      WindowBottom:       integer
#_      MaximumWindowSizeX: integer
#_      MaximumWindowSizeY: integer
#_
#_**Returns (on failure):**
#_  nil + error message
#_
#_**Windows API used:**
#_  GetStdHandle(STD_OUTPUT_HANDLE), GetConsoleScreenBufferInfo
#_
</article>
</node>
<node>
id=393
lv=3
dt=Text
nm=win.GetCPInfo
ctime=3500809281
mtime=3500809349
<article>
#_info = win.GetCPInfo (codepage)
#_
#_**Parameters:**
#_  codepage : integer
#_
#_**Returns:**
#_  info : table, or nil + error message
#_           fields of *info*:
#_             MaxCharSize        : integer
#_             DefaultChar        : string
#_             LeadByte           : string
#_             UnicodeDefaultChar : string
#_             CodePage           : integer
#_             CodePageName       : string
#_
#_**Windows API used:**
#_  GetCPInfoExW
#_
</article>
</node>
<node>
id=152
lv=3
dt=Text
nm=win.GetEnv
<article>
#_result = win.GetEnv (var)
#_
#_**Parameters:**
#_  var:  string
#_
#_**Returns:**
#_  result: string, or nil
#_
#_**Description:**
#_  Use this instead of os.getenv, since the latter
#_  does not always work correctly. 
#_
</article>
</node>
<node>
id=522
lv=3
dt=Text
nm=win.GetKeyState
ctime=3676815434
mtime=3676815631
<article>
#_keyDown, keyToggled = win.GetKeyState (nVirtKey)
#_
#_**Parameters:**
#_  nVirtKey:    integer
#_
#_**Returns:**
#_  keyDown:     boolean
#_  keyToggled:  boolean
#_
#_**Windows API used:**
#_  GetKeyState
#_
</article>
</node>
<node>
id=315
lv=3
dt=Text
nm=win.GetVirtualKeys
ctime=3477369087
mtime=3522050567
<article>
#_vkeys = win.GetVirtualKeys ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  vkeys: table
#_
#_**Description:**
#_  Returns a table containing values of virtual key codes keyed by
#_  their string names (and vice versa). The prefix VK_ is stripped
#_  from the names, so VK_LBUTTON is represented as "LBUTTON", etc.
#_
#_**Note:**
#_  If some key code N (where 0 <= N < 256) does not have a corresponding
#_  name, then vkeys[N] is "" (empty string).
#_
#_**Example:**
#_  local vk = win.GetVirtualKeys()
#_  far.Message(vk.ESCAPE) --> 27
#_  far.Message(vk[27])    --> ESCAPE
#_
</article>
</node>
<node>
id=431
lv=3
dt=Text
nm=win.GlobalMemoryStatus
ctime=3509698664
mtime=3509699035
<article>
#_status = win.GlobalMemoryStatus ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  status:  table (see its fields below)
#_             MemoryLoad:           number
#_             TotalPhys:            number
#_             AvailPhys:            number
#_             TotalPageFile:        number
#_             AvailPageFile:        number
#_             TotalVirtual:         number
#_             AvailVirtual:         number
#_             AvailExtendedVirtual: number
#_
#_**Returns on failure:**
#_  nil, error message
#_
#_**Windows API used:**
#_  GlobalMemoryStatusEx
#_
</article>
</node>
<node>
id=523
lv=3
dt=Text
nm=win.IsProcess64bit
ctime=3710673110
mtime=3710673277
<article>
#_result = win.IsProcess64bit ()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  result: boolean
#_
#_**Description:**
#_  Returns **true** if called from FAR x64, **false** otherwise.
#_
</article>
</node>
<node>
id=545
lv=3
dt=Text
nm=win.IsWinVersion
ctime=3781269609
mtime=3781270633
<article>
#_result = win.IsWinVersion (strVersion)
#_  or
#_result = win.IsWinVersion (major, minor, servpack)
#_
#_**Parameters:**
#_  strVersion: either of "XP", "XPSP1", "XPSP2", "XPSP3", "Vista", "VistaSP1",
#_              "VistaSP2", "W7", "W7SP1", "W8", "W8.1", "W10", "Server".
#_              This parameter is case insensitive.
#_
#_  major:      integer
#_  minor:      integer
#_  servpack:   integer
#_
#_**Returns:**
#_  result: boolean
#_
#_**Description:**
#_  This function checks the current Windows version and returns true
#_  if it is equal or greater than the version specified by the given argument(s).
#_  If the argument is "Server" then the version is not checked.
#_
</article>
</node>
<node>
id=507
lv=3
dt=Text
nm=win.OutputDebugString
ctime=3629787299
mtime=3629787570
<article>
#_win.OutputDebugString (param)
#_
#_**Parameters:**
#_  param   : string in UTF-8 encoding, or any other type.
#_            For non-string types, the global function **tostring**
#_            will be called internally.
#_
#_**Returns:**
#_  nothing
#_
#_**Windows API used:**
#_  OutputDebugStringW
#_
</article>
</node>
<node>
id=192
lv=3
dt=Text
nm=win.SetEnv
<article>
#_result = win.SetEnv (var [,value])
#_
#_**Parameters:**
#_  var  :  string
#_  value:  string, or nil
#_
#_**Returns:**
#_  result: boolean
#_
#_**Description:**
#_  This function sets or deletes a given environment variable.
#_
</article>
</node>
<node>
id=428
lv=3
dt=Text
nm=win.ShellExecute
ctime=3509050121
mtime=3509086519
<article>
#_result = win.ShellExecute (hwnd, Operation, File, Parameters, Directory, ShowCmd)
#_
#_**Parameters:**
#_  hwnd:        userdata, or nil
#_  Operation:   string, or nil
#_  File:        string
#_  Parameters:  string, or nil
#_  Directory:   string, or nil
#_  ShowCmd:     integer (defaults to SW_SHOWNORMAL)
#_
#_**Returns:**
#_  result:      integer
#_
#_**Windows API used:**
#_  ShellExecuteW
#_
</article>
</node>
<node>
id=440
lv=3
dt=Text
nm=win.SHGetFolderPath
ctime=3512504855
mtime=3512540211
<article>
#_path = win.SHGetFolderPath (nFolder, dwFlags)
#_
#_**Parameters:**
#_  nFolder:  integer
#_  dwFlags:  integer (optional; default to 0)
#_
#_**Returns:**
#_  path:     string, or nil
#_
#_**Windows API used:**
#_  SHGetFolderPathW
#_
</article>
</node>
<node>
id=432
lv=3
dt=Text
nm=win.Sleep
ctime=3510764612
mtime=3510764708
<article>
#_win.Sleep (milliseconds)
#_
#_**Parameters:**
#_  milliseconds: integer
#_
#_**Returns:**
#_  nothing
#_
#_**Windows API used:**
#_  Sleep
#_
</article>
</node>
<node>
id=508
lv=3
dt=Text
nm=win.system
ctime=3631633791
mtime=3631652700
<article>
#_result = win.system ([command])
#_
#_**Parameters:**
#_  command:  string, or nil
#_            (when command==nil or no arguments are passed, the underlying
#_            function *_wsystem* is called with a NULL argument)
#_
#_**Returns:**
#_  result:   integer
#_
#_**Description:**
#_  Executes a command.
#_
#_**API used:**
#_  _wsystem
#_
</article>
</node>
<node>
id=399
lv=3
dt=Text
nm=win.Uuid
ctime=3505937334
mtime=3508317882
<article>
#_There are 3 actions available, depending on arguments.
#_All arguments and return values are strings.
#_
#_**ret = win.Uuid ()**
#_  Generate a new (binary) UUID
#_
#_**ret = win.Uuid (binUUID)**
#_  Convert a UUID to string representation
#_
#_**ret = win.Uuid (strUUID)**
#_  Convert a string UUID representation to binary
#_
#_
#_**Note:**
#_If the function is given a string argument, it checks its length.
#_When the length is 16, the function makes conversion from binary
#_to string GUID representation, otherwise it tries to convert from
#_string GUID representation to binary one.
#_
</article>
</node>
<node>
id=537
lv=1
dt=Text
nm=luautf8
ctime=3776336119
mtime=3795716600
<article>
#_<markdown>
#_
#_UTF-8 module for Lua 5.x
#_========================
#_This module adds UTF-8 support to Lua.
#_
#_It use data extracted from
#_[Unicode Character Database](http://www.unicode.org/reports/tr44/),
#_and tested on Lua 5.2.3, Lua 5.3.0 and LuaJIT.
#_
#_parseucd.lua is a pure Lua script generate unidata.h, to support convert
#_characters and check characters' category.
#_
#_It mainly used to compatible with Lua's own string module, it passed all
#_string and pattern matching test in lua test suite[2].
#_
#_It also add some useful routines against UTF-8 features, some like:
#_- a convenient interface to escape Unicode sequence in string. 
#_- string insert/remove, since UTF-8 substring extract may expensive.
#_- calculate Unicode width, useful when implement e.g. console emulator.
#_- a useful interface to translate Unicode offset and byte offset.
#_
#_Note that to avoid conflict with the Lua5.3's buitin library 'utf8',
#_this library produce a file like lua-utf8.dll or lua-utf8.so. so use
#_it like this:
#_
#_```lua
#_local utf8 = require 'lua-utf8'
#_```
#_
#_in your codes :-(
#_
#_[2]: http://www.lua.org/tests/5.2/
#_
#_
#_LuaRocks Installation
#_---------------------
#_`luarocks install luautf8`
#_
#_It's now full-compatible with Lua5.3's utf8 library, so replace this
#_file (and headers) with lua5.3 source's lutf8lib.c is also okay.
#_
#_Usage
#_-----
#_
#_Many routines are same as Lua's string module:
#_- `utf8.byte`
#_- `utf8.char`
#_- `utf8.find`
#_- `utf8.gmatch`
#_- `utf8.gsub`
#_- `utf8.len`
#_- `utf8.lower`
#_- `utf8.match`
#_- `utf8.reverse`
#_- `utf8.sub`
#_- `utf8.upper`
#_
#_The document of these functions can be find in Lua manual[3].
#_
#_[3]: http://www.lua.org/manual/5.2/manual.html#6.4
#_
#_
#_Some routines in string module needn't support Unicode:
#_- `string.dump`
#_- `string.format`
#_- `string.rep`
#_
#_They are NOT in utf8 module.
#_
#_Some routines are the compatible for Lua 5.3's basic UTF-8 support
#_library:
#_- `utf8.offset`
#_- `utf8.codepoint`
#_- `utf8.codes`
#_
#_See Lua5.3's manual to get usage.
#_
#_Some routines are new, with some Unicode-spec functions:
#_
#_### utf8.escape(str) -> utf8 string
#_escape a str to UTF-8 format string. It support several escape format:
#_
#_ * `%ddd` - which ddd is a decimal number at any length:
#_   change Unicode code point to UTF-8 format.
#_ * `%{ddd}` - same as `%nnn` but has bracket around.
#_ * `%uddd` - same as `%ddd`, u stands Unicode
#_ * `%u{ddd}` - same as `%{ddd}`
#_ * `%xhhh` - hexadigit version of `%ddd`
#_ * `%x{hhh}` same as `%xhhh`.
#_ * `%?` - '?' stands for any other character: escape this character.
#_
#_#### Examples:
#_```lua
#_local u = utf8.escape
#_print(u"%123%u123%{123}%u{123}%xABC%x{ABC}")
#_print(u"%%123%?%d%%u")
#_```
#_
#_### utf8.charpos(s[[, charpos], index]) -> charpos, code point
#_convert UTF-8 position to byte offset.
#_if only `index` is given, return byte offset of this UTF-8 char index.
#_if both `charpos` and `index` is given, a new `charpos` will be
#_calculated, by add/subtract UTF-8 char `index` to current `charpos`.
#_in all cases, it returns a new char position, and code point (a
#_number) at this position.
#_
#_### utf8.next(s[, charpos[, index]]) -> charpos, code point
#_iterate though the UTF-8 string s.
#_If only s is given, it can used as a iterator:
#_```lua
#_for pos, code in utf8.next, "utf8-string" do
#_   -- ...
#_end
#_```
#_if only `charpos` is given, return the next byte offset of in string.
#_if `charpos` and `index` is given, a new `charpos` will be calculated, by
#_add/subtract UTF-8 char offset to current charpos.
#_in all case, it return a new char position (in bytes), and code point
#_(a number) at this position.
#_
#_### utf8.insert(s[, idx], substring) -> new_string
#_insert a substring to s. If idx is given, insert substring before char at
#_this index, otherwise substring will concat to s. idx can be negative.
#_
#_
#_### utf8.remove(s[, start[, stop]]) -> new_string
#_delete a substring in s. If neither start nor stop is given, delete the
#_last UTF-8 char in s, otherwise delete char from start to end of s. if
#_stop is given, delete char from start to stop (include start and stop).
#_start and stop can be negative.
#_
#_
#_### utf8.width(s[, ambi_is_double[, default_width]]) -> width
#_calculate the width of UTF-8 string s. if ambi_is_double is given, the
#_ambiguous width character's width is 2, otherwise it's 1.
#_fullwidth/doublewidth character's width is 2, and other character's width
#_is 1.
#_if default_width is given, it will be the width of unprintable character,
#_used display a non-character mark for these characters.
#_if s is a code point, return the width of this code point.
#_
#_
#_### utf8.widthindex(s, location[, ambi_is_double[, default_width]]) -> idx, offset, width
#_return the character index at given location in string s. this is a
#_reverse operation of utf8.width().
#_this function return a index of location, and a offset in in UTF-8
#_encoding. e.g. if cursor is at the second column (middle) of the wide
#_char, offset will be 2. the width of character at idx is returned, also.
#_
#_
#_### utf8.title(s) -> new_string
#_### utf8.fold(s) -> new_string
#_convert UTF-8 string s to title-case, or folded case used to compare by
#_ignore case.
#_if s is a number, it's treat as a code point and return a convert code
#_point (number). utf8.lower/utf8.upper has the same extension.
#_
#_
#_### utf8.ncasecmp(a, b) -> [-1,0,1]
#_compare a and b without case, -1 means a < b, 0 means a == b and 1 means a > b.
#_
#_
#_Improvement needed
#_------------------
#_
#_- add Lua 5.3 spec test-suite.
#_- more test case.
#_- grapheme-compose support, and affect in utf8.reverse and utf8.width
#_- Unicode normalize algorithm implement.
#_
#_
#_License
#_-------
#_It use same license with Lua: http://www.lua.org/license.html
#_
</article>
</node>
<node>
id=539
lv=2
dt=Text
nm=utf8.dump
ctime=3776451293
mtime=3776486873
<article>
#_**Note:**
#_  This is an added function, not present in the original luautf8 library.
#_  See `string.dump` for reference.
#_
#_@@@
#_[string.dump]: http://www.lua.org/manual/5.1/manual.html#pdf-string.dump
#_
</article>
</node>
<node>
id=541
lv=2
dt=Text
nm=utf8.format
ctime=3776451312
mtime=3776486954
<article>
#_**Note:**
#_  This is an added function, not present in the original luautf8 library.
#_  See `string.format` for reference.
#_
#_@@@
#_[string.format]: http://www.lua.org/manual/5.1/manual.html#pdf-string.format
#_
</article>
</node>
<node>
id=540
lv=2
dt=Text
nm=utf8.rep
ctime=3776451304
mtime=3776487967
<article>
#_**Note:**
#_  This is an added function, not present in the original luautf8 library.
#_  See `string.rep` for reference.
#_
#_@@@
#_[string.rep]: http://www.lua.org/manual/5.1/manual.html#pdf-string.rep
#_
</article>
</node>
<node>
id=487
lv=2
dt=Text
nm=utf8.utf8valid
ctime=3579943896
mtime=3776451338
<article>
#_result, len = utf8.utf8valid (str)
#_    or
#_result, len = str:utf8valid ()
#_
#_**Parameters:**
#_  str:     string
#_
#_**Returns:**
#_  result:  boolean
#_  len:     integer
#_
#_**Description:**
#_  This function tests whether the entire input string is valid UTF-8.
#_  If it is, the function returns *true* followed by the string length in characters.
#_  Otherwise, the function returns *false* followed by the number of valid UTF-8
#_  characters preceded the first invalid one.
#_
#_**Note:**
#_  This is an added function, not present in the original **luautf8** library.
</article>
</node>
<node>
id=524
lv=0
dt=Text
nm=Extensions
ctime=3721974296
mtime=3721979604
<article>
</article>
</node>
<node>
id=525
lv=1
dt=Text
nm=file:rawhandle
ctime=3721974412
mtime=3744087293
<article>
#_rh = file:rawhandle()
#_
#_**Parameters:**
#_  none
#_
#_**Returns:**
#_  rh:      light userdata
#_
#_**Description:**
#_  This is an additional method of a file handle returned by *io.open* function.
#_  It returns the value of FILE`*` that is suitable for using with LuaJIT FFI.
#_
#_**Note:**
#_  file:rawhandle() throws an error in non-GCC compilations.
#_  This is to prevent a crash caused by incompatible runtime libraries.
#_
#_@@@
#_
</article>
</node>
<node>
id=551
lv=1
dt=Text
nm=file:read("*b")
ctime=3794741921
mtime=3794742737
<article>
#_<markdown>
#_This is the same as `file:read("*l")` but it treats the `'\0'`
#_character like any other non-newline character which makes it
#_possible to read "lines" from binary files.
#_
#_**Note:** `"*b"` stands for "binary line".
#_
</article>
</node>
<node>
id=128
lv=0
dt=Text
nm=LuaFAR C-interface
<article>
</article>
</node>
<node>
id=183
lv=1
dt=Text
nm=Mediator functions
mtime=3509019336
<article>
#_<markdown>
#_Functions in this sections act as mediators between the plugin's
#_exported functions and their counterparts written in Lua.
#_
#_When FAR calls an exported function, the latter in turn calls
#_a mediator passing it a Lua State pointer as the first argument,
#_followed by all the arguments it received from FAR.
#_
#_The mediator then calls a corresponding Lua function, passing it
#_the arguments converted to their Lua equivalents, receives return
#_value(s) from Lua, converts them to their C equivalents and returns
#_them to its caller (the exported function).
#_
#_#### Example:
#_1) FAR calls the exported function `OpenW`:<br>
#_      HANDLE OpenW(const struct OpenInfo *Info)
#_
#_2) `OpenW` calls the mediator function [`LF_Open](173.html):<br>
#_      HANDLE LF_Open (lua_State* L, const struct OpenInfo *Info)
#_
#_3) `LF_Open` calls the Lua function [`export.Open`](109.html):<br>
#_      export.Open (aFrom, aGuid, aItem)
#_
#_@@@
#_{openinfo}: http://api.farmanager.com/ru/structures/openinfo.html
#_{openw}: http://api.farmanager.com/ru/exported_functions/openw.html
#_
</article>
</node>
<node>
id=424
lv=2
dt=Text
nm=LF_Analyse
ctime=3507872169
mtime=3601970445
<article>
#_<markdown>
#_    intptr_t LF_Analyse(lua_State* L, const struct AnalyseInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      Info:    Data about the file to analyse
#_
#_#### Returns:
#_      TRUE or FALSE
#_
#_#### Description:
#_
#_If Lua function [`export.Analyse`](425.html) exists, it is called.
#_
#_@@@
#_{analyseinfo}: http://api.farmanager.com/ru/structures/analyseinfo.html
#_
</article>
</node>
<node>
id=474
lv=2
dt=Text
nm=LF_CloseAnalyse
ctime=3538549895
mtime=3601970134
<article>
#_<markdown>
#_    void LF_CloseAnalyse (lua_State* L, const struct CloseAnalyseInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_This function removes the value returned by [`export.Analyse`](425.html) from the Lua registry.
#_
#_@@@
#_{closeanalyseinfo}: http://api.farmanager.com/ru/structures/closeanalyseinfo.html
#_
</article>
</node>
<node>
id=158
lv=2
dt=Text
nm=LF_ClosePanel
mtime=3602449494
<article>
#_<markdown>
#_    void LF_ClosePanel(lua_State* L, const struct ClosePanelInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_If Lua function [`export.ClosePanel`](94.html) exists, it is called.
#_Then, the resources associated with the plugin are freed.
#_
#_@@@
#_{closepanelinfo}: http://api.farmanager.com/ru/structures/closepanelinfo.html
#_
</article>
</node>
<node>
id=159
lv=2
dt=Text
nm=LF_Compare
mtime=3601970171
<article>
#_<markdown>
#_    intptr_t LF_Compare(lua_State* L, const struct CompareInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      comparison result
#_
#_#### Description:
#_
#_If Lua function [`export.Compare`](95.html) exists, it is called,
#_else `-2` is returned (directing to use the default FAR compare
#_function).
#_
#_@@@
#_{compareinfo}: http://api.farmanager.com/ru/structures/compareinfo.html
#_
</article>
</node>
<node>
id=160
lv=2
dt=Text
nm=LF_Configure
mtime=3602449552
<article>
#_<markdown>
#_    intptr_t LF_Configure(lua_State* L, const struct ConfigureInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      a boolean (success or failure)
#_
#_#### Description:
#_
#_If Lua function [`export.Configure`](96.html) exists, it is called,
#_else `FALSE` is returned.
#_
#_@@@
#_{configureinfo}: http://api.farmanager.com/ru/structures/configureinfo.html
#_
</article>
</node>
<node>
id=161
lv=2
dt=Text
nm=LF_DeleteFiles
mtime=3601970180
<article>
#_<markdown>
#_    intptr_t LF_DeleteFiles(lua_State* L, const struct DeleteFilesInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      a boolean (success or failure)
#_
#_#### Description:
#_
#_If Lua function [`export.DeleteFiles`](97.html) exists, it is called,
#_else `FALSE` is returned.
#_
#_@@@
#_{deletefilesinfo}: http://api.farmanager.com/ru/structures/deletefilesinfo.html
#_
</article>
</node>
<node>
id=436
lv=2
dt=Text
nm=LF_DlgProc
ctime=3511601410
mtime=3601970185
<article>
#_<markdown>
#_    intptr_t LF_DlgProc (lua_State *L, HANDLE hDlg, intptr_t Msg, intptr_t Param1, void* Param2)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_This function is called only if the 9-th argument (`DlgProc`)
#_passed to [`far.DialogInit`](378.html) was a function.
#_
#_@@@
#_{dlgproc}: http://api.farmanager.com/ru/defs/dlgproc.html
#_
</article>
</node>
<node>
id=162
lv=2
dt=Text
nm=LF_ExitFAR
mtime=3602449616
<article>
#_<markdown>
#_    void LF_ExitFAR(lua_State* L, const struct ExitInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_First, the acquired resources are freed. Then, if Lua function [`export.ExitFAR`](98.html) exists, it is called.
#_
#_@@@
#_{exitinfo}: http://api.farmanager.com/ru/structures/exitinfo.html
#_
</article>
</node>
<node>
id=368
lv=2
dt=Text
nm=LF_FreeCustomData
ctime=3485769061
mtime=3602449699
<article>
#_<markdown>
#_    void LF_FreeCustomData (lua_State* L, wchar_t* CustomData)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_No Lua function is called. LuaFAR frees the "custom data" internally.
#_
#_
</article>
</node>
<node>
id=163
lv=2
dt=Text
nm=LF_FreeFindData
mtime=3601970198
<article>
#_<markdown>
#_    void LF_FreeFindData(lua_State* L, const struct FreeFindDataInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_No Lua function is called. LuaFAR frees the "find data" internally.
#_
#_@@@
#_{freefinddatainfo}: http://api.farmanager.com/ru/structures/freefinddatainfo.html
#_
</article>
</node>
<node>
id=366
lv=2
dt=Text
nm=LF_GetCustomData
ctime=3485766195
mtime=3601970202
<article>
#_<markdown>
#_    intptr_t LF_GetCustomData(
#_        lua_State* L, const wchar_t *FilePath, wchar_t **CustomData)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.GetCustomData`](364.html) exists, it is called,
#_else `0` is returned.
#_
#_
</article>
</node>
<node>
id=165
lv=2
dt=Text
nm=LF_GetFiles
mtime=3601970206
<article>
#_<markdown>
#_    intptr_t LF_GetFiles (lua_State* L, struct GetFilesInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.GetFiles`](101.html) exists, it is called,
#_else `0` is returned.
#_
#_@@@
#_{getfilesinfo}: http://api.farmanager.com/ru/structures/getfilesinfo.html
#_
</article>
</node>
<node>
id=166
lv=2
dt=Text
nm=LF_GetFindData
mtime=3601970212
<article>
#_<markdown>
#_    intptr_t LF_GetFindData(lua_State* L, struct GetFindDataInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.GetFindData`](102.html) exists,
#_it is called, else `FALSE` is returned.
#_
#_@@@
#_{getfinddatainfo}: http://api.farmanager.com/ru/structures/getfinddatainfo.html
#_
</article>
</node>
<node>
id=407
lv=2
dt=Text
nm=LF_GetGlobalInfo
ctime=3507489886
mtime=3601970216
<article>
#_<markdown>
#_    int LF_GetGlobalInfo (lua_State* L, struct GlobalInfo *Info, const wchar_t *PluginDir)
#_
#_#### Parameters:
#_      L:         Lua state
#_      Info:      Pointer to a GlobalInfo struct
#_      PluginDir: Plugin directory
#_
#_#### Returns:
#_      TRUE on success, FALSE otherwise
#_
#_#### Description:
#_
#_First, the function tries to `require` a module with the predefined name **`<_globalinfo`**. If `package.preload["<_globalinfo"]` contains a function, then it is run.
#_
#_Else, the file **_globalinfo.lua** is searched in the plugin's directory and run if found.
#_
#_Then, if Lua function [`export.GetGlobalInfo`](402.html) exists, it is called.
#_
#_@@@
#_{globalinfo}: http://api.farmanager.com/ru/structures/globalinfo.html
#_
</article>
</node>
<node>
id=168
lv=2
dt=Text
nm=LF_GetOpenPanelInfo
mtime=3601970220
<article>
#_<markdown>
#_    void LF_GetOpenPanelInfo(lua_State* L, struct OpenPanelInfo *aInfo)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_If Lua function [`export.GetOpenPanelInfo`](104.html) exists, it is called.
#_
#_@@@
#_{openpanelinfo}: http://api.farmanager.com/ru/structures/openpanelinfo.html
#_
</article>
</node>
<node>
id=169
lv=2
dt=Text
nm=LF_GetPluginInfo
mtime=3601970224
<article>
#_<markdown>
#_    void LF_GetPluginInfo(lua_State* L, struct PluginInfo *PI)
#_
#_#### Parameters:
#_      L:       Lua state
#_      PI:      Pointer to a PluginInfo struct
#_
#_#### Returns:
#_      nothing
#_
#_#### Description:
#_
#_If Lua function [`export.GetPluginInfo`](105.html) exists, it is called.
#_
#_@@@
#_{plugininfo}: http://api.farmanager.com/ru/structures/plugininfo.html
#_
</article>
</node>
<node>
id=171
lv=2
dt=Text
nm=LF_MakeDirectory
mtime=3601970227
<article>
#_<markdown>
#_    intptr_t LF_MakeDirectory (lua_State* L, struct MakeDirectoryInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.MakeDirectory`](107.html) exists, it is called.
#_
#_@@@
#_{makedirectoryinfo}: http://api.farmanager.com/ru/structures/makedirectoryinfo.html
#_
</article>
</node>
<node>
id=173
lv=2
dt=Text
nm=LF_Open
mtime=3737613834
<article>
#_<markdown>
#_    HANDLE LF_Open (lua_State* L, const struct OpenInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If `far.ReloadDefaultScript` is true, then the function runs the default script (see [`LF_RunDefaultScript`](130.html)). Then, if Lua function [`export.Open`](109.html) exists, it is called. Else, `NULL` is returned to FAR.
#_
#_@@@
#_{openinfo}: http://api.farmanager.com/ru/structures/openinfo.html
#_
</article>
</node>
<node>
id=480
lv=2
dt=Text
nm=LF_ProcessConsoleInput
ctime=3557661157
mtime=3601970233
<article>
#_<markdown>
#_    intptr_t LF_ProcessConsoleInput(lua_State* L, struct ProcessConsoleInputInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessConsoleInput`](481.html) exists, it is called.
#_Else, `0` is returned.
#_
#_@@@
#_{processconsoleinputinfo}: http://api.farmanager.com/ru/structures/processconsoleinputinfo.html
#_
</article>
</node>
<node>
id=222
lv=2
dt=Text
nm=LF_ProcessDialogEvent
mtime=3601970236
<article>
#_<markdown>
#_    intptr_t LF_ProcessDialogEvent (lua_State* L, const struct ProcessDialogEventInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.ProcessDialogEvent`](221.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_{processdialogeventinfo}: http://api.farmanager.com/ru/structures/processdialogeventinfo.html
#_
</article>
</node>
<node>
id=174
lv=2
dt=Text
nm=LF_ProcessEditorEvent
mtime=3601970239
<article>
#_<markdown>
#_    intptr_t LF_ProcessEditorEvent (lua_State* L, const struct ProcessEditorEventInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.ProcessEditorEvent`](110.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_{processeditoreventinfo}: http://api.farmanager.com/ru/structures/processeditoreventinfo.html
#_
</article>
</node>
<node>
id=175
lv=2
dt=Text
nm=LF_ProcessEditorInput
mtime=3601970243
<article>
#_<markdown>
#_    intptr_t LF_ProcessEditorInput (lua_State* L, const struct ProcessEditorInputInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessEditorInput`](111.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_{processeditorinputinfo}: http://api.farmanager.com/ru/structures/processeditorinputinfo.html
#_
</article>
</node>
<node>
id=176
lv=2
dt=Text
nm=LF_ProcessPanelEvent
mtime=3602449785
<article>
#_<markdown>
#_    intptr_t LF_ProcessPanelEvent(lua_State* L, const struct ProcessPanelEventInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessPanelEvent`](112.html) exists, it is called.
#_Else, `0` is returned.
#_
#_@@@
#_{processpaneleventinfo}: http://api.farmanager.com/ru/structures/processpaneleventinfo.html
#_
</article>
</node>
<node>
id=177
lv=2
dt=Text
nm=LF_ProcessHostFile
mtime=3601970248
<article>
#_<markdown>
#_    intptr_t LF_ProcessHostFile(lua_State* L, const struct ProcessHostFileInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessHostFile`](113.html) exists,
#_it is called. Else, `FALSE` is returned.
#_
#_@@@
#_{processhostfileinfo}: http://api.farmanager.com/ru/structures/processhostfileinfo.html
#_
</article>
</node>
<node>
id=178
lv=2
dt=Text
nm=LF_ProcessPanelInput
mtime=3601970250
<article>
#_<markdown>
#_    intptr_t LF_ProcessPanelInput(lua_State* L, const struct ProcessPanelInputInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.ProcessPanelInput`](457.html) exists, it is called.
#_Else, `FALSE` is returned.
#_
#_@@@
#_{processpanelinputinfo}: http://api.farmanager.com/ru/structures/processpanelinputinfo.html
#_
</article>
</node>
<node>
id=318
lv=2
dt=Text
nm=LF_ProcessSynchroEvent
ctime=3480185179
mtime=3601970253
<article>
#_<markdown>
#_    intptr_t LF_ProcessSynchroEvent (lua_State* L, const struct ProcessSynchroEventInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.ProcessSynchroEvent`](319.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_{processsynchroeventinfo}: http://api.farmanager.com/ru/structures/processsynchroeventinfo.html
#_
</article>
</node>
<node>
id=179
lv=2
dt=Text
nm=LF_ProcessViewerEvent
mtime=3601970255
<article>
#_<markdown>
#_    intptr_t LF_ProcessViewerEvent (lua_State* L, const struct ProcessViewerEventInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.ProcessViewerEvent`](127.html) exists, it is called. Else, `0` is returned.
#_
#_@@@
#_{processviewereventinfo}: http://api.farmanager.com/ru/structures/processviewereventinfo.html
#_
</article>
</node>
<node>
id=180
lv=2
dt=Text
nm=LF_PutFiles
mtime=3601970258
<article>
#_<markdown>
#_    intptr_t LF_PutFiles(lua_State* L, const struct PutFilesInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.PutFiles`](115.html) exists, it is called.
#_Else, `0` is returned.
#_
#_@@@
#_{putfilesinfo}: http://api.farmanager.com/ru/structures/putfilesinfo.html
#_
</article>
</node>
<node>
id=181
lv=2
dt=Text
nm=LF_SetDirectory
mtime=3601970261
<article>
#_<markdown>
#_    intptr_t LF_SetDirectory(lua_State* L, const struct SetDirectoryInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_If Lua function [`export.SetDirectory`](116.html) exists, it is called.
#_Else, `0` is returned.
#_
#_@@@
#_{setdirectoryinfo}: http://api.farmanager.com/ru/structures/setdirectoryinfo.html
#_
</article>
</node>
<node>
id=182
lv=2
dt=Text
nm=LF_SetFindList
mtime=3601970263
<article>
#_<markdown>
#_    intptr_t LF_SetFindList(lua_State* L, const struct SetFindListInfo *Info)
#_
#_#### Parameters:
#_      L:       Lua state
#_      ....
#_
#_#### Returns:
#_      Value, according to FAR Plugins API.
#_
#_#### Description:
#_
#_If Lua function [`export.SetFindList`](117.html) exists, it is called.
#_Else, `FALSE` is returned.
#_
#_@@@
#_{setfindlistinfo}: http://api.farmanager.com/ru/structures/setfindlistinfo.html
#_
</article>
</node>
<node>
id=184
lv=1
dt=Text
nm=Service functions
<article>
</article>
</node>
<node>
id=475
lv=2
dt=Text
nm=LF_DoFile
ctime=3542468968
mtime=3628517896
<article>
#_<markdown>
#_    int LF_DoFile (lua_State *L, const wchar_t *filename, int argc, wchar_t *argv[])
#_
#_#### Description:
#_
#_Runs Lua script *filename* passing it *argc* string arguments from *argv*.
#_The script receives the arguments in UTF-8 encoding. The function returns 0
#_if no error occured. Otherwise, it prints error message on *stderr* and returns
#_an error code.
#_
#_This function can be used for testing some LuaFAR libraries (`bit64`, `win`, `unicode`)
#_and functions (`require`, `package.loadlib`, etc.) from an application that is not Far
#_plugin, for example:
#_
#_        #include "luafar.h"
#_        int wmain (int argc, wchar_t* argv[])
#_        {
#_          int status = 0;
#_          if (argc >= 2) {
#_            lua_State *L = lua_open();
#_            LF_InitLuaState1(L, NULL);
#_            status = LF_DoFile(L, argv[1], argc-2, argv+2);
#_            lua_close(L);
#_          }
#_          return status;
#_        }
#_
#_
</article>
</node>
<node>
id=341
lv=2
dt=Text
nm=LF_Gsub
ctime=3481108972
mtime=3601970270
<article>
#_<markdown>
#_    const wchar_t *LF_Gsub (lua_State *L, const wchar_t *s,
#_                            const wchar_t *p, const wchar_t *r)
#_
#_#### Description:
#_
#_The function can be used as a replacement for `luaL_gsub`,
#_working with wide char parameters, otherwise identical.
#_
#_
</article>
</node>
<node>
id=340
lv=2
dt=Text
nm=LF_LoadFile
ctime=3481108964
mtime=3601970273
<article>
#_<markdown>
#_    int LF_LoadFile (lua_State *L, const wchar_t *filename)
#_
#_#### Description:
#_
#_The function can be used as a replacement for `luaL_loadfile`,
#_working with wide char *filename* parameter, otherwise identical.
#_
#_
</article>
</node>
<node>
id=156
lv=2
dt=Text
nm=LF_Message
mtime=3602450753
<article>
#_<markdown>
#_    int LF_Message(
#_        PluginStartupInfo *Info,
#_        const wchar_t *Msg,
#_        const wchar_t *Title,
#_        const wchar_t *Buttons,
#_        const char    *Flags,
#_        const wchar_t *HelpTopic)
#_
#_#### Parameters:
#_      Info:        Pointer to a static struct that must be already
#_                   initialized during SetStartupInfo call.
#_      Msg:         Message text; if multiline, then the lines must be
#_                   separated by '\n'
#_      Title:       Message box title
#_      Buttons:     Button captions; if multiple, then the captions
#_                   must be separated by ';'
#_      Flags:       A combination of the following characters:
#_                     'w' stands for FMSG_WARNING
#_                     'e' stands for FMSG_ERRORTYPE
#_                     'k' stands for FMSG_KEEPBACKGROUND
#_                     'l' stands for FMSG_LEFTALIGN
#_                     'n' stands for "no wrapping of long lines"
#_      HelpTopic:   Help Topic (can be NULL)
#_
#_#### Returns:
#_      -1 if escape pressed, else - button number chosen (0 based).
#_
#_#### Description:
#_This is an alternative interface to the FAR function `Message`.
#_
#_@@@
#_{fmsg_errortype}: http://api.farmanager.com/ru/service_functions/message.html#FMSG_ERRORTYPE
#_{fmsg_keepbackground}: http://api.farmanager.com/ru/service_functions/message.html#FMSG_KEEPBACKGROUND
#_{fmsg_leftalign}: http://api.farmanager.com/ru/service_functions/message.html#FMSG_LEFTALIGN
#_{fmsg_warning}: http://api.farmanager.com/ru/service_functions/message.html#FMSG_WARNING
#_{pluginstartupinfo}: http://api.farmanager.com/ru/structures/pluginstartupinfo.html
#_
</article>
</node>
<node>
id=385
lv=2
dt=Text
nm=LF_InitLuaState1
ctime=3497514263
mtime=3601970278
<article>
#_<markdown>
#_    void LF_InitLuaState1 (lua_State* L, lua_CFunction OpenLibs)
#_
#_#### Parameters:
#_      L:            Lua state.
#_
#_      OpenLibs:     Pointer to a function that can open additional
#_                    libraries. (NULL is allowed.)
#_
#_#### Description:
#_
#_This function is called by the plugin during **`GetGlobalInfoW`** call.
#_It opens the standard Lua libraries, [`win`](430.html), [`bit64`](405.html) and
#_[`unicode`](250.html) libraries and calls `OpenLibs` function.
#_
#_@@@
#_{getglobalinfow}: http://api.farmanager.com/ru/exported_functions/getglobalinfow.html
#_
</article>
</node>
<node>
id=423
lv=2
dt=Text
nm=LF_InitLuaState2
ctime=3507652269
mtime=3601970281
<article>
#_<markdown>
#_    void LF_InitLuaState2 (lua_State *L, TPluginData *Data)
#_
#_#### Parameters:
#_      L:     Lua state.
#_
#_      Data:  Pointer to the struct containing specific plugin data.
#_
#_#### Description:
#_
#_This function is called by the plugin during **`SetStartupInfoW`** call. It stores pointer to the plugin's data within the Lua state, making them available to all LuaFAR functions. Then it loads [`far`](131.html) library.
#_
#_@@@
#_{setstartupinfow}: http://api.farmanager.com/ru/exported_functions/setstartupinfow.html
#_
</article>
</node>
<node>
id=510
lv=2
dt=Text
nm=LF_RunLuafarInit
ctime=3639761355
mtime=3639762183
<article>
#_<markdown>
#_    void LF_LuafarInit (lua_State *L)
#_
#_#### Parameters:
#_      L:     Lua state.
#_
#_#### Description:
#_
#_This function executes the file `%FARPROFILE%\luafar_init.lua` if such a file exists.
#_It should be called **before** the first run of the plugin's default script.
#_
#_@@@
#_{setstartupinfow}: http://api.farmanager.com/ru/exported_functions/setstartupinfow.html
#_
</article>
</node>
<node>
id=130
lv=2
dt=Text
nm=LF_RunDefaultScript
mtime=3737570768
<article>
#_<markdown>
#_    BOOL LF_RunDefaultScript(lua_State* L)
#_
#_#### Parameters:
#_      L:          Lua state
#_
#_#### Returns:
#_      TRUE if successful, FALSE otherwise
#_
#_#### Description:
#_
#_First, the function tries to `require` a module with the predefined name `<boot`. If `package.preload["<boot"]` contains a function, then it is run.
#_
#_Else, the starting (or "default") Lua script is searched in the plugin's directory, in the following order:
#_
#_1. The plugin name with the extension `.lua`, e.g.: `luaplug.dll -> luaplug.lua`
#_
#_2. If the plugin name contains a hyphen, then its part preceding the last hyphen is looked for, e.g.: `luaplug-x64.dll -> luaplug.lua`.
#_
#_This mechanism allows the default script to be either embedded into the application or external.
#_
#_#### See also:
#_
#_[`far.RunDefaultScript`](527.html)
#_
</article>
</node>
<node>
id=499
lv=2
dt=Text
nm=LF_GetLuafarAPI
ctime=3623763390
mtime=3623764911
<article>
#_<markdown>
#_    void LF_GetLuafarAPI (LuafarAPI *target);
#_
#_#### Parameters:
#_      target:  pointer to a LuafarAPI struct.
#_               The field 'StructSize' must be initialized by the caller.
#_               On function return, this field is set by the function.
#_
#_#### Description:
#_
#_`LF_GetLuafarAPI` allows to get many service and convenience functions
#_of LuaFAR for use in the C-part of the plugin.
</article>
</node>
<node>
id=194
lv=0
dt=Text
nm=Third party software used
mtime=3776452169
<article>
#_<markdown>
#_The following third party software is used as part of LuaFAR:
#_
#_1. [Lua 5.1](196.html)
#_1. [luautf8](538.html)
#_
#_Many thanks to the authors for making their great software available!
#_
#_
</article>
</node>
<node>
id=196
lv=1
dt=Text
nm=Lua 5.1
<article>
#_<markdown>
#_Lua is licensed under the terms of the MIT license reproduced below.
#_This means that Lua is free software and can be used for both academic
#_and commercial purposes at absolutely no cost.
#_
#_For details and rationale, see http://www.lua.org/license.html .
#_
#_<HR>
#_
#_Copyright (C) 1994-2008 Lua.org, PUC-Rio.
#_
#_Permission is hereby granted, free of charge, to any person obtaining a copy
#_of this software and associated documentation files (the "Software"), to deal
#_in the Software without restriction, including without limitation the rights
#_to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#_copies of the Software, and to permit persons to whom the Software is
#_furnished to do so, subject to the following conditions:
#_
#_The above copyright notice and this permission notice shall be included in
#_all copies or substantial portions of the Software.
#_
#_THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#_IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#_FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
#_AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#_LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#_OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#_THE SOFTWARE.
#_
#_
</article>
</node>
<node>
id=538
lv=1
dt=Text
nm=luautf8
ctime=3776336382
mtime=3776336416
<article>
#_MIT License
#_
#_Copyright (c) 2018 Xavier Wang
#_
#_Permission is hereby granted, free of charge, to any person obtaining a copy
#_of this software and associated documentation files (the "Software"), to deal
#_in the Software without restriction, including without limitation the rights
#_to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#_copies of the Software, and to permit persons to whom the Software is
#_furnished to do so, subject to the following conditions:
#_
#_The above copyright notice and this permission notice shall be included in all
#_copies or substantial portions of the Software.
#_
#_THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#_IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#_FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#_AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#_LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#_OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#_SOFTWARE.
</article>
</node>
<node>
id=550
lv=0
dt=Text
nm=Usage without Far Manager
ctime=3792399244
mtime=3792403649
<article>
#_<markdown>
#_`luafar3.dll` can be used in Lua scripts independently of Far Manager. Only part of its functionality is available in this case.
#_
#_It should be invoked as *require "luafar3"*.
#_
#_When the library is `require()`'d the following global variables are set:
#_
#_  - [`bit64`](405.html)
#_  - [`utf8`](537.html)
#_  - [`win`](430.html)
#_  - `luafar`
#_
#_`luafar` namespace contains the following functions:
#_
#_  - `FileTimeResolution` (same as [`far.FileTimeResolution`](544.html))
#_  - `GetLuafarVersion` (same as [`far.GetLuafarVersion`](549.html))
#_
#_Also: the `__index` field of the strings metatable is modified to point to [`utf8`](537.html) table, rather than to `string` table.<br>
#_That means `("abc"):match("b")` is equivalent to `utf8.match("abc", "b")`
#_rather than to `string.match("abc", "b")`.<br>
#_
#_
#_@@@
#_
</article>
</node>
